{"version":3,"sources":["../../src/duplicateDocument/index.ts"],"sourcesContent":["import type { SanitizedCollectionConfig } from '../collections/config/types.js'\nimport type { FindOneArgs } from '../database/types.js'\nimport type { JsonObject, PayloadRequest } from '../types/index.js'\n\nimport { executeAccess } from '../auth/executeAccess.js'\nimport { hasWhereAccessResult } from '../auth/types.js'\nimport { combineQueries } from '../database/combineQueries.js'\nimport { Forbidden } from '../errors/Forbidden.js'\nimport { NotFound } from '../errors/NotFound.js'\nimport { afterRead } from '../fields/hooks/afterRead/index.js'\nimport { beforeDuplicate } from '../fields/hooks/beforeDuplicate/index.js'\nimport { deepCopyObjectSimple } from '../utilities/deepCopyObject.js'\nimport { getLatestCollectionVersion } from '../versions/getLatestCollectionVersion.js'\n\ntype GetDuplicateDocumentArgs = {\n  collectionConfig: SanitizedCollectionConfig\n  draftArg?: boolean\n  id: number | string\n  overrideAccess?: boolean\n  req: PayloadRequest\n  shouldSaveDraft?: boolean\n}\nexport const getDuplicateDocumentData = async ({\n  id,\n  collectionConfig,\n  draftArg,\n  overrideAccess,\n  req,\n  shouldSaveDraft,\n}: GetDuplicateDocumentArgs): Promise<{\n  duplicatedFromDoc: JsonObject\n  duplicatedFromDocWithLocales: JsonObject\n}> => {\n  const { payload } = req\n  // /////////////////////////////////////\n  // Read Access\n  // /////////////////////////////////////\n\n  const accessResults = !overrideAccess\n    ? await executeAccess({ id, req }, collectionConfig.access.read)\n    : true\n  const hasWherePolicy = hasWhereAccessResult(accessResults)\n\n  // /////////////////////////////////////\n  // Retrieve document\n  // /////////////////////////////////////\n  const findOneArgs: FindOneArgs = {\n    collection: collectionConfig.slug,\n    locale: req.locale!,\n    req,\n    where: combineQueries({ id: { equals: id } }, accessResults),\n  }\n\n  let duplicatedFromDocWithLocales = await getLatestCollectionVersion({\n    id,\n    config: collectionConfig,\n    payload,\n    query: findOneArgs,\n    req,\n  })\n\n  if (!duplicatedFromDocWithLocales && !hasWherePolicy) {\n    throw new NotFound(req.t)\n  }\n  if (!duplicatedFromDocWithLocales && hasWherePolicy) {\n    throw new Forbidden(req.t)\n  }\n\n  // remove the createdAt timestamp and rely on the db to set it\n  if ('createdAt' in duplicatedFromDocWithLocales) {\n    delete duplicatedFromDocWithLocales.createdAt\n  }\n  // remove the id and rely on the db to set it\n  if ('id' in duplicatedFromDocWithLocales) {\n    delete duplicatedFromDocWithLocales.id\n  }\n\n  duplicatedFromDocWithLocales = await beforeDuplicate({\n    id,\n    collection: collectionConfig,\n    context: req.context,\n    doc: duplicatedFromDocWithLocales,\n    overrideAccess: overrideAccess!,\n    req,\n  })\n\n  // for version enabled collections, override the current status with draft, unless draft is explicitly set to false\n  if (shouldSaveDraft) {\n    duplicatedFromDocWithLocales._status = 'draft'\n  }\n\n  const duplicatedFromDoc = await afterRead({\n    collection: collectionConfig,\n    context: req.context,\n    depth: 0,\n    doc: deepCopyObjectSimple(duplicatedFromDocWithLocales),\n    draft: draftArg!,\n    fallbackLocale: null,\n    global: null,\n    locale: req.locale!,\n    overrideAccess: true,\n    req,\n    showHiddenFields: true,\n  })\n\n  return { duplicatedFromDoc, duplicatedFromDocWithLocales }\n}\n"],"names":["executeAccess","hasWhereAccessResult","combineQueries","Forbidden","NotFound","afterRead","beforeDuplicate","deepCopyObjectSimple","getLatestCollectionVersion","getDuplicateDocumentData","id","collectionConfig","draftArg","overrideAccess","req","shouldSaveDraft","payload","accessResults","access","read","hasWherePolicy","findOneArgs","collection","slug","locale","where","equals","duplicatedFromDocWithLocales","config","query","t","createdAt","context","doc","_status","duplicatedFromDoc","depth","draft","fallbackLocale","global","showHiddenFields"],"mappings":"AAIA,SAASA,aAAa,QAAQ,2BAA0B;AACxD,SAASC,oBAAoB,QAAQ,mBAAkB;AACvD,SAASC,cAAc,QAAQ,gCAA+B;AAC9D,SAASC,SAAS,QAAQ,yBAAwB;AAClD,SAASC,QAAQ,QAAQ,wBAAuB;AAChD,SAASC,SAAS,QAAQ,qCAAoC;AAC9D,SAASC,eAAe,QAAQ,2CAA0C;AAC1E,SAASC,oBAAoB,QAAQ,iCAAgC;AACrE,SAASC,0BAA0B,QAAQ,4CAA2C;AAUtF,OAAO,MAAMC,2BAA2B,OAAO,EAC7CC,EAAE,EACFC,gBAAgB,EAChBC,QAAQ,EACRC,cAAc,EACdC,GAAG,EACHC,eAAe,EACU;IAIzB,MAAM,EAAEC,OAAO,EAAE,GAAGF;IACpB,wCAAwC;IACxC,cAAc;IACd,wCAAwC;IAExC,MAAMG,gBAAgB,CAACJ,iBACnB,MAAMb,cAAc;QAAEU;QAAII;IAAI,GAAGH,iBAAiBO,MAAM,CAACC,IAAI,IAC7D;IACJ,MAAMC,iBAAiBnB,qBAAqBgB;IAE5C,wCAAwC;IACxC,oBAAoB;IACpB,wCAAwC;IACxC,MAAMI,cAA2B;QAC/BC,YAAYX,iBAAiBY,IAAI;QACjCC,QAAQV,IAAIU,MAAM;QAClBV;QACAW,OAAOvB,eAAe;YAAEQ,IAAI;gBAAEgB,QAAQhB;YAAG;QAAE,GAAGO;IAChD;IAEA,IAAIU,+BAA+B,MAAMnB,2BAA2B;QAClEE;QACAkB,QAAQjB;QACRK;QACAa,OAAOR;QACPP;IACF;IAEA,IAAI,CAACa,gCAAgC,CAACP,gBAAgB;QACpD,MAAM,IAAIhB,SAASU,IAAIgB,CAAC;IAC1B;IACA,IAAI,CAACH,gCAAgCP,gBAAgB;QACnD,MAAM,IAAIjB,UAAUW,IAAIgB,CAAC;IAC3B;IAEA,8DAA8D;IAC9D,IAAI,eAAeH,8BAA8B;QAC/C,OAAOA,6BAA6BI,SAAS;IAC/C;IACA,6CAA6C;IAC7C,IAAI,QAAQJ,8BAA8B;QACxC,OAAOA,6BAA6BjB,EAAE;IACxC;IAEAiB,+BAA+B,MAAMrB,gBAAgB;QACnDI;QACAY,YAAYX;QACZqB,SAASlB,IAAIkB,OAAO;QACpBC,KAAKN;QACLd,gBAAgBA;QAChBC;IACF;IAEA,mHAAmH;IACnH,IAAIC,iBAAiB;QACnBY,6BAA6BO,OAAO,GAAG;IACzC;IAEA,MAAMC,oBAAoB,MAAM9B,UAAU;QACxCiB,YAAYX;QACZqB,SAASlB,IAAIkB,OAAO;QACpBI,OAAO;QACPH,KAAK1B,qBAAqBoB;QAC1BU,OAAOzB;QACP0B,gBAAgB;QAChBC,QAAQ;QACRf,QAAQV,IAAIU,MAAM;QAClBX,gBAAgB;QAChBC;QACA0B,kBAAkB;IACpB;IAEA,OAAO;QAAEL;QAAmBR;IAA6B;AAC3D,EAAC"}