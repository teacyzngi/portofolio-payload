{"version":3,"sources":["../../src/database/createDatabaseAdapter.ts"],"sourcesContent":["import type { MarkOptional } from 'ts-essentials'\n\nimport type {\n  BaseDatabaseAdapter,\n  BeginTransaction,\n  CommitTransaction,\n  RollbackTransaction,\n} from './types.js'\n\nimport { defaultUpdateJobs } from './defaultUpdateJobs.js'\nimport { createMigration } from './migrations/createMigration.js'\nimport { migrate } from './migrations/migrate.js'\nimport { migrateDown } from './migrations/migrateDown.js'\nimport { migrateRefresh } from './migrations/migrateRefresh.js'\nimport { migrateReset } from './migrations/migrateReset.js'\nimport { migrateStatus } from './migrations/migrateStatus.js'\n\nconst beginTransaction: BeginTransaction = () => Promise.resolve(null)\n// @ts-expect-error - vestiges of when tsconfig was not strict. Feel free to improve\nconst rollbackTransaction: RollbackTransaction = () => Promise.resolve(null)\n// @ts-expect-error - vestiges of when tsconfig was not strict. Feel free to improve\nconst commitTransaction: CommitTransaction = () => Promise.resolve(null)\n\nexport function createDatabaseAdapter<T extends BaseDatabaseAdapter>(\n  args: MarkOptional<\n    T,\n    | 'allowIDOnCreate'\n    | 'createMigration'\n    | 'migrate'\n    | 'migrateDown'\n    | 'migrateFresh'\n    | 'migrateRefresh'\n    | 'migrateReset'\n    | 'migrateStatus'\n    | 'migrationDir'\n    | 'updateJobs'\n  >,\n): T {\n  return {\n    // Default 'null' transaction functions\n    // @ts-expect-error - vestiges of when tsconfig was not strict. Feel free to improve\n    beginTransaction,\n    // @ts-expect-error - vestiges of when tsconfig was not strict. Feel free to improve\n    commitTransaction,\n    createMigration,\n    migrate,\n    migrateDown,\n    migrateFresh: () => Promise.resolve(null),\n    migrateRefresh,\n    migrateReset,\n    migrateStatus,\n    // @ts-expect-error - vestiges of when tsconfig was not strict. Feel free to improve\n    rollbackTransaction,\n    updateJobs: defaultUpdateJobs,\n\n    ...args,\n    // Ensure migrationDir is set\n    migrationDir: args.migrationDir || 'migrations',\n  } as T\n}\n"],"names":["defaultUpdateJobs","createMigration","migrate","migrateDown","migrateRefresh","migrateReset","migrateStatus","beginTransaction","Promise","resolve","rollbackTransaction","commitTransaction","createDatabaseAdapter","args","migrateFresh","updateJobs","migrationDir"],"mappings":"AASA,SAASA,iBAAiB,QAAQ,yBAAwB;AAC1D,SAASC,eAAe,QAAQ,kCAAiC;AACjE,SAASC,OAAO,QAAQ,0BAAyB;AACjD,SAASC,WAAW,QAAQ,8BAA6B;AACzD,SAASC,cAAc,QAAQ,iCAAgC;AAC/D,SAASC,YAAY,QAAQ,+BAA8B;AAC3D,SAASC,aAAa,QAAQ,gCAA+B;AAE7D,MAAMC,mBAAqC,IAAMC,QAAQC,OAAO,CAAC;AACjE,oFAAoF;AACpF,MAAMC,sBAA2C,IAAMF,QAAQC,OAAO,CAAC;AACvE,oFAAoF;AACpF,MAAME,oBAAuC,IAAMH,QAAQC,OAAO,CAAC;AAEnE,OAAO,SAASG,sBACdC,IAYC;IAED,OAAO;QACL,uCAAuC;QACvC,oFAAoF;QACpFN;QACA,oFAAoF;QACpFI;QACAV;QACAC;QACAC;QACAW,cAAc,IAAMN,QAAQC,OAAO,CAAC;QACpCL;QACAC;QACAC;QACA,oFAAoF;QACpFI;QACAK,YAAYf;QAEZ,GAAGa,IAAI;QACP,6BAA6B;QAC7BG,cAAcH,KAAKG,YAAY,IAAI;IACrC;AACF"}