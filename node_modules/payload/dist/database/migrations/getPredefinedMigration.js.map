{"version":3,"sources":["../../../src/database/migrations/getPredefinedMigration.ts"],"sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport { pathToFileURL } from 'url'\n\nimport type { Payload } from '../../index.js'\nimport type { MigrationTemplateArgs } from '../types.js'\n\n/**\n * Get predefined migration 'up', 'down' and 'imports'\n */\nexport const getPredefinedMigration = async ({\n  dirname,\n  file,\n  migrationName: migrationNameArg,\n  payload,\n}: {\n  dirname: string\n  file?: string\n  migrationName?: string\n  payload: Payload\n}): Promise<MigrationTemplateArgs> => {\n  // Check for predefined migration.\n  // Either passed in via --file or prefixed with '@payloadcms/db-mongodb/' for example\n  const importPath = file ?? migrationNameArg\n\n  if (importPath?.startsWith('@payloadcms/db-')) {\n    // removes the package name from the migrationName.\n    const migrationName = importPath.split('/').slice(2).join('/')\n    let cleanPath = path.join(dirname, `./predefinedMigrations/${migrationName}`)\n    if (fs.existsSync(`${cleanPath}.mjs`)) {\n      cleanPath = `${cleanPath}.mjs`\n    } else if (fs.existsSync(`${cleanPath}.js`)) {\n      cleanPath = `${cleanPath}.js`\n    } else {\n      payload.logger.error({\n        msg: `Canned migration ${migrationName} not found.`,\n      })\n      process.exit(1)\n    }\n    cleanPath = cleanPath.replaceAll('\\\\', '/')\n    const moduleURL = pathToFileURL(cleanPath)\n    try {\n      const { downSQL, imports, upSQL } = await eval(`import('${moduleURL.href}')`)\n      return {\n        downSQL,\n        imports,\n        upSQL,\n      }\n    } catch (err) {\n      payload.logger.error({\n        err,\n        msg: `Error loading predefined migration ${migrationName}`,\n      })\n      process.exit(1)\n    }\n  } else if (importPath) {\n    try {\n      const { downSQL, imports, upSQL } = await eval(`import('${importPath}')`)\n      return {\n        downSQL,\n        imports,\n        upSQL,\n      }\n    } catch (_err) {\n      if (importPath?.includes('/')) {\n        // We can assume that the intent was to import a file, thus we throw an error.\n        throw new Error(`Error importing migration file from ${importPath}`)\n      }\n      // Silently fail. If the migration cannot be imported, it will be created as a blank migration and the import path will be used as the migration name.\n      return {}\n    }\n  }\n  return {}\n}\n"],"names":["fs","path","pathToFileURL","getPredefinedMigration","dirname","file","migrationName","migrationNameArg","payload","importPath","startsWith","split","slice","join","cleanPath","existsSync","logger","error","msg","process","exit","replaceAll","moduleURL","downSQL","imports","upSQL","eval","href","err","_err","includes","Error"],"mappings":"AAAA,OAAOA,QAAQ,KAAI;AACnB,OAAOC,UAAU,OAAM;AACvB,SAASC,aAAa,QAAQ,MAAK;AAKnC;;CAEC,GACD,OAAO,MAAMC,yBAAyB,OAAO,EAC3CC,OAAO,EACPC,IAAI,EACJC,eAAeC,gBAAgB,EAC/BC,OAAO,EAMR;IACC,kCAAkC;IAClC,qFAAqF;IACrF,MAAMC,aAAaJ,QAAQE;IAE3B,IAAIE,YAAYC,WAAW,oBAAoB;QAC7C,mDAAmD;QACnD,MAAMJ,gBAAgBG,WAAWE,KAAK,CAAC,KAAKC,KAAK,CAAC,GAAGC,IAAI,CAAC;QAC1D,IAAIC,YAAYb,KAAKY,IAAI,CAACT,SAAS,CAAC,uBAAuB,EAAEE,eAAe;QAC5E,IAAIN,GAAGe,UAAU,CAAC,GAAGD,UAAU,IAAI,CAAC,GAAG;YACrCA,YAAY,GAAGA,UAAU,IAAI,CAAC;QAChC,OAAO,IAAId,GAAGe,UAAU,CAAC,GAAGD,UAAU,GAAG,CAAC,GAAG;YAC3CA,YAAY,GAAGA,UAAU,GAAG,CAAC;QAC/B,OAAO;YACLN,QAAQQ,MAAM,CAACC,KAAK,CAAC;gBACnBC,KAAK,CAAC,iBAAiB,EAAEZ,cAAc,WAAW,CAAC;YACrD;YACAa,QAAQC,IAAI,CAAC;QACf;QACAN,YAAYA,UAAUO,UAAU,CAAC,MAAM;QACvC,MAAMC,YAAYpB,cAAcY;QAChC,IAAI;YACF,MAAM,EAAES,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAE,GAAG,MAAMC,KAAK,CAAC,QAAQ,EAAEJ,UAAUK,IAAI,CAAC,EAAE,CAAC;YAC5E,OAAO;gBACLJ;gBACAC;gBACAC;YACF;QACF,EAAE,OAAOG,KAAK;YACZpB,QAAQQ,MAAM,CAACC,KAAK,CAAC;gBACnBW;gBACAV,KAAK,CAAC,mCAAmC,EAAEZ,eAAe;YAC5D;YACAa,QAAQC,IAAI,CAAC;QACf;IACF,OAAO,IAAIX,YAAY;QACrB,IAAI;YACF,MAAM,EAAEc,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAE,GAAG,MAAMC,KAAK,CAAC,QAAQ,EAAEjB,WAAW,EAAE,CAAC;YACxE,OAAO;gBACLc;gBACAC;gBACAC;YACF;QACF,EAAE,OAAOI,MAAM;YACb,IAAIpB,YAAYqB,SAAS,MAAM;gBAC7B,8EAA8E;gBAC9E,MAAM,IAAIC,MAAM,CAAC,oCAAoC,EAAEtB,YAAY;YACrE;YACA,sJAAsJ;YACtJ,OAAO,CAAC;QACV;IACF;IACA,OAAO,CAAC;AACV,EAAC"}