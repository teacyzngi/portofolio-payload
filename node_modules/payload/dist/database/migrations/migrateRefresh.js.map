{"version":3,"sources":["../../../src/database/migrations/migrateRefresh.ts"],"sourcesContent":["import type { BaseDatabaseAdapter } from '../types.js'\n\nimport { commitTransaction } from '../../utilities/commitTransaction.js'\nimport { createLocalReq } from '../../utilities/createLocalReq.js'\nimport { initTransaction } from '../../utilities/initTransaction.js'\nimport { killTransaction } from '../../utilities/killTransaction.js'\nimport { getMigrations } from './getMigrations.js'\nimport { readMigrationFiles } from './readMigrationFiles.js'\n\n/**\n * Run all migration down functions before running up\n */\nexport async function migrateRefresh(this: BaseDatabaseAdapter) {\n  const { payload } = this\n  const migrationFiles = await readMigrationFiles({ payload })\n\n  const { existingMigrations } = await getMigrations({\n    payload,\n  })\n\n  const req = await createLocalReq({}, payload)\n\n  if (existingMigrations?.length) {\n    payload.logger.info({\n      msg: `Rolling back all ${existingMigrations.length} migration(s).`,\n    })\n    // Reverse order of migrations to rollback\n    existingMigrations.reverse()\n\n    for (const migration of existingMigrations) {\n      try {\n        const migrationFile = migrationFiles.find((m) => m.name === migration.name)\n        if (!migrationFile) {\n          throw new Error(`Migration ${migration.name} not found locally.`)\n        }\n\n        payload.logger.info({ msg: `Migrating down: ${migration.name}` })\n        const start = Date.now()\n        await initTransaction(req)\n        const session = payload.db.sessions?.[await req.transactionID!]\n        await migrationFile.down({ payload, req, session })\n        payload.logger.info({\n          msg: `Migrated down:  ${migration.name} (${Date.now() - start}ms)`,\n        })\n        await payload.delete({\n          collection: 'payload-migrations',\n          req,\n          where: {\n            name: {\n              equals: migration.name,\n            },\n          },\n        })\n      } catch (err: unknown) {\n        await killTransaction(req)\n        let msg = `Error running migration ${migration.name}. Rolling back.`\n        if (err instanceof Error) {\n          msg += ` ${err.message}`\n        }\n        payload.logger.error({\n          err,\n          msg,\n        })\n        process.exit(1)\n      }\n    }\n  } else {\n    payload.logger.info({ msg: 'No migrations to rollback.' })\n  }\n\n  // Run all migrate up\n  for (const migration of migrationFiles) {\n    payload.logger.info({ msg: `Migrating: ${migration.name}` })\n    try {\n      const start = Date.now()\n      await initTransaction(req)\n      await migration.up({ payload, req })\n      await payload.create({\n        collection: 'payload-migrations',\n        data: {\n          name: migration.name,\n          executed: true,\n        },\n        req,\n      })\n      await commitTransaction(req)\n\n      payload.logger.info({ msg: `Migrated:  ${migration.name} (${Date.now() - start}ms)` })\n    } catch (err: unknown) {\n      await killTransaction(req)\n      let msg = `Error running migration ${migration.name}. Rolling back.`\n      if (err instanceof Error) {\n        msg += ` ${err.message}`\n      }\n      payload.logger.error({\n        err,\n        msg,\n      })\n      process.exit(1)\n    }\n  }\n}\n"],"names":["commitTransaction","createLocalReq","initTransaction","killTransaction","getMigrations","readMigrationFiles","migrateRefresh","payload","migrationFiles","existingMigrations","req","length","logger","info","msg","reverse","migration","migrationFile","find","m","name","Error","start","Date","now","session","db","sessions","transactionID","down","delete","collection","where","equals","err","message","error","process","exit","up","create","data","executed"],"mappings":"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"}