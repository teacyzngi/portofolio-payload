{"version":3,"sources":["../../../src/database/migrations/migrateReset.ts"],"sourcesContent":["import type { BaseDatabaseAdapter } from '../types.js'\n\nimport { commitTransaction } from '../../utilities/commitTransaction.js'\nimport { createLocalReq } from '../../utilities/createLocalReq.js'\nimport { initTransaction } from '../../utilities/initTransaction.js'\nimport { killTransaction } from '../../utilities/killTransaction.js'\nimport { getMigrations } from './getMigrations.js'\nimport { readMigrationFiles } from './readMigrationFiles.js'\n\nexport async function migrateReset(this: BaseDatabaseAdapter): Promise<void> {\n  const { payload } = this\n  const migrationFiles = await readMigrationFiles({ payload })\n\n  const { existingMigrations } = await getMigrations({ payload })\n\n  if (!existingMigrations?.length) {\n    payload.logger.info({ msg: 'No migrations to reset.' })\n    return\n  }\n\n  const req = await createLocalReq({}, payload)\n\n  migrationFiles.reverse()\n\n  // Rollback all migrations in order\n  for (const migration of migrationFiles) {\n    // Create or update migration in database\n    const existingMigration = existingMigrations.find(\n      (existing) => existing.name === migration.name,\n    )\n    if (existingMigration) {\n      payload.logger.info({ msg: `Migrating down: ${migration.name}` })\n      try {\n        const start = Date.now()\n        await initTransaction(req)\n        const session = payload.db.sessions?.[await req.transactionID!]\n        await migration.down({ payload, req, session })\n        await payload.delete({\n          collection: 'payload-migrations',\n          req,\n          where: {\n            id: {\n              equals: existingMigration.id,\n            },\n          },\n        })\n        await commitTransaction(req)\n        payload.logger.info({ msg: `Migrated down:  ${migration.name} (${Date.now() - start}ms)` })\n      } catch (err: unknown) {\n        await killTransaction(req)\n        payload.logger.error({ err, msg: `Error running migration ${migration.name}` })\n        throw err\n      }\n    }\n  }\n\n  // Delete dev migration\n  try {\n    await payload.delete({\n      collection: 'payload-migrations',\n      where: {\n        batch: {\n          equals: -1,\n        },\n      },\n    })\n  } catch (err: unknown) {\n    payload.logger.error({ err, msg: 'Error deleting dev migration' })\n  }\n}\n"],"names":["commitTransaction","createLocalReq","initTransaction","killTransaction","getMigrations","readMigrationFiles","migrateReset","payload","migrationFiles","existingMigrations","length","logger","info","msg","req","reverse","migration","existingMigration","find","existing","name","start","Date","now","session","db","sessions","transactionID","down","delete","collection","where","id","equals","err","error","batch"],"mappings":"AAEA,SAASA,iBAAiB,QAAQ,uCAAsC;AACxE,SAASC,cAAc,QAAQ,oCAAmC;AAClE,SAASC,eAAe,QAAQ,qCAAoC;AACpE,SAASC,eAAe,QAAQ,qCAAoC;AACpE,SAASC,aAAa,QAAQ,qBAAoB;AAClD,SAASC,kBAAkB,QAAQ,0BAAyB;AAE5D,OAAO,eAAeC;IACpB,MAAM,EAAEC,OAAO,EAAE,GAAG,IAAI;IACxB,MAAMC,iBAAiB,MAAMH,mBAAmB;QAAEE;IAAQ;IAE1D,MAAM,EAAEE,kBAAkB,EAAE,GAAG,MAAML,cAAc;QAAEG;IAAQ;IAE7D,IAAI,CAACE,oBAAoBC,QAAQ;QAC/BH,QAAQI,MAAM,CAACC,IAAI,CAAC;YAAEC,KAAK;QAA0B;QACrD;IACF;IAEA,MAAMC,MAAM,MAAMb,eAAe,CAAC,GAAGM;IAErCC,eAAeO,OAAO;IAEtB,mCAAmC;IACnC,KAAK,MAAMC,aAAaR,eAAgB;QACtC,yCAAyC;QACzC,MAAMS,oBAAoBR,mBAAmBS,IAAI,CAC/C,CAACC,WAAaA,SAASC,IAAI,KAAKJ,UAAUI,IAAI;QAEhD,IAAIH,mBAAmB;YACrBV,QAAQI,MAAM,CAACC,IAAI,CAAC;gBAAEC,KAAK,CAAC,gBAAgB,EAAEG,UAAUI,IAAI,EAAE;YAAC;YAC/D,IAAI;gBACF,MAAMC,QAAQC,KAAKC,GAAG;gBACtB,MAAMrB,gBAAgBY;gBACtB,MAAMU,UAAUjB,QAAQkB,EAAE,CAACC,QAAQ,EAAE,CAAC,MAAMZ,IAAIa,aAAa,CAAE;gBAC/D,MAAMX,UAAUY,IAAI,CAAC;oBAAErB;oBAASO;oBAAKU;gBAAQ;gBAC7C,MAAMjB,QAAQsB,MAAM,CAAC;oBACnBC,YAAY;oBACZhB;oBACAiB,OAAO;wBACLC,IAAI;4BACFC,QAAQhB,kBAAkBe,EAAE;wBAC9B;oBACF;gBACF;gBACA,MAAMhC,kBAAkBc;gBACxBP,QAAQI,MAAM,CAACC,IAAI,CAAC;oBAAEC,KAAK,CAAC,gBAAgB,EAAEG,UAAUI,IAAI,CAAC,EAAE,EAAEE,KAAKC,GAAG,KAAKF,MAAM,GAAG,CAAC;gBAAC;YAC3F,EAAE,OAAOa,KAAc;gBACrB,MAAM/B,gBAAgBW;gBACtBP,QAAQI,MAAM,CAACwB,KAAK,CAAC;oBAAED;oBAAKrB,KAAK,CAAC,wBAAwB,EAAEG,UAAUI,IAAI,EAAE;gBAAC;gBAC7E,MAAMc;YACR;QACF;IACF;IAEA,uBAAuB;IACvB,IAAI;QACF,MAAM3B,QAAQsB,MAAM,CAAC;YACnBC,YAAY;YACZC,OAAO;gBACLK,OAAO;oBACLH,QAAQ,CAAC;gBACX;YACF;QACF;IACF,EAAE,OAAOC,KAAc;QACrB3B,QAAQI,MAAM,CAACwB,KAAK,CAAC;YAAED;YAAKrB,KAAK;QAA+B;IAClE;AACF"}