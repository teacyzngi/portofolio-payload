{"version":3,"sources":["../../../src/database/migrations/getMigrations.ts"],"sourcesContent":["import type { Payload } from '../../index.js'\nimport type { MigrationData } from '../types.js'\n\n/**\n * Gets all existing migrations from the database, excluding the dev migration\n */\nexport async function getMigrations({\n  payload,\n}: {\n  payload: Payload\n}): Promise<{ existingMigrations: MigrationData[]; latestBatch: number }> {\n  const migrationQuery = await payload.find({\n    collection: 'payload-migrations',\n    limit: 0,\n    sort: ['-batch', '-name'],\n    where: {\n      batch: {\n        not_equals: -1,\n      },\n    },\n  })\n\n  const existingMigrations = migrationQuery.docs as unknown as MigrationData[]\n\n  // Get the highest batch number from existing migrations\n  const latestBatch = Number(existingMigrations?.[0]?.batch) || 0\n\n  return {\n    existingMigrations,\n    latestBatch,\n  }\n}\n"],"names":["getMigrations","payload","migrationQuery","find","collection","limit","sort","where","batch","not_equals","existingMigrations","docs","latestBatch","Number"],"mappings":"AAGA;;CAEC,GACD,OAAO,eAAeA,cAAc,EAClCC,OAAO,EAGR;IACC,MAAMC,iBAAiB,MAAMD,QAAQE,IAAI,CAAC;QACxCC,YAAY;QACZC,OAAO;QACPC,MAAM;YAAC;YAAU;SAAQ;QACzBC,OAAO;YACLC,OAAO;gBACLC,YAAY,CAAC;YACf;QACF;IACF;IAEA,MAAMC,qBAAqBR,eAAeS,IAAI;IAE9C,wDAAwD;IACxD,MAAMC,cAAcC,OAAOH,oBAAoB,CAAC,EAAE,EAAEF,UAAU;IAE9D,OAAO;QACLE;QACAE;IACF;AACF"}