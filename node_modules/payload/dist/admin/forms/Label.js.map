{"version":3,"sources":["../../../src/admin/forms/Label.ts"],"sourcesContent":["import type { StaticLabel } from '../../config/types.js'\nimport type { Field } from '../../fields/config/types.js'\nimport type { ClientFieldWithOptionalType, ServerComponentProps } from './Field.js'\n\nexport type GenericLabelProps = {\n  readonly as?: 'h3' | 'label' | 'span'\n  readonly hideLocale?: boolean\n  readonly htmlFor?: string\n  readonly label?: StaticLabel\n  readonly localized?: boolean\n  readonly path?: string\n  readonly required?: boolean\n  readonly unstyled?: boolean\n}\n\nexport type FieldLabelClientProps<\n  TFieldClient extends Partial<ClientFieldWithOptionalType> = Partial<ClientFieldWithOptionalType>,\n> = {\n  field?: TFieldClient\n} & GenericLabelProps\n\nexport type FieldLabelServerProps<\n  TFieldServer extends Field,\n  TFieldClient extends ClientFieldWithOptionalType = ClientFieldWithOptionalType,\n> = {\n  clientField: TFieldClient\n  readonly field: TFieldServer\n} & GenericLabelProps &\n  ServerComponentProps\n\nexport type SanitizedLabelProps<TFieldClient extends ClientFieldWithOptionalType> = Omit<\n  FieldLabelClientProps<TFieldClient>,\n  'label' | 'required'\n>\n\nexport type FieldLabelClientComponent<\n  TFieldClient extends ClientFieldWithOptionalType = ClientFieldWithOptionalType,\n> = React.ComponentType<FieldLabelClientProps<TFieldClient>>\n\nexport type FieldLabelServerComponent<\n  TFieldServer extends Field = Field,\n  TFieldClient extends ClientFieldWithOptionalType = ClientFieldWithOptionalType,\n> = React.ComponentType<FieldLabelServerProps<TFieldServer, TFieldClient>>\n"],"names":[],"mappings":"AAuCA,WAG0E"}