{"version":3,"sources":["../../../src/admin/forms/Description.ts"],"sourcesContent":["import type { I18nClient, TFunction } from '@payloadcms/translations'\n\nimport type { Field } from '../../fields/config/types.js'\nimport type { ClientFieldWithOptionalType, ServerComponentProps } from './Field.js'\n\nexport type DescriptionFunction = (args: { i18n: I18nClient; t: TFunction }) => string\n\nexport type FieldDescriptionClientComponent<\n  TFieldClient extends ClientFieldWithOptionalType = ClientFieldWithOptionalType,\n> = React.ComponentType<FieldDescriptionClientProps<TFieldClient>>\n\nexport type FieldDescriptionServerComponent<\n  TFieldServer extends Field = Field,\n  TFieldClient extends ClientFieldWithOptionalType = ClientFieldWithOptionalType,\n> = React.ComponentType<FieldDescriptionServerProps<TFieldServer, TFieldClient>>\n\nexport type StaticDescription = Record<string, string> | string\n\nexport type Description = DescriptionFunction | StaticDescription\n\nexport type GenericDescriptionProps = {\n  readonly className?: string\n  readonly description?: StaticDescription\n  readonly marginPlacement?: 'bottom' | 'top'\n  readonly path: string\n}\n\nexport type FieldDescriptionServerProps<\n  TFieldServer extends Field = Field,\n  TFieldClient extends ClientFieldWithOptionalType = ClientFieldWithOptionalType,\n> = {\n  clientField: TFieldClient\n  readonly field: TFieldServer\n} & GenericDescriptionProps &\n  ServerComponentProps\n\nexport type FieldDescriptionClientProps<\n  TFieldClient extends ClientFieldWithOptionalType = ClientFieldWithOptionalType,\n> = {\n  field: TFieldClient\n} & GenericDescriptionProps\n"],"names":[],"mappings":"AAoCA,WAI2B"}