{"version":3,"sources":["../../../src/admin/views/document.ts"],"sourcesContent":["import type { SanitizedPermissions } from '../../auth/types.js'\nimport type { SanitizedCollectionConfig } from '../../collections/config/types.js'\nimport type { PayloadComponent, SanitizedConfig, ServerProps } from '../../config/types.js'\nimport type { SanitizedGlobalConfig } from '../../globals/config/types.js'\nimport type { PayloadRequest } from '../../types/index.js'\nimport type { Data, DocumentSlots, FormState } from '../types.js'\nimport type { InitPageResult, ViewTypes } from './index.js'\n\nexport type EditViewProps = {\n  readonly collectionSlug?: string\n  readonly globalSlug?: string\n}\n/**\n * Properties specific to the versions view\n */\nexport type RenderDocumentVersionsProperties = {\n  /**\n   * @default false\n   */\n  disableGutter?: boolean\n  /**\n   * Use createdAt cell that appends params to the url on version selection instead of redirecting user\n   * @default false\n   */\n  useVersionDrawerCreatedAtCell?: boolean\n}\n\nexport type DocumentViewServerPropsOnly = {\n  doc: Data\n  hasPublishedDoc: boolean\n  initPageResult: InitPageResult\n  routeSegments: string[]\n  versions?: RenderDocumentVersionsProperties\n} & ServerProps\n\nexport type DocumentViewServerProps = DocumentViewClientProps & DocumentViewServerPropsOnly\n\nexport type DocumentViewClientProps = {\n  documentSubViewType: DocumentSubViewTypes\n  formState: FormState\n  viewType: ViewTypes\n} & DocumentSlots\n\n/**\n * @todo: This should be renamed to `DocumentSubViewType` (singular)\n */\nexport type DocumentSubViewTypes = 'api' | 'default' | 'version' | 'versions'\n\nexport type DocumentTabServerPropsOnly = {\n  readonly apiURL?: string\n  readonly collectionConfig?: SanitizedCollectionConfig\n  readonly globalConfig?: SanitizedGlobalConfig\n  readonly permissions: SanitizedPermissions\n  readonly req: PayloadRequest\n} & ServerProps\n\nexport type DocumentTabClientProps = {\n  path: string\n}\n\nexport type DocumentTabServerProps = DocumentTabClientProps & DocumentTabServerPropsOnly\n\nexport type DocumentTabCondition = (args: {\n  collectionConfig: SanitizedCollectionConfig\n  /**\n   * @deprecated: Use `req.payload.config` instead. This will be removed in v4.\n   */\n  config: SanitizedConfig\n  globalConfig: SanitizedGlobalConfig\n  permissions: SanitizedPermissions\n  req: PayloadRequest\n}) => boolean\n\n// Everything is optional because we merge in the defaults\n// i.e. the config may override the `Default` view with a `label` but not an `href`\nexport type DocumentTabConfig = {\n  readonly Component?: DocumentTabComponent\n  readonly condition?: DocumentTabCondition\n  readonly href?:\n    | ((args: {\n        apiURL: string\n        collection: SanitizedCollectionConfig\n        global: SanitizedGlobalConfig\n        id?: string\n        routes: SanitizedConfig['routes']\n      }) => string)\n    | string\n  readonly isActive?: ((args: { href: string }) => boolean) | boolean\n  readonly label?: ((args: { t: (key: string) => string }) => string) | string\n  readonly newTab?: boolean\n  /**\n   * Sets the order to render the tab in the admin panel\n   * Recommended to use increments of 100 (e.g. 0, 100, 200)\n   */\n  readonly order?: number\n  readonly Pill?: PayloadComponent\n}\n\n/**\n * @todo: Remove this type as it's only used internally for the config (above)\n */\nexport type DocumentTabComponent = PayloadComponent<{\n  path: string\n}>\n\n// BeforeDocumentControls\n\nexport type BeforeDocumentControlsClientProps = {}\nexport type BeforeDocumentControlsServerPropsOnly = {} & ServerProps\nexport type BeforeDocumentControlsServerProps = BeforeDocumentControlsClientProps &\n  BeforeDocumentControlsServerPropsOnly\n"],"names":[],"mappings":"AA6GA,WACuC"}