{"version":3,"sources":["../../../src/admin/elements/Cell.ts"],"sourcesContent":["import type { I18nClient } from '@payloadcms/translations'\n\nimport type { SanitizedCollectionConfig } from '../../collections/config/types.js'\nimport type {\n  ArrayFieldClient,\n  BlocksFieldClient,\n  CheckboxFieldClient,\n  ClientField,\n  CodeFieldClient,\n  DateFieldClient,\n  EmailFieldClient,\n  Field,\n  GroupFieldClient,\n  JSONFieldClient,\n  NumberFieldClient,\n  PointFieldClient,\n  RadioFieldClient,\n  RelationshipFieldClient,\n  SelectFieldClient,\n  TextareaFieldClient,\n  TextFieldClient,\n  UploadFieldClient,\n} from '../../fields/config/types.js'\nimport type { Payload } from '../../types/index.js'\nimport type { ViewTypes } from '../types.js'\n\nexport type RowData = Record<string, any>\n\nexport type DefaultCellComponentProps<\n  TField extends ClientField = ClientField,\n  TCellData = undefined,\n> = {\n  readonly cellData: TCellData extends undefined\n    ? TField extends RelationshipFieldClient\n      ? number | Record<string, any> | string\n      : TField extends NumberFieldClient\n        ? TField['hasMany'] extends true\n          ? number[]\n          : number\n        : TField extends TextFieldClient\n          ? TField['hasMany'] extends true\n            ? string[]\n            : string\n          : TField extends\n                | CodeFieldClient\n                | EmailFieldClient\n                | JSONFieldClient\n                | RadioFieldClient\n                | TextareaFieldClient\n            ? string\n            : TField extends BlocksFieldClient\n              ? {\n                  [key: string]: any\n                  blockType: string\n                }[]\n              : TField extends CheckboxFieldClient\n                ? boolean\n                : TField extends DateFieldClient\n                  ? Date | number | string\n                  : TField extends GroupFieldClient\n                    ? Record<string, any>\n                    : TField extends UploadFieldClient\n                      ? File | string\n                      : TField extends ArrayFieldClient\n                        ? Record<string, unknown>[]\n                        : TField extends SelectFieldClient\n                          ? TField['hasMany'] extends true\n                            ? string[]\n                            : string\n                          : TField extends PointFieldClient\n                            ? { x: number; y: number }\n                            : any\n    : TCellData\n  className?: string\n  collectionSlug: SanitizedCollectionConfig['slug']\n  columnIndex?: number\n  customCellProps?: Record<string, any>\n  field: TField\n  link?: boolean\n  linkURL?: string\n  onClick?: (args: {\n    cellData: unknown\n    collectionSlug: SanitizedCollectionConfig['slug']\n    rowData: RowData\n  }) => void\n  rowData: RowData\n  viewType?: ViewTypes\n}\n\nexport type DefaultServerCellComponentProps<\n  TField extends ClientField = ClientField,\n  TCellData = any,\n> = {\n  collectionConfig: SanitizedCollectionConfig\n  field: Field\n  i18n: I18nClient\n  payload: Payload\n} & Omit<DefaultCellComponentProps<TField, TCellData>, 'field'>\n"],"names":[],"mappings":"AAyFA,WAQ+D"}