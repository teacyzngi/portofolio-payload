{"version":3,"sources":["../../../src/admin/fields/Relationship.ts"],"sourcesContent":["import type { MarkOptional } from 'ts-essentials'\n\nimport type { RelationshipField, RelationshipFieldClient } from '../../fields/config/types.js'\nimport type { RelationshipFieldValidation } from '../../fields/validations.js'\nimport type { FieldErrorClientComponent, FieldErrorServerComponent } from '../forms/Error.js'\nimport type {\n  ClientFieldBase,\n  FieldClientComponent,\n  FieldPaths,\n  FieldServerComponent,\n  ServerFieldBase,\n} from '../forms/Field.js'\nimport type {\n  FieldDescriptionClientComponent,\n  FieldDescriptionServerComponent,\n  FieldDiffClientComponent,\n  FieldDiffServerComponent,\n  FieldLabelClientComponent,\n  FieldLabelServerComponent,\n} from '../types.js'\n\ntype RelationshipFieldClientWithoutType = MarkOptional<RelationshipFieldClient, 'type'>\n\ntype RelationshipFieldBaseClientProps = {\n  readonly path: string\n  readonly validate?: RelationshipFieldValidation\n}\n\ntype RelationshipFieldBaseServerProps = Pick<FieldPaths, 'path'>\n\nexport type RelationshipFieldClientProps = ClientFieldBase<RelationshipFieldClientWithoutType> &\n  RelationshipFieldBaseClientProps\n\nexport type RelationshipFieldServerProps = RelationshipFieldBaseServerProps &\n  ServerFieldBase<RelationshipField, RelationshipFieldClientWithoutType>\n\nexport type RelationshipFieldServerComponent = FieldServerComponent<\n  RelationshipField,\n  RelationshipFieldClientWithoutType,\n  RelationshipFieldBaseServerProps\n>\n\nexport type RelationshipFieldClientComponent = FieldClientComponent<\n  RelationshipFieldClientWithoutType,\n  RelationshipFieldBaseClientProps\n>\n\nexport type RelationshipFieldLabelServerComponent = FieldLabelServerComponent<\n  RelationshipField,\n  RelationshipFieldClientWithoutType\n>\n\nexport type RelationshipFieldLabelClientComponent =\n  FieldLabelClientComponent<RelationshipFieldClientWithoutType>\n\nexport type RelationshipFieldDescriptionServerComponent = FieldDescriptionServerComponent<\n  RelationshipField,\n  RelationshipFieldClientWithoutType\n>\n\nexport type RelationshipFieldDescriptionClientComponent =\n  FieldDescriptionClientComponent<RelationshipFieldClientWithoutType>\n\nexport type RelationshipFieldErrorServerComponent = FieldErrorServerComponent<\n  RelationshipField,\n  RelationshipFieldClientWithoutType\n>\n\nexport type RelationshipFieldErrorClientComponent =\n  FieldErrorClientComponent<RelationshipFieldClientWithoutType>\n\nexport type RelationshipFieldDiffServerComponent = FieldDiffServerComponent<\n  RelationshipField,\n  RelationshipFieldClient\n>\n\nexport type RelationshipFieldDiffClientComponent = FieldDiffClientComponent<RelationshipFieldClient>\n"],"names":[],"mappings":"AA4EA,WAAoG"}