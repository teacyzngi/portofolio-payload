{"version":3,"sources":["../../../src/admin/fields/JSON.ts"],"sourcesContent":["import type { MarkOptional } from 'ts-essentials'\n\nimport type { JSONField, JSONFieldClient } from '../../fields/config/types.js'\nimport type { JSONFieldValidation } from '../../fields/validations.js'\nimport type { FieldErrorClientComponent, FieldErrorServerComponent } from '../forms/Error.js'\nimport type {\n  ClientFieldBase,\n  FieldClientComponent,\n  FieldPaths,\n  FieldServerComponent,\n  ServerFieldBase,\n} from '../forms/Field.js'\nimport type {\n  FieldDescriptionClientComponent,\n  FieldDescriptionServerComponent,\n  FieldDiffClientComponent,\n  FieldDiffServerComponent,\n  FieldLabelClientComponent,\n  FieldLabelServerComponent,\n} from '../types.js'\n\ntype JSONFieldClientWithoutType = MarkOptional<JSONFieldClient, 'type'>\n\ntype JSONFieldBaseClientProps = {\n  readonly path: string\n  readonly validate?: JSONFieldValidation\n}\n\ntype JSONFieldBaseServerProps = Pick<FieldPaths, 'path'>\n\nexport type JSONFieldClientProps = ClientFieldBase<JSONFieldClientWithoutType> &\n  JSONFieldBaseClientProps\n\nexport type JSONFieldServerProps = JSONFieldBaseServerProps &\n  ServerFieldBase<JSONField, JSONFieldClientWithoutType>\n\nexport type JSONFieldServerComponent = FieldServerComponent<\n  JSONField,\n  JSONFieldClientWithoutType,\n  JSONFieldBaseServerProps\n>\n\nexport type JSONFieldClientComponent = FieldClientComponent<\n  JSONFieldClientWithoutType,\n  JSONFieldBaseClientProps\n>\n\nexport type JSONFieldLabelServerComponent = FieldLabelServerComponent<\n  JSONField,\n  JSONFieldClientWithoutType\n>\n\nexport type JSONFieldLabelClientComponent = FieldLabelClientComponent<JSONFieldClientWithoutType>\n\nexport type JSONFieldDescriptionServerComponent = FieldDescriptionServerComponent<\n  JSONField,\n  JSONFieldClientWithoutType\n>\n\nexport type JSONFieldDescriptionClientComponent =\n  FieldDescriptionClientComponent<JSONFieldClientWithoutType>\n\nexport type JSONFieldErrorServerComponent = FieldErrorServerComponent<\n  JSONField,\n  JSONFieldClientWithoutType\n>\n\nexport type JSONFieldErrorClientComponent = FieldErrorClientComponent<JSONFieldClientWithoutType>\n\nexport type JSONFieldDiffServerComponent = FieldDiffServerComponent<JSONField, JSONFieldClient>\n\nexport type JSONFieldDiffClientComponent = FieldDiffClientComponent<JSONFieldClient>\n"],"names":[],"mappings":"AAuEA,WAAoF"}