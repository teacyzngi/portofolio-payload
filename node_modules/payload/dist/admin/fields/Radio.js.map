{"version":3,"sources":["../../../src/admin/fields/Radio.ts"],"sourcesContent":["import type { MarkOptional } from 'ts-essentials'\n\nimport type { RadioField, RadioFieldClient } from '../../fields/config/types.js'\nimport type { RadioFieldValidation } from '../../fields/validations.js'\nimport type { FieldErrorClientComponent, FieldErrorServerComponent } from '../forms/Error.js'\nimport type {\n  ClientFieldBase,\n  FieldClientComponent,\n  FieldPaths,\n  FieldServerComponent,\n  ServerFieldBase,\n} from '../forms/Field.js'\nimport type {\n  FieldDescriptionClientComponent,\n  FieldDescriptionServerComponent,\n  FieldDiffClientComponent,\n  FieldDiffServerComponent,\n  FieldLabelClientComponent,\n  FieldLabelServerComponent,\n} from '../types.js'\n\ntype RadioFieldClientWithoutType = MarkOptional<RadioFieldClient, 'type'>\n\ntype RadioFieldBaseClientProps = {\n  /**\n   * Threaded through to the setValue function from the form context when the value changes\n   */\n  readonly disableModifyingForm?: boolean\n  readonly onChange?: OnChange\n  readonly path: string\n  readonly validate?: RadioFieldValidation\n  readonly value?: string\n}\n\ntype RadioFieldBaseServerProps = Pick<FieldPaths, 'path'>\n\nexport type RadioFieldClientProps = ClientFieldBase<RadioFieldClientWithoutType> &\n  RadioFieldBaseClientProps\n\nexport type RadioFieldServerProps = RadioFieldBaseServerProps &\n  ServerFieldBase<RadioField, RadioFieldClientWithoutType>\n\nexport type RadioFieldServerComponent = FieldServerComponent<\n  RadioField,\n  RadioFieldClientWithoutType,\n  RadioFieldBaseServerProps\n>\n\nexport type RadioFieldClientComponent = FieldClientComponent<\n  RadioFieldClientWithoutType,\n  RadioFieldBaseClientProps\n>\n\ntype OnChange<T = string> = (value: T) => void\n\nexport type RadioFieldLabelServerComponent = FieldLabelServerComponent<\n  RadioField,\n  RadioFieldClientWithoutType\n>\n\nexport type RadioFieldLabelClientComponent = FieldLabelClientComponent<RadioFieldClientWithoutType>\n\nexport type RadioFieldDescriptionServerComponent = FieldDescriptionServerComponent<\n  RadioField,\n  RadioFieldClientWithoutType\n>\n\nexport type RadioFieldDescriptionClientComponent =\n  FieldDescriptionClientComponent<RadioFieldClientWithoutType>\n\nexport type RadioFieldErrorServerComponent = FieldErrorServerComponent<\n  RadioField,\n  RadioFieldClientWithoutType\n>\n\nexport type RadioFieldErrorClientComponent = FieldErrorClientComponent<RadioFieldClientWithoutType>\n\nexport type RadioFieldDiffServerComponent = FieldDiffServerComponent<RadioField, RadioFieldClient>\n\nexport type RadioFieldDiffClientComponent = FieldDiffClientComponent<RadioFieldClient>\n"],"names":[],"mappings":"AA+EA,WAAsF"}