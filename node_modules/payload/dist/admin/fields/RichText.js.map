{"version":3,"sources":["../../../src/admin/fields/RichText.ts"],"sourcesContent":["import type { MarkOptional } from 'ts-essentials'\n\nimport type { RichTextField, RichTextFieldClient } from '../../fields/config/types.js'\nimport type { RichTextFieldValidation } from '../../fields/validations.js'\nimport type { FieldErrorClientComponent, FieldErrorServerComponent } from '../forms/Error.js'\nimport type {\n  ClientFieldBase,\n  FieldClientComponent,\n  FieldPaths,\n  FieldServerComponent,\n  ServerFieldBase,\n} from '../forms/Field.js'\nimport type {\n  FieldDescriptionClientComponent,\n  FieldDescriptionServerComponent,\n  FieldDiffClientComponent,\n  FieldDiffServerComponent,\n  FieldLabelClientComponent,\n  FieldLabelServerComponent,\n} from '../types.js'\n\ntype RichTextFieldClientWithoutType<\n  TValue extends object = any,\n  TAdapterProps = any,\n  TExtraProperties = object,\n> = MarkOptional<RichTextFieldClient<TValue, TAdapterProps, TExtraProperties>, 'type'>\n\ntype RichTextFieldBaseClientProps<\n  TValue extends object = any,\n  TAdapterProps = any,\n  TExtraProperties = object,\n> = {\n  readonly path: string\n  readonly validate?: RichTextFieldValidation\n}\n\ntype RichTextFieldBaseServerProps = Pick<FieldPaths, 'path'>\n\nexport type RichTextFieldClientProps<\n  TValue extends object = any,\n  TAdapterProps = any,\n  TExtraProperties = object,\n> = ClientFieldBase<RichTextFieldClientWithoutType<TValue, TAdapterProps, TExtraProperties>> &\n  RichTextFieldBaseClientProps<TValue, TAdapterProps, TExtraProperties>\n\nexport type RichTextFieldServerProps = RichTextFieldBaseServerProps &\n  ServerFieldBase<RichTextField, RichTextFieldClientWithoutType>\n\nexport type RichTextFieldServerComponent = FieldServerComponent<\n  RichTextField,\n  RichTextFieldClientWithoutType,\n  RichTextFieldBaseServerProps\n>\n\nexport type RichTextFieldClientComponent = FieldClientComponent<\n  RichTextFieldClientWithoutType,\n  RichTextFieldBaseClientProps\n>\n\nexport type RichTextFieldLabelServerComponent = FieldLabelServerComponent<\n  RichTextField,\n  RichTextFieldClientWithoutType\n>\n\nexport type RichTextFieldLabelClientComponent =\n  FieldLabelClientComponent<RichTextFieldClientWithoutType>\n\nexport type RichTextFieldDescriptionServerComponent = FieldDescriptionServerComponent<\n  RichTextField,\n  RichTextFieldClientWithoutType\n>\n\nexport type RichTextFieldDescriptionClientComponent =\n  FieldDescriptionClientComponent<RichTextFieldClientWithoutType>\n\nexport type RichTextFieldErrorServerComponent = FieldErrorServerComponent<\n  RichTextField,\n  RichTextFieldClientWithoutType\n>\n\nexport type RichTextFieldErrorClientComponent =\n  FieldErrorClientComponent<RichTextFieldClientWithoutType>\n\nexport type RichTextFieldDiffServerComponent = FieldDiffServerComponent<\n  RichTextField,\n  RichTextFieldClient\n>\n\nexport type RichTextFieldDiffClientComponent = FieldDiffClientComponent<RichTextFieldClient>\n"],"names":[],"mappings":"AAwFA,WAA4F"}