{"version":3,"sources":["../../../src/admin/fields/Blocks.ts"],"sourcesContent":["import type React from 'react'\nimport type { MarkOptional } from 'ts-essentials'\n\nimport type { BlocksField, BlocksFieldClient } from '../../fields/config/types.js'\nimport type { BlocksFieldValidation } from '../../fields/validations.js'\nimport type { FieldErrorClientComponent, FieldErrorServerComponent } from '../forms/Error.js'\nimport type {\n  ClientFieldBase,\n  FieldClientComponent,\n  FieldPaths,\n  FieldServerComponent,\n  ServerFieldBase,\n} from '../forms/Field.js'\nimport type {\n  FieldDescriptionClientComponent,\n  FieldDescriptionServerComponent,\n  FieldDiffClientComponent,\n  FieldDiffServerComponent,\n  FieldLabelClientComponent,\n  FieldLabelServerComponent,\n} from '../types.js'\n\ntype BlocksFieldClientWithoutType = MarkOptional<BlocksFieldClient, 'type'>\n\ntype BlocksFieldBaseClientProps = {\n  readonly validate?: BlocksFieldValidation\n} & FieldPaths\n\ntype BlocksFieldBaseServerProps = Pick<FieldPaths, 'path'>\n\nexport type BlocksFieldClientProps = BlocksFieldBaseClientProps &\n  ClientFieldBase<BlocksFieldClientWithoutType>\n\nexport type BlocksFieldServerProps = BlocksFieldBaseServerProps &\n  ServerFieldBase<BlocksField, BlocksFieldClientWithoutType>\n\nexport type BlocksFieldServerComponent = FieldServerComponent<\n  BlocksField,\n  BlocksFieldClientWithoutType,\n  BlocksFieldBaseServerProps\n>\n\nexport type BlocksFieldClientComponent = FieldClientComponent<\n  BlocksFieldClientWithoutType,\n  BlocksFieldBaseClientProps\n>\n\nexport type BlocksFieldLabelServerComponent = FieldLabelServerComponent<\n  BlocksField,\n  BlocksFieldClientWithoutType\n>\n\nexport type BlocksFieldLabelClientComponent =\n  FieldLabelClientComponent<BlocksFieldClientWithoutType>\n\ntype BlockRowLabelBase = {\n  blockType: string\n  rowLabel: string\n  rowNumber: number\n}\n\nexport type BlockRowLabelClientComponent = React.ComponentType<\n  BlockRowLabelBase & ClientFieldBase<BlocksFieldClientWithoutType>\n>\n\nexport type BlockRowLabelServerComponent = React.ComponentType<\n  BlockRowLabelBase & ServerFieldBase<BlocksField, BlocksFieldClientWithoutType>\n>\n\nexport type BlocksFieldDescriptionServerComponent = FieldDescriptionServerComponent<\n  BlocksField,\n  BlocksFieldClientWithoutType\n>\n\nexport type BlocksFieldDescriptionClientComponent =\n  FieldDescriptionClientComponent<BlocksFieldClientWithoutType>\n\nexport type BlocksFieldErrorServerComponent = FieldErrorServerComponent<\n  BlocksField,\n  BlocksFieldClientWithoutType\n>\n\nexport type BlocksFieldErrorClientComponent =\n  FieldErrorClientComponent<BlocksFieldClientWithoutType>\n\nexport type BlocksFieldDiffServerComponent = FieldDiffServerComponent<\n  BlocksField,\n  BlocksFieldClient\n>\n\nexport type BlocksFieldDiffClientComponent = FieldDiffClientComponent<BlocksFieldClient>\n"],"names":[],"mappings":"AA0FA,WAAwF"}