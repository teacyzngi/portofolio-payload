{"version":3,"sources":["../../../src/admin/fields/Code.ts"],"sourcesContent":["import type { EditorProps } from '@monaco-editor/react'\nimport type { MarkOptional } from 'ts-essentials'\n\nimport type { CodeField, CodeFieldClient } from '../../fields/config/types.js'\nimport type { CodeFieldValidation } from '../../fields/validations.js'\nimport type { FieldErrorClientComponent, FieldErrorServerComponent } from '../forms/Error.js'\nimport type {\n  ClientFieldBase,\n  FieldClientComponent,\n  FieldPaths,\n  FieldServerComponent,\n  ServerFieldBase,\n} from '../forms/Field.js'\nimport type {\n  FieldDescriptionClientComponent,\n  FieldDescriptionServerComponent,\n  FieldDiffClientComponent,\n  FieldDiffServerComponent,\n  FieldLabelClientComponent,\n  FieldLabelServerComponent,\n} from '../types.js'\n\ntype CodeFieldClientWithoutType = MarkOptional<CodeFieldClient, 'type'>\n\ntype CodeFieldBaseClientProps = {\n  readonly autoComplete?: string\n  readonly onMount?: EditorProps['onMount']\n  readonly path: string\n  readonly validate?: CodeFieldValidation\n}\n\ntype CodeFieldBaseServerProps = Pick<FieldPaths, 'path'>\n\nexport type CodeFieldClientProps = ClientFieldBase<CodeFieldClientWithoutType> &\n  CodeFieldBaseClientProps\n\nexport type CodeFieldServerProps = CodeFieldBaseServerProps &\n  ServerFieldBase<CodeField, CodeFieldClientWithoutType>\n\nexport type CodeFieldServerComponent = FieldServerComponent<\n  CodeField,\n  CodeFieldClientWithoutType,\n  CodeFieldBaseServerProps\n>\n\nexport type CodeFieldClientComponent = FieldClientComponent<\n  CodeFieldClientWithoutType,\n  CodeFieldBaseClientProps\n>\n\nexport type CodeFieldLabelServerComponent = FieldLabelServerComponent<\n  CodeField,\n  CodeFieldClientWithoutType\n>\n\nexport type CodeFieldLabelClientComponent = FieldLabelClientComponent<CodeFieldClientWithoutType>\n\nexport type CodeFieldDescriptionServerComponent = FieldDescriptionServerComponent<\n  CodeField,\n  CodeFieldClientWithoutType\n>\n\nexport type CodeFieldDescriptionClientComponent =\n  FieldDescriptionClientComponent<CodeFieldClientWithoutType>\n\nexport type CodeFieldErrorServerComponent = FieldErrorServerComponent<\n  CodeField,\n  CodeFieldClientWithoutType\n>\n\nexport type CodeFieldErrorClientComponent = FieldErrorClientComponent<CodeFieldClientWithoutType>\n\nexport type CodeFieldDiffServerComponent = FieldDiffServerComponent<CodeField, CodeFieldClient>\n\nexport type CodeFieldDiffClientComponent = FieldDiffClientComponent<CodeFieldClient>\n"],"names":[],"mappings":"AA0EA,WAAoF"}