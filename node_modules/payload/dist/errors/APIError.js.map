{"version":3,"sources":["../../src/errors/APIError.ts"],"sourcesContent":["import { status as httpStatus } from 'http-status'\n\n// This gets dynamically reassigned during compilation\nexport let APIErrorName = 'APIError'\n\nclass ExtendableError<TData extends object = { [key: string]: unknown }> extends Error {\n  data: TData\n\n  isOperational: boolean\n\n  isPublic: boolean\n\n  status: number\n\n  constructor(message: string, status: number, data: TData, isPublic: boolean) {\n    super(message, {\n      // show data in cause\n      cause: data,\n    })\n    APIErrorName = this.constructor.name\n    this.name = this.constructor.name\n    this.message = message\n    this.status = status\n    this.data = data\n    this.isPublic = isPublic\n    this.isOperational = true // This is required since bluebird 4 doesn't append it anymore.\n    Error.captureStackTrace(this, this.constructor)\n  }\n}\n\n/**\n * Class representing an API error.\n * @extends ExtendableError\n */\nexport class APIError<\n  TData extends null | object = { [key: string]: unknown } | null,\n  // @ts-expect-error - vestiges of when tsconfig was not strict. Feel free to improve\n> extends ExtendableError<TData> {\n  /**\n   * Creates an API error.\n   * @param {string} message - Error message.\n   * @param {number} status - HTTP status code of error.\n   * @param {object} data - response data to be returned.\n   * @param {boolean} isPublic - Whether the message should be visible to user or not.\n   */\n  constructor(\n    message: string,\n    status: number = httpStatus.INTERNAL_SERVER_ERROR,\n    data: TData = null!,\n    isPublic = false,\n  ) {\n    super(message, status, data, isPublic)\n  }\n}\n"],"names":["status","httpStatus","APIErrorName","ExtendableError","Error","data","isOperational","isPublic","constructor","message","cause","name","captureStackTrace","APIError","INTERNAL_SERVER_ERROR"],"mappings":"AAAA,SAASA,UAAUC,UAAU,QAAQ,cAAa;AAElD,sDAAsD;AACtD,OAAO,IAAIC,eAAe,WAAU;AAEpC,MAAMC,wBAA2EC;IAC/EC,KAAW;IAEXC,cAAsB;IAEtBC,SAAiB;IAEjBP,OAAc;IAEdQ,YAAYC,OAAe,EAAET,MAAc,EAAEK,IAAW,EAAEE,QAAiB,CAAE;QAC3E,KAAK,CAACE,SAAS;YACb,qBAAqB;YACrBC,OAAOL;QACT;QACAH,eAAe,IAAI,CAACM,WAAW,CAACG,IAAI;QACpC,IAAI,CAACA,IAAI,GAAG,IAAI,CAACH,WAAW,CAACG,IAAI;QACjC,IAAI,CAACF,OAAO,GAAGA;QACf,IAAI,CAACT,MAAM,GAAGA;QACd,IAAI,CAACK,IAAI,GAAGA;QACZ,IAAI,CAACE,QAAQ,GAAGA;QAChB,IAAI,CAACD,aAAa,GAAG,KAAK,+DAA+D;;QACzFF,MAAMQ,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACJ,WAAW;IAChD;AACF;AAEA;;;CAGC,GACD,OAAO,MAAMK,iBAGHV;IACR;;;;;;GAMC,GACDK,YACEC,OAAe,EACfT,SAAiBC,WAAWa,qBAAqB,EACjDT,OAAc,IAAK,EACnBE,WAAW,KAAK,CAChB;QACA,KAAK,CAACE,SAAST,QAAQK,MAAME;IAC/B;AACF"}