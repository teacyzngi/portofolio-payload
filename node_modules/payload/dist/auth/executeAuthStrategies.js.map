{"version":3,"sources":["../../src/auth/executeAuthStrategies.ts"],"sourcesContent":["import type { AuthStrategyFunctionArgs, AuthStrategyResult } from './index.js'\n\nimport { logError } from '../utilities/logError.js'\nimport { mergeHeaders } from '../utilities/mergeHeaders.js'\nexport const executeAuthStrategies = async (\n  args: AuthStrategyFunctionArgs,\n): Promise<AuthStrategyResult> => {\n  let result: AuthStrategyResult = { user: null }\n\n  if (!args.payload.authStrategies?.length) {\n    return result\n  }\n\n  for (const strategy of args.payload.authStrategies) {\n    // add the configured AuthStrategy `name` to the strategy function args\n    args.strategyName = strategy.name\n    args.isGraphQL = Boolean(args.isGraphQL)\n    args.canSetHeaders = Boolean(args.canSetHeaders)\n\n    try {\n      const authResult = await strategy.authenticate(args)\n      if (authResult.responseHeaders) {\n        authResult.responseHeaders = mergeHeaders(\n          result.responseHeaders || new Headers(),\n          authResult.responseHeaders || new Headers(),\n        )\n      }\n      result = authResult\n    } catch (err) {\n      logError({ err, payload: args.payload })\n    }\n\n    if (result.user) {\n      return result\n    }\n  }\n  return result\n}\n"],"names":["logError","mergeHeaders","executeAuthStrategies","args","result","user","payload","authStrategies","length","strategy","strategyName","name","isGraphQL","Boolean","canSetHeaders","authResult","authenticate","responseHeaders","Headers","err"],"mappings":"AAEA,SAASA,QAAQ,QAAQ,2BAA0B;AACnD,SAASC,YAAY,QAAQ,+BAA8B;AAC3D,OAAO,MAAMC,wBAAwB,OACnCC;IAEA,IAAIC,SAA6B;QAAEC,MAAM;IAAK;IAE9C,IAAI,CAACF,KAAKG,OAAO,CAACC,cAAc,EAAEC,QAAQ;QACxC,OAAOJ;IACT;IAEA,KAAK,MAAMK,YAAYN,KAAKG,OAAO,CAACC,cAAc,CAAE;QAClD,uEAAuE;QACvEJ,KAAKO,YAAY,GAAGD,SAASE,IAAI;QACjCR,KAAKS,SAAS,GAAGC,QAAQV,KAAKS,SAAS;QACvCT,KAAKW,aAAa,GAAGD,QAAQV,KAAKW,aAAa;QAE/C,IAAI;YACF,MAAMC,aAAa,MAAMN,SAASO,YAAY,CAACb;YAC/C,IAAIY,WAAWE,eAAe,EAAE;gBAC9BF,WAAWE,eAAe,GAAGhB,aAC3BG,OAAOa,eAAe,IAAI,IAAIC,WAC9BH,WAAWE,eAAe,IAAI,IAAIC;YAEtC;YACAd,SAASW;QACX,EAAE,OAAOI,KAAK;YACZnB,SAAS;gBAAEmB;gBAAKb,SAASH,KAAKG,OAAO;YAAC;QACxC;QAEA,IAAIF,OAAOC,IAAI,EAAE;YACf,OAAOD;QACT;IACF;IACA,OAAOA;AACT,EAAC"}