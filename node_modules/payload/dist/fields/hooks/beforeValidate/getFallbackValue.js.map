{"version":3,"sources":["../../../../src/fields/hooks/beforeValidate/getFallbackValue.ts"],"sourcesContent":["import type { JsonObject, JsonValue, PayloadRequest } from '../../../types/index.js'\nimport type { FieldAffectingData } from '../../config/types.js'\n\nimport { getDefaultValue } from '../../getDefaultValue.js'\nimport { cloneDataFromOriginalDoc } from '../beforeChange/cloneDataFromOriginalDoc.js'\n\nexport async function getFallbackValue({\n  field,\n  req,\n  siblingDoc,\n}: {\n  field: FieldAffectingData\n  req: PayloadRequest\n  siblingDoc: JsonObject\n}): Promise<JsonValue> {\n  let fallbackValue: JsonValue = undefined\n  if ('name' in field && field.name) {\n    if (typeof siblingDoc[field.name] !== 'undefined') {\n      fallbackValue = cloneDataFromOriginalDoc(siblingDoc[field.name])\n    } else if ('defaultValue' in field && typeof field.defaultValue !== 'undefined') {\n      fallbackValue = await getDefaultValue({\n        defaultValue: field.defaultValue,\n        locale: req.locale || '',\n        req,\n        user: req.user,\n      })\n    }\n  }\n\n  return fallbackValue\n}\n"],"names":["getDefaultValue","cloneDataFromOriginalDoc","getFallbackValue","field","req","siblingDoc","fallbackValue","undefined","name","defaultValue","locale","user"],"mappings":"AAGA,SAASA,eAAe,QAAQ,2BAA0B;AAC1D,SAASC,wBAAwB,QAAQ,8CAA6C;AAEtF,OAAO,eAAeC,iBAAiB,EACrCC,KAAK,EACLC,GAAG,EACHC,UAAU,EAKX;IACC,IAAIC,gBAA2BC;IAC/B,IAAI,UAAUJ,SAASA,MAAMK,IAAI,EAAE;QACjC,IAAI,OAAOH,UAAU,CAACF,MAAMK,IAAI,CAAC,KAAK,aAAa;YACjDF,gBAAgBL,yBAAyBI,UAAU,CAACF,MAAMK,IAAI,CAAC;QACjE,OAAO,IAAI,kBAAkBL,SAAS,OAAOA,MAAMM,YAAY,KAAK,aAAa;YAC/EH,gBAAgB,MAAMN,gBAAgB;gBACpCS,cAAcN,MAAMM,YAAY;gBAChCC,QAAQN,IAAIM,MAAM,IAAI;gBACtBN;gBACAO,MAAMP,IAAIO,IAAI;YAChB;QACF;IACF;IAEA,OAAOL;AACT"}