{"version":3,"sources":["../../../../src/fields/baseFields/slug/index.ts"],"sourcesContent":["import type { TextFieldClientProps } from '../../../admin/types.js'\nimport type { FieldAdmin, RowField } from '../../../fields/config/types.js'\n\nimport { generateSlug } from './generateSlug.js'\n\ntype SlugFieldArgs = {\n  /**\n   * Override for the `generateSlug` checkbox field name.\n   * @default 'generateSlug'\n   */\n  checkboxName?: string\n  /**\n   * The name of the field to generate the slug from, when applicable.\n   * @default 'title'\n   */\n  fieldToUse?: string\n  /**\n   * Override for the `slug` field name.\n   * @default 'slug'\n   */\n  name?: string\n  /**\n   * A function used to override te fields at a granular level.\n   * Passes the row field to you to manipulate beyond the exposed options.\n   * @example\n   * ```ts\n   * slugField({\n   *   overrides: (field) => {\n   *     field.fields[1].label = 'Custom Slug Label'\n   *     return field\n   *   }\n   * })\n   * ```\n   */\n  overrides?: (field: RowField) => RowField\n  position?: FieldAdmin['position']\n  /**\n   * Whether or not the `slug` field is required.\n   * @default true\n   */\n  required?: boolean\n}\n\ntype SlugField = (args?: SlugFieldArgs) => RowField\n\nexport type SlugFieldClientProps = {} & Pick<SlugFieldArgs, 'fieldToUse'>\n\nexport type SlugFieldProps = SlugFieldClientProps & TextFieldClientProps\n\n/**\n * A slug is a unique, indexed, URL-friendly string that identifies a particular document, often used to construct the URL of a webpage.\n * The `slug` field auto-generates its value based on another field, e.g. \"My Title\" â†’ \"my-title\".\n *\n * The slug should continue to be generated through:\n * 1. The `create` operation, unless the user has modified the slug manually\n * 2. The `update` operation, if:\n *   a. Autosave is _not_ enabled and there is no slug\n *   b. Autosave _is_ enabled, the doc is unpublished, and the user has not modified the slug manually\n *\n * The slug should stabilize after all above criteria have been met, because the URL is typically derived from the slug.\n * This is to protect modifying potentially live URLs, breaking links, etc. without explicit intent.\n *\n * @experimental This field is experimental and may change or be removed in the future. Use at your own risk.\n */\nexport const slugField: SlugField = ({\n  name: fieldName = 'slug',\n  checkboxName = 'generateSlug',\n  fieldToUse = 'title',\n  overrides,\n  position = 'sidebar',\n  required = true,\n} = {}) => {\n  const baseField: RowField = {\n    type: 'row',\n    admin: {\n      position,\n    },\n    fields: [\n      {\n        name: checkboxName,\n        type: 'checkbox',\n        admin: {\n          description:\n            'When enabled, the slug will auto-generate from the title field on save and autosave.',\n          disableBulkEdit: true,\n          disableGroupBy: true,\n          disableListColumn: true,\n          disableListFilter: true,\n          hidden: true,\n        },\n        defaultValue: true,\n        hooks: {\n          beforeChange: [generateSlug(fieldToUse)],\n        },\n      },\n      {\n        name: fieldName,\n        type: 'text',\n        admin: {\n          components: {\n            Field: {\n              clientProps: {\n                fieldToUse,\n              } satisfies SlugFieldClientProps,\n              path: '@payloadcms/ui#SlugField',\n            },\n          },\n          width: '100%',\n        },\n        index: true,\n        required,\n        unique: true,\n      },\n    ],\n  }\n\n  if (typeof overrides === 'function') {\n    return overrides(baseField)\n  }\n\n  return baseField\n}\n"],"names":["generateSlug","slugField","name","fieldName","checkboxName","fieldToUse","overrides","position","required","baseField","type","admin","fields","description","disableBulkEdit","disableGroupBy","disableListColumn","disableListFilter","hidden","defaultValue","hooks","beforeChange","components","Field","clientProps","path","width","index","unique"],"mappings":"AAGA,SAASA,YAAY,QAAQ,oBAAmB;AA8ChD;;;;;;;;;;;;;;CAcC,GACD,OAAO,MAAMC,YAAuB,CAAC,EACnCC,MAAMC,YAAY,MAAM,EACxBC,eAAe,cAAc,EAC7BC,aAAa,OAAO,EACpBC,SAAS,EACTC,WAAW,SAAS,EACpBC,WAAW,IAAI,EAChB,GAAG,CAAC,CAAC;IACJ,MAAMC,YAAsB;QAC1BC,MAAM;QACNC,OAAO;YACLJ;QACF;QACAK,QAAQ;YACN;gBACEV,MAAME;gBACNM,MAAM;gBACNC,OAAO;oBACLE,aACE;oBACFC,iBAAiB;oBACjBC,gBAAgB;oBAChBC,mBAAmB;oBACnBC,mBAAmB;oBACnBC,QAAQ;gBACV;gBACAC,cAAc;gBACdC,OAAO;oBACLC,cAAc;wBAACrB,aAAaK;qBAAY;gBAC1C;YACF;YACA;gBACEH,MAAMC;gBACNO,MAAM;gBACNC,OAAO;oBACLW,YAAY;wBACVC,OAAO;4BACLC,aAAa;gCACXnB;4BACF;4BACAoB,MAAM;wBACR;oBACF;oBACAC,OAAO;gBACT;gBACAC,OAAO;gBACPnB;gBACAoB,QAAQ;YACV;SACD;IACH;IAEA,IAAI,OAAOtB,cAAc,YAAY;QACnC,OAAOA,UAAUG;IACnB;IAEA,OAAOA;AACT,EAAC"}