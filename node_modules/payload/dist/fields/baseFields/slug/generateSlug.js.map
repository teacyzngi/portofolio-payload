{"version":3,"sources":["../../../../src/fields/baseFields/slug/generateSlug.ts"],"sourcesContent":["import type { FieldHook } from '../../config/types.js'\n\nimport { slugify } from '../../../utilities/slugify.js'\nimport { countVersions } from './countVersions.js'\n\n/**\n * This is a `BeforeChange` field hook used to auto-generate the `slug` field.\n * See `slugField` for more details.\n */\nexport const generateSlug =\n  (fallback: string): FieldHook =>\n  async (args) => {\n    const { collection, data, global, operation, originalDoc, value: isChecked } = args\n\n    // Ensure user-defined slugs are not overwritten during create\n    // Use a generic falsy check here to include empty strings\n    if (operation === 'create') {\n      if (data) {\n        data.slug = slugify(data?.slug || data?.[fallback])\n      }\n\n      return Boolean(!data?.slug)\n    }\n\n    if (operation === 'update') {\n      // Early return to avoid additional processing\n      if (!isChecked) {\n        return false\n      }\n\n      const autosaveEnabled = Boolean(\n        (typeof collection?.versions?.drafts === 'object' &&\n          collection?.versions?.drafts.autosave) ||\n          (typeof global?.versions?.drafts === 'object' && global?.versions?.drafts.autosave),\n      )\n\n      if (!autosaveEnabled) {\n        // We can generate the slug at this point\n        if (data) {\n          data.slug = slugify(data?.[fallback])\n        }\n\n        return Boolean(!data?.slug)\n      } else {\n        // If we're publishing, we can avoid querying as we can safely assume we've exceeded the version threshold (2)\n        const isPublishing = data?._status === 'published'\n\n        // Ensure the user can take over the generated slug themselves without it ever being overridden back\n        const userOverride = data?.slug !== originalDoc?.slug\n\n        if (!userOverride) {\n          if (data) {\n            // If the fallback is an empty string, we want the slug to return to `null`\n            // This will ensure that live preview conditions continue to run as expected\n            data.slug = data?.[fallback] ? slugify(data[fallback]) : null\n          }\n        }\n\n        if (isPublishing || userOverride) {\n          return false\n        }\n\n        // Important: ensure `countVersions` is not called unnecessarily often\n        // That is why this is buried beneath all these conditions\n        const versionCount = await countVersions({\n          collectionSlug: collection?.slug,\n          globalSlug: global?.slug,\n          parentID: originalDoc?.id,\n          req: args.req,\n        })\n\n        if (versionCount <= 2) {\n          return true\n        } else {\n          return false\n        }\n      }\n    }\n  }\n"],"names":["slugify","countVersions","generateSlug","fallback","args","collection","data","global","operation","originalDoc","value","isChecked","slug","Boolean","autosaveEnabled","versions","drafts","autosave","isPublishing","_status","userOverride","versionCount","collectionSlug","globalSlug","parentID","id","req"],"mappings":"AAEA,SAASA,OAAO,QAAQ,gCAA+B;AACvD,SAASC,aAAa,QAAQ,qBAAoB;AAElD;;;CAGC,GACD,OAAO,MAAMC,eACX,CAACC,WACD,OAAOC;QACL,MAAM,EAAEC,UAAU,EAAEC,IAAI,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,EAAEC,OAAOC,SAAS,EAAE,GAAGP;QAE/E,8DAA8D;QAC9D,0DAA0D;QAC1D,IAAII,cAAc,UAAU;YAC1B,IAAIF,MAAM;gBACRA,KAAKM,IAAI,GAAGZ,QAAQM,MAAMM,QAAQN,MAAM,CAACH,SAAS;YACpD;YAEA,OAAOU,QAAQ,CAACP,MAAMM;QACxB;QAEA,IAAIJ,cAAc,UAAU;YAC1B,8CAA8C;YAC9C,IAAI,CAACG,WAAW;gBACd,OAAO;YACT;YAEA,MAAMG,kBAAkBD,QACtB,AAAC,OAAOR,YAAYU,UAAUC,WAAW,YACvCX,YAAYU,UAAUC,OAAOC,YAC5B,OAAOV,QAAQQ,UAAUC,WAAW,YAAYT,QAAQQ,UAAUC,OAAOC;YAG9E,IAAI,CAACH,iBAAiB;gBACpB,yCAAyC;gBACzC,IAAIR,MAAM;oBACRA,KAAKM,IAAI,GAAGZ,QAAQM,MAAM,CAACH,SAAS;gBACtC;gBAEA,OAAOU,QAAQ,CAACP,MAAMM;YACxB,OAAO;gBACL,8GAA8G;gBAC9G,MAAMM,eAAeZ,MAAMa,YAAY;gBAEvC,oGAAoG;gBACpG,MAAMC,eAAed,MAAMM,SAASH,aAAaG;gBAEjD,IAAI,CAACQ,cAAc;oBACjB,IAAId,MAAM;wBACR,2EAA2E;wBAC3E,4EAA4E;wBAC5EA,KAAKM,IAAI,GAAGN,MAAM,CAACH,SAAS,GAAGH,QAAQM,IAAI,CAACH,SAAS,IAAI;oBAC3D;gBACF;gBAEA,IAAIe,gBAAgBE,cAAc;oBAChC,OAAO;gBACT;gBAEA,sEAAsE;gBACtE,0DAA0D;gBAC1D,MAAMC,eAAe,MAAMpB,cAAc;oBACvCqB,gBAAgBjB,YAAYO;oBAC5BW,YAAYhB,QAAQK;oBACpBY,UAAUf,aAAagB;oBACvBC,KAAKtB,KAAKsB,GAAG;gBACf;gBAEA,IAAIL,gBAAgB,GAAG;oBACrB,OAAO;gBACT,OAAO;oBACL,OAAO;gBACT;YACF;QACF;IACF,EAAC"}