{"version":3,"sources":["../../../../src/fields/baseFields/timezone/defaultTimezones.ts"],"sourcesContent":["import type { Timezone } from '../../../config/types.js'\n\n/**\n * List of supported timezones\n *\n * label: UTC offset and location\n * value: IANA timezone name\n *\n * @example\n * { label: '(UTC-12:00) International Date Line West', value: 'Dateline Standard Time' }\n */\nexport const defaultTimezones: Timezone[] = [\n  { label: '(UTC-11:00) Midway Island, Samoa', value: 'Pacific/Midway' },\n  { label: '(UTC-11:00) Niue', value: 'Pacific/Niue' },\n  { label: '(UTC-10:00) Hawaii', value: 'Pacific/Honolulu' },\n  { label: '(UTC-10:00) Cook Islands', value: 'Pacific/Rarotonga' },\n  { label: '(UTC-09:00) Alaska', value: 'America/Anchorage' },\n  { label: '(UTC-09:00) Gambier Islands', value: 'Pacific/Gambier' },\n  { label: '(UTC-08:00) Pacific Time (US & Canada)', value: 'America/Los_Angeles' },\n  { label: '(UTC-08:00) Tijuana, Baja California', value: 'America/Tijuana' },\n  { label: '(UTC-07:00) Mountain Time (US & Canada)', value: 'America/Denver' },\n  { label: '(UTC-07:00) Arizona (No DST)', value: 'America/Phoenix' },\n  { label: '(UTC-06:00) Central Time (US & Canada)', value: 'America/Chicago' },\n  { label: '(UTC-06:00) Central America', value: 'America/Guatemala' },\n  { label: '(UTC-05:00) Eastern Time (US & Canada)', value: 'America/New_York' },\n  { label: '(UTC-05:00) Bogota, Lima, Quito', value: 'America/Bogota' },\n  { label: '(UTC-04:00) Caracas', value: 'America/Caracas' },\n  { label: '(UTC-04:00) Santiago', value: 'America/Santiago' },\n  { label: '(UTC-03:00) Buenos Aires', value: 'America/Buenos_Aires' },\n  { label: '(UTC-03:00) Brasilia', value: 'America/Sao_Paulo' },\n  { label: '(UTC-02:00) South Georgia', value: 'Atlantic/South_Georgia' },\n  { label: '(UTC-01:00) Azores', value: 'Atlantic/Azores' },\n  { label: '(UTC-01:00) Cape Verde', value: 'Atlantic/Cape_Verde' },\n  { label: '(UTC+00:00) London (GMT)', value: 'Europe/London' },\n  { label: '(UTC+01:00) Berlin, Paris', value: 'Europe/Berlin' },\n  { label: '(UTC+01:00) Lagos', value: 'Africa/Lagos' },\n  { label: '(UTC+02:00) Athens, Bucharest', value: 'Europe/Athens' },\n  { label: '(UTC+02:00) Cairo', value: 'Africa/Cairo' },\n  { label: '(UTC+03:00) Moscow, St. Petersburg', value: 'Europe/Moscow' },\n  { label: '(UTC+03:00) Riyadh', value: 'Asia/Riyadh' },\n  { label: '(UTC+04:00) Dubai', value: 'Asia/Dubai' },\n  { label: '(UTC+04:00) Baku', value: 'Asia/Baku' },\n  { label: '(UTC+05:00) Islamabad, Karachi', value: 'Asia/Karachi' },\n  { label: '(UTC+05:00) Tashkent', value: 'Asia/Tashkent' },\n  { label: '(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi', value: 'Asia/Calcutta' },\n  { label: '(UTC+06:00) Dhaka', value: 'Asia/Dhaka' },\n  { label: '(UTC+06:00) Almaty', value: 'Asia/Almaty' },\n  { label: '(UTC+07:00) Jakarta', value: 'Asia/Jakarta' },\n  { label: '(UTC+07:00) Bangkok', value: 'Asia/Bangkok' },\n  { label: '(UTC+08:00) Beijing, Shanghai', value: 'Asia/Shanghai' },\n  { label: '(UTC+08:00) Singapore', value: 'Asia/Singapore' },\n  { label: '(UTC+09:00) Tokyo, Osaka, Sapporo', value: 'Asia/Tokyo' },\n  { label: '(UTC+09:00) Seoul', value: 'Asia/Seoul' },\n  { label: '(UTC+10:00) Brisbane', value: 'Australia/Brisbane' },\n  { label: '(UTC+10:00) Sydney, Melbourne', value: 'Australia/Sydney' },\n  { label: '(UTC+10:00) Guam, Port Moresby', value: 'Pacific/Guam' },\n  { label: '(UTC+11:00) New Caledonia', value: 'Pacific/Noumea' },\n  { label: '(UTC+12:00) Auckland, Wellington', value: 'Pacific/Auckland' },\n  { label: '(UTC+12:00) Fiji', value: 'Pacific/Fiji' },\n]\n"],"names":["defaultTimezones","label","value"],"mappings":"AAEA;;;;;;;;CAQC,GACD,OAAO,MAAMA,mBAA+B;IAC1C;QAAEC,OAAO;QAAoCC,OAAO;IAAiB;IACrE;QAAED,OAAO;QAAoBC,OAAO;IAAe;IACnD;QAAED,OAAO;QAAsBC,OAAO;IAAmB;IACzD;QAAED,OAAO;QAA4BC,OAAO;IAAoB;IAChE;QAAED,OAAO;QAAsBC,OAAO;IAAoB;IAC1D;QAAED,OAAO;QAA+BC,OAAO;IAAkB;IACjE;QAAED,OAAO;QAA0CC,OAAO;IAAsB;IAChF;QAAED,OAAO;QAAwCC,OAAO;IAAkB;IAC1E;QAAED,OAAO;QAA2CC,OAAO;IAAiB;IAC5E;QAAED,OAAO;QAAgCC,OAAO;IAAkB;IAClE;QAAED,OAAO;QAA0CC,OAAO;IAAkB;IAC5E;QAAED,OAAO;QAA+BC,OAAO;IAAoB;IACnE;QAAED,OAAO;QAA0CC,OAAO;IAAmB;IAC7E;QAAED,OAAO;QAAmCC,OAAO;IAAiB;IACpE;QAAED,OAAO;QAAuBC,OAAO;IAAkB;IACzD;QAAED,OAAO;QAAwBC,OAAO;IAAmB;IAC3D;QAAED,OAAO;QAA4BC,OAAO;IAAuB;IACnE;QAAED,OAAO;QAAwBC,OAAO;IAAoB;IAC5D;QAAED,OAAO;QAA6BC,OAAO;IAAyB;IACtE;QAAED,OAAO;QAAsBC,OAAO;IAAkB;IACxD;QAAED,OAAO;QAA0BC,OAAO;IAAsB;IAChE;QAAED,OAAO;QAA4BC,OAAO;IAAgB;IAC5D;QAAED,OAAO;QAA6BC,OAAO;IAAgB;IAC7D;QAAED,OAAO;QAAqBC,OAAO;IAAe;IACpD;QAAED,OAAO;QAAiCC,OAAO;IAAgB;IACjE;QAAED,OAAO;QAAqBC,OAAO;IAAe;IACpD;QAAED,OAAO;QAAsCC,OAAO;IAAgB;IACtE;QAAED,OAAO;QAAsBC,OAAO;IAAc;IACpD;QAAED,OAAO;QAAqBC,OAAO;IAAa;IAClD;QAAED,OAAO;QAAoBC,OAAO;IAAY;IAChD;QAAED,OAAO;QAAkCC,OAAO;IAAe;IACjE;QAAED,OAAO;QAAwBC,OAAO;IAAgB;IACxD;QAAED,OAAO;QAAmDC,OAAO;IAAgB;IACnF;QAAED,OAAO;QAAqBC,OAAO;IAAa;IAClD;QAAED,OAAO;QAAsBC,OAAO;IAAc;IACpD;QAAED,OAAO;QAAuBC,OAAO;IAAe;IACtD;QAAED,OAAO;QAAuBC,OAAO;IAAe;IACtD;QAAED,OAAO;QAAiCC,OAAO;IAAgB;IACjE;QAAED,OAAO;QAAyBC,OAAO;IAAiB;IAC1D;QAAED,OAAO;QAAqCC,OAAO;IAAa;IAClE;QAAED,OAAO;QAAqBC,OAAO;IAAa;IAClD;QAAED,OAAO;QAAwBC,OAAO;IAAqB;IAC7D;QAAED,OAAO;QAAiCC,OAAO;IAAmB;IACpE;QAAED,OAAO;QAAkCC,OAAO;IAAe;IACjE;QAAED,OAAO;QAA6BC,OAAO;IAAiB;IAC9D;QAAED,OAAO;QAAoCC,OAAO;IAAmB;IACvE;QAAED,OAAO;QAAoBC,OAAO;IAAe;CACpD,CAAA"}