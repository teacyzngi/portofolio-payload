{"version":3,"sources":["../../src/uploads/getBaseFields.ts"],"sourcesContent":["import type { CollectionConfig } from '../collections/config/types.js'\nimport type { Config } from '../config/types.js'\nimport type { Field } from '../fields/config/types.js'\nimport type { UploadConfig } from './types.js'\n\nimport { mimeTypeValidator } from './mimeTypeValidator.js'\n\ntype GenerateURLArgs = {\n  collectionSlug: string\n  config: Config\n  filename?: string\n}\nconst generateURL = ({ collectionSlug, config, filename }: GenerateURLArgs) => {\n  if (filename) {\n    return `${config.serverURL || ''}${config.routes?.api || ''}/${collectionSlug}/file/${encodeURIComponent(filename)}`\n  }\n  return undefined\n}\n\ntype Options = {\n  collection: CollectionConfig\n  config: Config\n}\n\nexport const getBaseUploadFields = ({ collection, config }: Options): Field[] => {\n  const uploadOptions: UploadConfig = typeof collection.upload === 'object' ? collection.upload : {}\n\n  const mimeType: Field = {\n    name: 'mimeType',\n    type: 'text',\n    admin: {\n      hidden: true,\n      readOnly: true,\n    },\n    label: 'MIME Type',\n  }\n\n  const thumbnailURL: Field = {\n    name: 'thumbnailURL',\n    type: 'text',\n    admin: {\n      hidden: true,\n      readOnly: true,\n    },\n    hooks: {\n      afterRead: [\n        ({ originalDoc }) => {\n          const adminThumbnail =\n            typeof collection.upload !== 'boolean' ? collection.upload?.adminThumbnail : undefined\n\n          if (typeof adminThumbnail === 'function') {\n            return adminThumbnail({ doc: originalDoc })\n          }\n\n          if (\n            typeof adminThumbnail === 'string' &&\n            'sizes' in originalDoc &&\n            originalDoc.sizes?.[adminThumbnail]?.filename\n          ) {\n            return generateURL({\n              collectionSlug: collection.slug,\n              config,\n              filename: originalDoc.sizes?.[adminThumbnail].filename as string,\n            })\n          }\n\n          return null\n        },\n      ],\n    },\n    label: 'Thumbnail URL',\n  }\n\n  const width: Field = {\n    name: 'width',\n    type: 'number',\n    admin: {\n      hidden: true,\n      readOnly: true,\n    },\n    label: ({ t }) => t('upload:width'),\n  }\n\n  const height: Field = {\n    name: 'height',\n    type: 'number',\n    admin: {\n      hidden: true,\n      readOnly: true,\n    },\n    label: ({ t }) => t('upload:height'),\n  }\n\n  const filesize: Field = {\n    name: 'filesize',\n    type: 'number',\n    admin: {\n      hidden: true,\n      readOnly: true,\n    },\n    label: ({ t }) => t('upload:fileSize'),\n  }\n\n  const filename: Field = {\n    name: 'filename',\n    type: 'text',\n    admin: {\n      disableBulkEdit: true,\n      hidden: true,\n      readOnly: true,\n    },\n    index: true,\n    label: ({ t }) => t('upload:fileName'),\n  }\n\n  // Only set unique: true if the collection does not have a compound index\n  if (\n    collection.upload === true ||\n    (typeof collection.upload === 'object' && !collection.upload.filenameCompoundIndex)\n  ) {\n    filename.unique = true\n  }\n\n  const url: Field = {\n    name: 'url',\n    type: 'text',\n    admin: {\n      hidden: true,\n      readOnly: true,\n    },\n    label: 'URL',\n  }\n\n  let uploadFields: Field[] = [\n    {\n      ...url,\n      hooks: {\n        afterRead: [\n          ({ data, value }) => {\n            if (value && !data?.filename) {\n              return value\n            }\n\n            return generateURL({\n              collectionSlug: collection.slug,\n              config,\n              filename: data?.filename,\n            })\n          },\n        ],\n      },\n    },\n    thumbnailURL,\n    filename,\n    mimeType,\n    filesize,\n    width,\n    height,\n  ]\n\n  // Add focal point fields if not disabled\n  if (\n    uploadOptions.focalPoint !== false ||\n    uploadOptions.imageSizes ||\n    uploadOptions.resizeOptions\n  ) {\n    uploadFields = uploadFields.concat(\n      ['focalX', 'focalY'].map((name) => {\n        return {\n          name,\n          type: 'number',\n          admin: {\n            disableGroupBy: true,\n            disableListColumn: true,\n            disableListFilter: true,\n            hidden: true,\n          },\n        }\n      }),\n    )\n  }\n\n  if (uploadOptions.mimeTypes) {\n    mimeType.validate = mimeTypeValidator(uploadOptions.mimeTypes)\n  }\n\n  // In Payload v4, image size subfields (`url`, `width`, `height`, etc.) should\n  // default to `disableGroupBy: true`, `disableListColumn: true` and `disableListFilter: true`\n  // to avoid cluttering the collection list view and filters by default.\n  if (uploadOptions.imageSizes) {\n    uploadFields = uploadFields.concat([\n      {\n        name: 'sizes',\n        type: 'group',\n        admin: {\n          hidden: true,\n        },\n        fields: uploadOptions.imageSizes.map((size) => ({\n          name: size.name,\n          type: 'group',\n          admin: {\n            hidden: true,\n            ...(size.admin?.disableGroupBy && { disableGroupBy: true }),\n            ...(size.admin?.disableListColumn && { disableListColumn: true }),\n            ...(size.admin?.disableListFilter && { disableListFilter: true }),\n          },\n          fields: [\n            {\n              ...url,\n              admin: {\n                ...url.admin,\n                ...(size.admin?.disableGroupBy && { disableGroupBy: true }),\n                ...(size.admin?.disableListColumn && { disableListColumn: true }),\n                ...(size.admin?.disableListFilter && { disableListFilter: true }),\n              },\n              hooks: {\n                afterRead: [\n                  ({ data, value }) => {\n                    if (value && size.height && size.width && !data?.filename) {\n                      return value\n                    }\n\n                    const sizeFilename = data?.sizes?.[size.name]?.filename\n\n                    if (sizeFilename) {\n                      return `${config.serverURL}${config.routes?.api}/${collection.slug}/file/${encodeURIComponent(sizeFilename)}`\n                    }\n\n                    return null\n                  },\n                ],\n              },\n            },\n            {\n              ...width,\n              admin: {\n                ...width.admin,\n                ...(size.admin?.disableGroupBy && { disableGroupBy: true }),\n                ...(size.admin?.disableListColumn && { disableListColumn: true }),\n                ...(size.admin?.disableListFilter && { disableListFilter: true }),\n              },\n            },\n            {\n              ...height,\n              admin: {\n                ...height.admin,\n                ...(size.admin?.disableGroupBy && { disableGroupBy: true }),\n                ...(size.admin?.disableListColumn && { disableListColumn: true }),\n                ...(size.admin?.disableListFilter && { disableListFilter: true }),\n              },\n            },\n            {\n              ...mimeType,\n              admin: {\n                ...mimeType.admin,\n                ...(size.admin?.disableGroupBy && { disableGroupBy: true }),\n                ...(size.admin?.disableListColumn && { disableListColumn: true }),\n                ...(size.admin?.disableListFilter && { disableListFilter: true }),\n              },\n            },\n            {\n              ...filesize,\n              admin: {\n                ...filesize.admin,\n                ...(size.admin?.disableGroupBy && { disableGroupBy: true }),\n                ...(size.admin?.disableListColumn && { disableListColumn: true }),\n                ...(size.admin?.disableListFilter && { disableListFilter: true }),\n              },\n            },\n            {\n              ...filename,\n              admin: {\n                ...filename.admin,\n                ...(size.admin?.disableGroupBy && { disableGroupBy: true }),\n                ...(size.admin?.disableListColumn && { disableListColumn: true }),\n                ...(size.admin?.disableListFilter && { disableListFilter: true }),\n              },\n              unique: false,\n            },\n          ],\n          label: size.name,\n        })),\n        label: ({ t }) => t('upload:sizes'),\n      },\n    ])\n  }\n  return uploadFields\n}\n"],"names":["mimeTypeValidator","generateURL","collectionSlug","config","filename","serverURL","routes","api","encodeURIComponent","undefined","getBaseUploadFields","collection","uploadOptions","upload","mimeType","name","type","admin","hidden","readOnly","label","thumbnailURL","hooks","afterRead","originalDoc","adminThumbnail","doc","sizes","slug","width","t","height","filesize","disableBulkEdit","index","filenameCompoundIndex","unique","url","uploadFields","data","value","focalPoint","imageSizes","resizeOptions","concat","map","disableGroupBy","disableListColumn","disableListFilter","mimeTypes","validate","fields","size","sizeFilename"],"mappings":"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"}