{"version":3,"sources":["../../../src/collections/endpoints/findVersions.ts"],"sourcesContent":["import { status as httpStatus } from 'http-status'\n\nimport type { PayloadHandler } from '../../config/types.js'\nimport type { Where } from '../../types/index.js'\n\nimport { getRequestCollection } from '../../utilities/getRequestEntity.js'\nimport { headersWithCors } from '../../utilities/headersWithCors.js'\nimport { isNumber } from '../../utilities/isNumber.js'\nimport { sanitizePopulateParam } from '../../utilities/sanitizePopulateParam.js'\nimport { sanitizeSelectParam } from '../../utilities/sanitizeSelectParam.js'\nimport { findVersionsOperation } from '../operations/findVersions.js'\n\nexport const findVersionsHandler: PayloadHandler = async (req) => {\n  const collection = getRequestCollection(req)\n  const { depth, limit, page, pagination, populate, select, sort, trash, where } = req.query as {\n    depth?: string\n    limit?: string\n    page?: string\n    pagination?: string\n    populate?: Record<string, unknown>\n    select?: Record<string, unknown>\n    sort?: string\n    trash?: string\n    where?: Where\n  }\n\n  const result = await findVersionsOperation({\n    collection,\n    depth: isNumber(depth) ? Number(depth) : undefined,\n    limit: isNumber(limit) ? Number(limit) : undefined,\n    page: isNumber(page) ? Number(page) : undefined,\n    pagination: pagination === 'false' ? false : undefined,\n    populate: sanitizePopulateParam(populate),\n    req,\n    select: sanitizeSelectParam(select),\n    sort: typeof sort === 'string' ? sort.split(',') : undefined,\n    trash: trash === 'true',\n    where,\n  })\n\n  return Response.json(result, {\n    headers: headersWithCors({\n      headers: new Headers(),\n      req,\n    }),\n    status: httpStatus.OK,\n  })\n}\n"],"names":["status","httpStatus","getRequestCollection","headersWithCors","isNumber","sanitizePopulateParam","sanitizeSelectParam","findVersionsOperation","findVersionsHandler","req","collection","depth","limit","page","pagination","populate","select","sort","trash","where","query","result","Number","undefined","split","Response","json","headers","Headers","OK"],"mappings":"AAAA,SAASA,UAAUC,UAAU,QAAQ,cAAa;AAKlD,SAASC,oBAAoB,QAAQ,sCAAqC;AAC1E,SAASC,eAAe,QAAQ,qCAAoC;AACpE,SAASC,QAAQ,QAAQ,8BAA6B;AACtD,SAASC,qBAAqB,QAAQ,2CAA0C;AAChF,SAASC,mBAAmB,QAAQ,yCAAwC;AAC5E,SAASC,qBAAqB,QAAQ,gCAA+B;AAErE,OAAO,MAAMC,sBAAsC,OAAOC;IACxD,MAAMC,aAAaR,qBAAqBO;IACxC,MAAM,EAAEE,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAE,GAAGV,IAAIW,KAAK;IAY1F,MAAMC,SAAS,MAAMd,sBAAsB;QACzCG;QACAC,OAAOP,SAASO,SAASW,OAAOX,SAASY;QACzCX,OAAOR,SAASQ,SAASU,OAAOV,SAASW;QACzCV,MAAMT,SAASS,QAAQS,OAAOT,QAAQU;QACtCT,YAAYA,eAAe,UAAU,QAAQS;QAC7CR,UAAUV,sBAAsBU;QAChCN;QACAO,QAAQV,oBAAoBU;QAC5BC,MAAM,OAAOA,SAAS,WAAWA,KAAKO,KAAK,CAAC,OAAOD;QACnDL,OAAOA,UAAU;QACjBC;IACF;IAEA,OAAOM,SAASC,IAAI,CAACL,QAAQ;QAC3BM,SAASxB,gBAAgB;YACvBwB,SAAS,IAAIC;YACbnB;QACF;QACAT,QAAQC,WAAW4B,EAAE;IACvB;AACF,EAAC"}