{"version":3,"sources":["../../../src/collections/endpoints/delete.ts"],"sourcesContent":["import { getTranslation } from '@payloadcms/translations'\nimport { status as httpStatus } from 'http-status'\n\nimport type { PayloadHandler } from '../../config/types.js'\nimport type { Where } from '../../types/index.js'\n\nimport { getRequestCollection } from '../../utilities/getRequestEntity.js'\nimport { headersWithCors } from '../../utilities/headersWithCors.js'\nimport { isNumber } from '../../utilities/isNumber.js'\nimport { sanitizePopulateParam } from '../../utilities/sanitizePopulateParam.js'\nimport { sanitizeSelectParam } from '../../utilities/sanitizeSelectParam.js'\nimport { deleteOperation } from '../operations/delete.js'\n\nexport const deleteHandler: PayloadHandler = async (req) => {\n  const collection = getRequestCollection(req)\n  const { depth, overrideLock, populate, select, trash, where } = req.query as {\n    depth?: string\n    overrideLock?: string\n    populate?: Record<string, unknown>\n    select?: Record<string, unknown>\n    trash?: string\n    where?: Where\n  }\n\n  const result = await deleteOperation({\n    collection,\n    depth: isNumber(depth) ? Number(depth) : undefined,\n    overrideLock: Boolean(overrideLock === 'true'),\n    populate: sanitizePopulateParam(populate),\n    req,\n    select: sanitizeSelectParam(select),\n    trash: trash === 'true',\n    where: where!,\n  })\n\n  const headers = headersWithCors({\n    headers: new Headers(),\n    req,\n  })\n\n  if (result.errors.length === 0) {\n    const message = req.t('general:deletedCountSuccessfully', {\n      count: result.docs.length,\n      label: getTranslation(\n        collection.config.labels[result.docs.length === 1 ? 'singular' : 'plural'],\n        req.i18n,\n      ),\n    })\n\n    return Response.json(\n      {\n        ...result,\n        message,\n      },\n      {\n        headers,\n        status: httpStatus.OK,\n      },\n    )\n  }\n\n  const total = result.docs.length + result.errors.length\n\n  const message = req.t('error:unableToDeleteCount', {\n    count: result.errors.length,\n    label: getTranslation(collection.config.labels[total === 1 ? 'singular' : 'plural'], req.i18n),\n    total,\n  })\n\n  return Response.json(\n    {\n      ...result,\n      message,\n    },\n    {\n      headers,\n      status: httpStatus.BAD_REQUEST,\n    },\n  )\n}\n"],"names":["getTranslation","status","httpStatus","getRequestCollection","headersWithCors","isNumber","sanitizePopulateParam","sanitizeSelectParam","deleteOperation","deleteHandler","req","collection","depth","overrideLock","populate","select","trash","where","query","result","Number","undefined","Boolean","headers","Headers","errors","length","message","t","count","docs","label","config","labels","i18n","Response","json","OK","total","BAD_REQUEST"],"mappings":"AAAA,SAASA,cAAc,QAAQ,2BAA0B;AACzD,SAASC,UAAUC,UAAU,QAAQ,cAAa;AAKlD,SAASC,oBAAoB,QAAQ,sCAAqC;AAC1E,SAASC,eAAe,QAAQ,qCAAoC;AACpE,SAASC,QAAQ,QAAQ,8BAA6B;AACtD,SAASC,qBAAqB,QAAQ,2CAA0C;AAChF,SAASC,mBAAmB,QAAQ,yCAAwC;AAC5E,SAASC,eAAe,QAAQ,0BAAyB;AAEzD,OAAO,MAAMC,gBAAgC,OAAOC;IAClD,MAAMC,aAAaR,qBAAqBO;IACxC,MAAM,EAAEE,KAAK,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAE,GAAGP,IAAIQ,KAAK;IASzE,MAAMC,SAAS,MAAMX,gBAAgB;QACnCG;QACAC,OAAOP,SAASO,SAASQ,OAAOR,SAASS;QACzCR,cAAcS,QAAQT,iBAAiB;QACvCC,UAAUR,sBAAsBQ;QAChCJ;QACAK,QAAQR,oBAAoBQ;QAC5BC,OAAOA,UAAU;QACjBC,OAAOA;IACT;IAEA,MAAMM,UAAUnB,gBAAgB;QAC9BmB,SAAS,IAAIC;QACbd;IACF;IAEA,IAAIS,OAAOM,MAAM,CAACC,MAAM,KAAK,GAAG;QAC9B,MAAMC,UAAUjB,IAAIkB,CAAC,CAAC,oCAAoC;YACxDC,OAAOV,OAAOW,IAAI,CAACJ,MAAM;YACzBK,OAAO/B,eACLW,WAAWqB,MAAM,CAACC,MAAM,CAACd,OAAOW,IAAI,CAACJ,MAAM,KAAK,IAAI,aAAa,SAAS,EAC1EhB,IAAIwB,IAAI;QAEZ;QAEA,OAAOC,SAASC,IAAI,CAClB;YACE,GAAGjB,MAAM;YACTQ;QACF,GACA;YACEJ;YACAtB,QAAQC,WAAWmC,EAAE;QACvB;IAEJ;IAEA,MAAMC,QAAQnB,OAAOW,IAAI,CAACJ,MAAM,GAAGP,OAAOM,MAAM,CAACC,MAAM;IAEvD,MAAMC,UAAUjB,IAAIkB,CAAC,CAAC,6BAA6B;QACjDC,OAAOV,OAAOM,MAAM,CAACC,MAAM;QAC3BK,OAAO/B,eAAeW,WAAWqB,MAAM,CAACC,MAAM,CAACK,UAAU,IAAI,aAAa,SAAS,EAAE5B,IAAIwB,IAAI;QAC7FI;IACF;IAEA,OAAOH,SAASC,IAAI,CAClB;QACE,GAAGjB,MAAM;QACTQ;IACF,GACA;QACEJ;QACAtB,QAAQC,WAAWqC,WAAW;IAChC;AAEJ,EAAC"}