{"version":3,"sources":["../../../src/collections/endpoints/findByID.ts"],"sourcesContent":["import { status as httpStatus } from 'http-status'\n\nimport type { PayloadHandler } from '../../config/types.js'\n\nimport { getRequestCollectionWithID } from '../../utilities/getRequestEntity.js'\nimport { headersWithCors } from '../../utilities/headersWithCors.js'\nimport { isNumber } from '../../utilities/isNumber.js'\nimport { type JoinParams, sanitizeJoinParams } from '../../utilities/sanitizeJoinParams.js'\nimport { sanitizePopulateParam } from '../../utilities/sanitizePopulateParam.js'\nimport { sanitizeSelectParam } from '../../utilities/sanitizeSelectParam.js'\nimport { findByIDOperation } from '../operations/findByID.js'\n\nexport const findByIDHandler: PayloadHandler = async (req) => {\n  const { data, searchParams } = req\n  const { id, collection } = getRequestCollectionWithID(req)\n  const depth = data ? data.depth : searchParams.get('depth')\n  const trash = data ? data.trash : searchParams.get('trash') === 'true'\n  const flattenLocales = data\n    ? data.flattenLocales\n    : searchParams.has('flattenLocales')\n      ? searchParams.get('flattenLocales') === 'true'\n      : // flattenLocales should be undefined if not provided, so that the default (true) is applied in the operation\n        undefined\n\n  const result = await findByIDOperation({\n    id,\n    collection,\n    data: data\n      ? data?.data\n      : searchParams.get('data')\n        ? JSON.parse(searchParams.get('data') as string)\n        : undefined,\n    depth: isNumber(depth) ? Number(depth) : undefined,\n    draft: data ? data.draft : searchParams.get('draft') === 'true',\n    flattenLocales,\n    joins: sanitizeJoinParams(req.query.joins as JoinParams),\n    populate: sanitizePopulateParam(req.query.populate),\n    req,\n    select: sanitizeSelectParam(req.query.select),\n    trash,\n  })\n\n  return Response.json(result, {\n    headers: headersWithCors({\n      headers: new Headers(),\n      req,\n    }),\n    status: httpStatus.OK,\n  })\n}\n"],"names":["status","httpStatus","getRequestCollectionWithID","headersWithCors","isNumber","sanitizeJoinParams","sanitizePopulateParam","sanitizeSelectParam","findByIDOperation","findByIDHandler","req","data","searchParams","id","collection","depth","get","trash","flattenLocales","has","undefined","result","JSON","parse","Number","draft","joins","query","populate","select","Response","json","headers","Headers","OK"],"mappings":"AAAA,SAASA,UAAUC,UAAU,QAAQ,cAAa;AAIlD,SAASC,0BAA0B,QAAQ,sCAAqC;AAChF,SAASC,eAAe,QAAQ,qCAAoC;AACpE,SAASC,QAAQ,QAAQ,8BAA6B;AACtD,SAA0BC,kBAAkB,QAAQ,wCAAuC;AAC3F,SAASC,qBAAqB,QAAQ,2CAA0C;AAChF,SAASC,mBAAmB,QAAQ,yCAAwC;AAC5E,SAASC,iBAAiB,QAAQ,4BAA2B;AAE7D,OAAO,MAAMC,kBAAkC,OAAOC;IACpD,MAAM,EAAEC,IAAI,EAAEC,YAAY,EAAE,GAAGF;IAC/B,MAAM,EAAEG,EAAE,EAAEC,UAAU,EAAE,GAAGZ,2BAA2BQ;IACtD,MAAMK,QAAQJ,OAAOA,KAAKI,KAAK,GAAGH,aAAaI,GAAG,CAAC;IACnD,MAAMC,QAAQN,OAAOA,KAAKM,KAAK,GAAGL,aAAaI,GAAG,CAAC,aAAa;IAChE,MAAME,iBAAiBP,OACnBA,KAAKO,cAAc,GACnBN,aAAaO,GAAG,CAAC,oBACfP,aAAaI,GAAG,CAAC,sBAAsB,SAEvCI;IAEN,MAAMC,SAAS,MAAMb,kBAAkB;QACrCK;QACAC;QACAH,MAAMA,OACFA,MAAMA,OACNC,aAAaI,GAAG,CAAC,UACfM,KAAKC,KAAK,CAACX,aAAaI,GAAG,CAAC,WAC5BI;QACNL,OAAOX,SAASW,SAASS,OAAOT,SAASK;QACzCK,OAAOd,OAAOA,KAAKc,KAAK,GAAGb,aAAaI,GAAG,CAAC,aAAa;QACzDE;QACAQ,OAAOrB,mBAAmBK,IAAIiB,KAAK,CAACD,KAAK;QACzCE,UAAUtB,sBAAsBI,IAAIiB,KAAK,CAACC,QAAQ;QAClDlB;QACAmB,QAAQtB,oBAAoBG,IAAIiB,KAAK,CAACE,MAAM;QAC5CZ;IACF;IAEA,OAAOa,SAASC,IAAI,CAACV,QAAQ;QAC3BW,SAAS7B,gBAAgB;YACvB6B,SAAS,IAAIC;YACbvB;QACF;QACAV,QAAQC,WAAWiC,EAAE;IACvB;AACF,EAAC"}