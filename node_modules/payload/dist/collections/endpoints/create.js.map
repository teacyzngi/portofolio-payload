{"version":3,"sources":["../../../src/collections/endpoints/create.ts"],"sourcesContent":["import { getTranslation } from '@payloadcms/translations'\nimport { status as httpStatus } from 'http-status'\n\nimport type { PayloadHandler } from '../../config/types.js'\n\nimport { getRequestCollection } from '../../utilities/getRequestEntity.js'\nimport { headersWithCors } from '../../utilities/headersWithCors.js'\nimport { isNumber } from '../../utilities/isNumber.js'\nimport { sanitizePopulateParam } from '../../utilities/sanitizePopulateParam.js'\nimport { sanitizeSelectParam } from '../../utilities/sanitizeSelectParam.js'\nimport { createOperation } from '../operations/create.js'\n\nexport const createHandler: PayloadHandler = async (req) => {\n  const collection = getRequestCollection(req)\n  const { searchParams } = req\n  const autosave = searchParams.get('autosave') === 'true'\n  const draft = searchParams.get('draft') === 'true'\n  const depth = searchParams.get('depth')\n  const publishSpecificLocale = req.query.publishSpecificLocale as string | undefined\n\n  const doc = await createOperation({\n    autosave,\n    collection,\n    data: req.data!,\n    depth: isNumber(depth) ? depth : undefined,\n    draft,\n    populate: sanitizePopulateParam(req.query.populate),\n    publishSpecificLocale,\n    req,\n    select: sanitizeSelectParam(req.query.select),\n  })\n\n  return Response.json(\n    {\n      doc,\n      message: req.t('general:successfullyCreated', {\n        label: getTranslation(collection.config.labels.singular, req.i18n),\n      }),\n    },\n    {\n      headers: headersWithCors({\n        headers: new Headers(),\n        req,\n      }),\n      status: httpStatus.CREATED,\n    },\n  )\n}\n"],"names":["getTranslation","status","httpStatus","getRequestCollection","headersWithCors","isNumber","sanitizePopulateParam","sanitizeSelectParam","createOperation","createHandler","req","collection","searchParams","autosave","get","draft","depth","publishSpecificLocale","query","doc","data","undefined","populate","select","Response","json","message","t","label","config","labels","singular","i18n","headers","Headers","CREATED"],"mappings":"AAAA,SAASA,cAAc,QAAQ,2BAA0B;AACzD,SAASC,UAAUC,UAAU,QAAQ,cAAa;AAIlD,SAASC,oBAAoB,QAAQ,sCAAqC;AAC1E,SAASC,eAAe,QAAQ,qCAAoC;AACpE,SAASC,QAAQ,QAAQ,8BAA6B;AACtD,SAASC,qBAAqB,QAAQ,2CAA0C;AAChF,SAASC,mBAAmB,QAAQ,yCAAwC;AAC5E,SAASC,eAAe,QAAQ,0BAAyB;AAEzD,OAAO,MAAMC,gBAAgC,OAAOC;IAClD,MAAMC,aAAaR,qBAAqBO;IACxC,MAAM,EAAEE,YAAY,EAAE,GAAGF;IACzB,MAAMG,WAAWD,aAAaE,GAAG,CAAC,gBAAgB;IAClD,MAAMC,QAAQH,aAAaE,GAAG,CAAC,aAAa;IAC5C,MAAME,QAAQJ,aAAaE,GAAG,CAAC;IAC/B,MAAMG,wBAAwBP,IAAIQ,KAAK,CAACD,qBAAqB;IAE7D,MAAME,MAAM,MAAMX,gBAAgB;QAChCK;QACAF;QACAS,MAAMV,IAAIU,IAAI;QACdJ,OAAOX,SAASW,SAASA,QAAQK;QACjCN;QACAO,UAAUhB,sBAAsBI,IAAIQ,KAAK,CAACI,QAAQ;QAClDL;QACAP;QACAa,QAAQhB,oBAAoBG,IAAIQ,KAAK,CAACK,MAAM;IAC9C;IAEA,OAAOC,SAASC,IAAI,CAClB;QACEN;QACAO,SAAShB,IAAIiB,CAAC,CAAC,+BAA+B;YAC5CC,OAAO5B,eAAeW,WAAWkB,MAAM,CAACC,MAAM,CAACC,QAAQ,EAAErB,IAAIsB,IAAI;QACnE;IACF,GACA;QACEC,SAAS7B,gBAAgB;YACvB6B,SAAS,IAAIC;YACbxB;QACF;QACAT,QAAQC,WAAWiC,OAAO;IAC5B;AAEJ,EAAC"}