{"version":3,"sources":["../../../../src/collections/operations/local/create.ts"],"sourcesContent":["import type {\n  Document,\n  PayloadRequest,\n  PopulateType,\n  SelectType,\n  TransformCollectionWithSelect,\n} from '../../../types/index.js'\nimport type { File } from '../../../uploads/types.js'\nimport type { CreateLocalReqOptions } from '../../../utilities/createLocalReq.js'\nimport type {\n  DataFromCollectionSlug,\n  RequiredDataFromCollectionSlug,\n  SelectFromCollectionSlug,\n} from '../../config/types.js'\n\nimport { APIError } from '../../../errors/index.js'\nimport {\n  type CollectionSlug,\n  deepCopyObjectSimple,\n  type Payload,\n  type RequestContext,\n  type TypedLocale,\n} from '../../../index.js'\nimport { getFileByPath } from '../../../uploads/getFileByPath.js'\nimport { createLocalReq } from '../../../utilities/createLocalReq.js'\nimport { createOperation } from '../create.js'\n\nexport type Options<TSlug extends CollectionSlug, TSelect extends SelectType> = {\n  /**\n   * the Collection slug to operate against.\n   */\n  collection: TSlug\n  /**\n   * [Context](https://payloadcms.com/docs/hooks/context), which will then be passed to `context` and `req.context`,\n   * which can be read by hooks. Useful if you want to pass additional information to the hooks which\n   * shouldn't be necessarily part of the document, for example a `triggerBeforeChange` option which can be read by the BeforeChange hook\n   * to determine if it should run or not.\n   */\n  context?: RequestContext\n  /**\n   * The data for the document to create.\n   */\n  data: RequiredDataFromCollectionSlug<TSlug>\n  /**\n   * [Control auto-population](https://payloadcms.com/docs/queries/depth) of nested relationship and upload fields.\n   */\n  depth?: number\n  /**\n   * When set to `true`, a [database transactions](https://payloadcms.com/docs/database/transactions) will not be initialized.\n   * @default false\n   */\n  disableTransaction?: boolean\n  /**\n   * If creating verification-enabled auth doc,\n   * you can disable the email that is auto-sent\n   */\n  disableVerificationEmail?: boolean\n  /**\n   * Create a **draft** document. [More](https://payloadcms.com/docs/versions/drafts#draft-api)\n   */\n  draft?: boolean\n  /**\n   * If you want to create a document that is a duplicate of another document\n   */\n  duplicateFromID?: DataFromCollectionSlug<TSlug>['id']\n  /**\n   * Specify a [fallback locale](https://payloadcms.com/docs/configuration/localization) to use for any returned documents.\n   */\n  fallbackLocale?: false | TypedLocale\n  /**\n   * A `File` object when creating a collection with `upload: true`.\n   */\n  file?: File\n  /**\n   * A file path when creating a collection with `upload: true`.\n   */\n  filePath?: string\n  /**\n   * Specify [locale](https://payloadcms.com/docs/configuration/localization) for any returned documents.\n   */\n  locale?: TypedLocale\n  /**\n   * Skip access control.\n   * Set to `false` if you want to respect Access Control for the operation, for example when fetching data for the front-end.\n   * @default true\n   */\n  overrideAccess?: boolean\n  /**\n   * If you are uploading a file and would like to replace\n   * the existing file instead of generating a new filename,\n   * you can set the following property to `true`\n   */\n  overwriteExistingFiles?: boolean\n  /**\n   * Specify [populate](https://payloadcms.com/docs/queries/select#populate) to control which fields to include to the result from populated documents.\n   */\n  populate?: PopulateType\n  /**\n   * The `PayloadRequest` object. You can pass it to thread the current [transaction](https://payloadcms.com/docs/database/transactions), user and locale to the operation.\n   * Recommended to pass when using the Local API from hooks, as usually you want to execute the operation within the current transaction.\n   */\n  req?: Partial<PayloadRequest>\n  /**\n   * Specify [select](https://payloadcms.com/docs/queries/select) to control which fields to include to the result.\n   */\n  select?: TSelect\n  /**\n   * Opt-in to receiving hidden fields. By default, they are hidden from returned documents in accordance to your config.\n   * @default false\n   */\n  showHiddenFields?: boolean\n  /**\n   * If you set `overrideAccess` to `false`, you can pass a user to use against the access control checks.\n   */\n  user?: Document\n}\n\nexport async function createLocal<\n  TSlug extends CollectionSlug,\n  TSelect extends SelectFromCollectionSlug<TSlug>,\n>(\n  payload: Payload,\n  options: Options<TSlug, TSelect>,\n): Promise<TransformCollectionWithSelect<TSlug, TSelect>> {\n  const {\n    collection: collectionSlug,\n    data,\n    depth,\n    disableTransaction,\n    disableVerificationEmail,\n    draft,\n    duplicateFromID,\n    file,\n    filePath,\n    overrideAccess = true,\n    overwriteExistingFiles = false,\n    populate,\n    select,\n    showHiddenFields,\n  } = options\n\n  const collection = payload.collections[collectionSlug]\n\n  if (!collection) {\n    throw new APIError(\n      `The collection with slug ${String(collectionSlug)} can't be found. Create Operation.`,\n    )\n  }\n\n  const req = await createLocalReq(options as CreateLocalReqOptions, payload)\n\n  req.file = file ?? (await getFileByPath(filePath!))\n\n  return createOperation<TSlug, TSelect>({\n    collection,\n    data: deepCopyObjectSimple(data), // Ensure mutation of data in create operation hooks doesn't affect the original data\n    depth,\n    disableTransaction,\n    disableVerificationEmail,\n    draft,\n    duplicateFromID,\n    overrideAccess,\n    overwriteExistingFiles,\n    populate,\n    req,\n    select,\n    showHiddenFields,\n  })\n}\n"],"names":["APIError","deepCopyObjectSimple","getFileByPath","createLocalReq","createOperation","createLocal","payload","options","collection","collectionSlug","data","depth","disableTransaction","disableVerificationEmail","draft","duplicateFromID","file","filePath","overrideAccess","overwriteExistingFiles","populate","select","showHiddenFields","collections","String","req"],"mappings":"AAeA,SAASA,QAAQ,QAAQ,2BAA0B;AACnD,SAEEC,oBAAoB,QAIf,oBAAmB;AAC1B,SAASC,aAAa,QAAQ,oCAAmC;AACjE,SAASC,cAAc,QAAQ,uCAAsC;AACrE,SAASC,eAAe,QAAQ,eAAc;AA4F9C,OAAO,eAAeC,YAIpBC,OAAgB,EAChBC,OAAgC;IAEhC,MAAM,EACJC,YAAYC,cAAc,EAC1BC,IAAI,EACJC,KAAK,EACLC,kBAAkB,EAClBC,wBAAwB,EACxBC,KAAK,EACLC,eAAe,EACfC,IAAI,EACJC,QAAQ,EACRC,iBAAiB,IAAI,EACrBC,yBAAyB,KAAK,EAC9BC,QAAQ,EACRC,MAAM,EACNC,gBAAgB,EACjB,GAAGf;IAEJ,MAAMC,aAAaF,QAAQiB,WAAW,CAACd,eAAe;IAEtD,IAAI,CAACD,YAAY;QACf,MAAM,IAAIR,SACR,CAAC,yBAAyB,EAAEwB,OAAOf,gBAAgB,kCAAkC,CAAC;IAE1F;IAEA,MAAMgB,MAAM,MAAMtB,eAAeI,SAAkCD;IAEnEmB,IAAIT,IAAI,GAAGA,QAAS,MAAMd,cAAce;IAExC,OAAOb,gBAAgC;QACrCI;QACAE,MAAMT,qBAAqBS;QAC3BC;QACAC;QACAC;QACAC;QACAC;QACAG;QACAC;QACAC;QACAK;QACAJ;QACAC;IACF;AACF"}