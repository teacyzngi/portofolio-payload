{"version":3,"sources":["../../src/versions/deleteCollectionVersions.ts"],"sourcesContent":["import type { PayloadRequest } from '../types/index.js'\n\nimport { type Payload } from '../index.js'\n\ntype Args = {\n  id?: number | string\n  payload: Payload\n  req?: PayloadRequest\n  slug: string\n}\n\nexport const deleteCollectionVersions = async ({ id, slug, payload, req }: Args): Promise<void> => {\n  try {\n    await payload.db.deleteVersions({\n      collection: slug,\n      req,\n      where: {\n        parent: {\n          equals: id,\n        },\n      },\n    })\n  } catch (err) {\n    payload.logger.error({\n      err,\n      msg: `There was an error removing versions for the deleted ${slug} document with ID ${id}.`,\n    })\n  }\n}\n"],"names":["deleteCollectionVersions","id","slug","payload","req","db","deleteVersions","collection","where","parent","equals","err","logger","error","msg"],"mappings":"AAWA,OAAO,MAAMA,2BAA2B,OAAO,EAAEC,EAAE,EAAEC,IAAI,EAAEC,OAAO,EAAEC,GAAG,EAAQ;IAC7E,IAAI;QACF,MAAMD,QAAQE,EAAE,CAACC,cAAc,CAAC;YAC9BC,YAAYL;YACZE;YACAI,OAAO;gBACLC,QAAQ;oBACNC,QAAQT;gBACV;YACF;QACF;IACF,EAAE,OAAOU,KAAK;QACZR,QAAQS,MAAM,CAACC,KAAK,CAAC;YACnBF;YACAG,KAAK,CAAC,qDAAqD,EAAEZ,KAAK,kBAAkB,EAAED,GAAG,CAAC,CAAC;QAC7F;IACF;AACF,EAAC"}