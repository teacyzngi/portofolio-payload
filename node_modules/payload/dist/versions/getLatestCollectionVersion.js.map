{"version":3,"sources":["../../src/versions/getLatestCollectionVersion.ts"],"sourcesContent":["import type { SanitizedCollectionConfig, TypeWithID } from '../collections/config/types.js'\nimport type { FindOneArgs } from '../database/types.js'\nimport type { Payload, PayloadRequest, Where } from '../types/index.js'\nimport type { TypeWithVersion } from './types.js'\n\nimport { combineQueries } from '../database/combineQueries.js'\nimport { appendVersionToQueryKey } from './drafts/appendVersionToQueryKey.js'\n\ntype Args = {\n  config: SanitizedCollectionConfig\n  id: number | string\n  payload: Payload\n  published?: boolean\n  query: FindOneArgs\n  req?: PayloadRequest\n}\n\nexport const getLatestCollectionVersion = async <T extends TypeWithID = any>({\n  id,\n  config,\n  payload,\n  published,\n  query,\n  req,\n}: Args): Promise<T> => {\n  let latestVersion!: TypeWithVersion<T>\n\n  const whereQuery = published\n    ? { and: [{ parent: { equals: id } }, { 'version._status': { equals: 'published' } }] }\n    : { and: [{ parent: { equals: id } }, { latest: { equals: true } }] }\n\n  if (config.versions?.drafts) {\n    const { docs } = await payload.db.findVersions<T>({\n      collection: config.slug,\n      limit: 1,\n      pagination: false,\n      req,\n      sort: '-updatedAt',\n      where: combineQueries(appendVersionToQueryKey(query.where), whereQuery as unknown as Where),\n    })\n    latestVersion = docs[0]!\n  }\n\n  if (!latestVersion) {\n    if (!published) {\n      const doc = await payload.db.findOne<T>({ ...query, req })\n\n      return doc!\n    }\n\n    return undefined!\n  }\n\n  latestVersion.version.id = id\n\n  return latestVersion.version\n}\n"],"names":["combineQueries","appendVersionToQueryKey","getLatestCollectionVersion","id","config","payload","published","query","req","latestVersion","whereQuery","and","parent","equals","latest","versions","drafts","docs","db","findVersions","collection","slug","limit","pagination","sort","where","doc","findOne","undefined","version"],"mappings":"AAKA,SAASA,cAAc,QAAQ,gCAA+B;AAC9D,SAASC,uBAAuB,QAAQ,sCAAqC;AAW7E,OAAO,MAAMC,6BAA6B,OAAmC,EAC3EC,EAAE,EACFC,MAAM,EACNC,OAAO,EACPC,SAAS,EACTC,KAAK,EACLC,GAAG,EACE;IACL,IAAIC;IAEJ,MAAMC,aAAaJ,YACf;QAAEK,KAAK;YAAC;gBAAEC,QAAQ;oBAAEC,QAAQV;gBAAG;YAAE;YAAG;gBAAE,mBAAmB;oBAAEU,QAAQ;gBAAY;YAAE;SAAE;IAAC,IACpF;QAAEF,KAAK;YAAC;gBAAEC,QAAQ;oBAAEC,QAAQV;gBAAG;YAAE;YAAG;gBAAEW,QAAQ;oBAAED,QAAQ;gBAAK;YAAE;SAAE;IAAC;IAEtE,IAAIT,OAAOW,QAAQ,EAAEC,QAAQ;QAC3B,MAAM,EAAEC,IAAI,EAAE,GAAG,MAAMZ,QAAQa,EAAE,CAACC,YAAY,CAAI;YAChDC,YAAYhB,OAAOiB,IAAI;YACvBC,OAAO;YACPC,YAAY;YACZf;YACAgB,MAAM;YACNC,OAAOzB,eAAeC,wBAAwBM,MAAMkB,KAAK,GAAGf;QAC9D;QACAD,gBAAgBQ,IAAI,CAAC,EAAE;IACzB;IAEA,IAAI,CAACR,eAAe;QAClB,IAAI,CAACH,WAAW;YACd,MAAMoB,MAAM,MAAMrB,QAAQa,EAAE,CAACS,OAAO,CAAI;gBAAE,GAAGpB,KAAK;gBAAEC;YAAI;YAExD,OAAOkB;QACT;QAEA,OAAOE;IACT;IAEAnB,cAAcoB,OAAO,CAAC1B,EAAE,GAAGA;IAE3B,OAAOM,cAAcoB,OAAO;AAC9B,EAAC"}