{"version":3,"sources":["../../src/versions/buildGlobalFields.ts"],"sourcesContent":["import type { SanitizedConfig } from '../config/types.js'\nimport type { Field, FlattenedField } from '../fields/config/types.js'\nimport type { SanitizedGlobalConfig } from '../globals/config/types.js'\n\nimport { versionSnapshotField } from './baseFields.js'\n\nexport const buildVersionGlobalFields = <T extends boolean = false>(\n  config: SanitizedConfig,\n  global: SanitizedGlobalConfig,\n  flatten?: T,\n): true extends T ? FlattenedField[] : Field[] => {\n  const fields: FlattenedField[] = [\n    {\n      name: 'version',\n      type: 'group',\n      fields: global.fields,\n      ...(flatten && {\n        flattenedFields: global.flattenedFields,\n      })!,\n    },\n    {\n      name: 'createdAt',\n      type: 'date',\n      admin: {\n        disabled: true,\n      },\n      index: true,\n    },\n    {\n      name: 'updatedAt',\n      type: 'date',\n      admin: {\n        disabled: true,\n      },\n      index: true,\n    },\n  ]\n\n  if (global?.versions?.drafts) {\n    if (config.localization) {\n      fields.push(versionSnapshotField)\n\n      fields.push({\n        name: 'publishedLocale',\n        type: 'select',\n        admin: {\n          disableBulkEdit: true,\n          disabled: true,\n        },\n        index: true,\n        options: config.localization.locales.map((locale) => {\n          if (typeof locale === 'string') {\n            return locale\n          }\n\n          return locale.code\n        }),\n      })\n    }\n\n    fields.push({\n      name: 'latest',\n      type: 'checkbox',\n      admin: {\n        disabled: true,\n      },\n      index: true,\n    })\n\n    if (global?.versions?.drafts?.autosave) {\n      fields.push({\n        name: 'autosave',\n        type: 'checkbox',\n        index: true,\n      })\n    }\n  }\n\n  return fields as true extends T ? FlattenedField[] : Field[]\n}\n"],"names":["versionSnapshotField","buildVersionGlobalFields","config","global","flatten","fields","name","type","flattenedFields","admin","disabled","index","versions","drafts","localization","push","disableBulkEdit","options","locales","map","locale","code","autosave"],"mappings":"AAIA,SAASA,oBAAoB,QAAQ,kBAAiB;AAEtD,OAAO,MAAMC,2BAA2B,CACtCC,QACAC,QACAC;IAEA,MAAMC,SAA2B;QAC/B;YACEC,MAAM;YACNC,MAAM;YACNF,QAAQF,OAAOE,MAAM;YACrB,GAAID,WAAW;gBACbI,iBAAiBL,OAAOK,eAAe;YACzC,CAAC;QACH;QACA;YACEF,MAAM;YACNC,MAAM;YACNE,OAAO;gBACLC,UAAU;YACZ;YACAC,OAAO;QACT;QACA;YACEL,MAAM;YACNC,MAAM;YACNE,OAAO;gBACLC,UAAU;YACZ;YACAC,OAAO;QACT;KACD;IAED,IAAIR,QAAQS,UAAUC,QAAQ;QAC5B,IAAIX,OAAOY,YAAY,EAAE;YACvBT,OAAOU,IAAI,CAACf;YAEZK,OAAOU,IAAI,CAAC;gBACVT,MAAM;gBACNC,MAAM;gBACNE,OAAO;oBACLO,iBAAiB;oBACjBN,UAAU;gBACZ;gBACAC,OAAO;gBACPM,SAASf,OAAOY,YAAY,CAACI,OAAO,CAACC,GAAG,CAAC,CAACC;oBACxC,IAAI,OAAOA,WAAW,UAAU;wBAC9B,OAAOA;oBACT;oBAEA,OAAOA,OAAOC,IAAI;gBACpB;YACF;QACF;QAEAhB,OAAOU,IAAI,CAAC;YACVT,MAAM;YACNC,MAAM;YACNE,OAAO;gBACLC,UAAU;YACZ;YACAC,OAAO;QACT;QAEA,IAAIR,QAAQS,UAAUC,QAAQS,UAAU;YACtCjB,OAAOU,IAAI,CAAC;gBACVT,MAAM;gBACNC,MAAM;gBACNI,OAAO;YACT;QACF;IACF;IAEA,OAAON;AACT,EAAC"}