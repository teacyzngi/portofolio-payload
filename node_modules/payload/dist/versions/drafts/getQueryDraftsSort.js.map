{"version":3,"sources":["../../../src/versions/drafts/getQueryDraftsSort.ts"],"sourcesContent":["import type { SanitizedCollectionConfig } from '../../collections/config/types.js'\nimport type { Sort } from '../../types/index.js'\n\n/**\n * Takes the incoming sort argument and prefixes it with `versions.` and preserves any `-` prefixes for descending order\n * @param sort\n */\nexport const getQueryDraftsSort = ({\n  collectionConfig,\n  sort,\n}: {\n  collectionConfig: SanitizedCollectionConfig\n  sort?: Sort\n}): Sort => {\n  if (!sort) {\n    if (collectionConfig.defaultSort) {\n      sort = collectionConfig.defaultSort\n    } else {\n      sort = '-createdAt'\n    }\n  }\n\n  if (typeof sort === 'string') {\n    sort = [sort]\n  }\n\n  return sort.map((field: string) => {\n    let orderBy: string\n    let direction = ''\n    if (field[0] === '-') {\n      orderBy = field.substring(1)\n      direction = '-'\n    } else {\n      orderBy = field\n    }\n\n    if (orderBy === 'id') {\n      return `${direction}parent`\n    }\n\n    return `${direction}version.${orderBy}`\n  })\n}\n"],"names":["getQueryDraftsSort","collectionConfig","sort","defaultSort","map","field","orderBy","direction","substring"],"mappings":"AAGA;;;CAGC,GACD,OAAO,MAAMA,qBAAqB,CAAC,EACjCC,gBAAgB,EAChBC,IAAI,EAIL;IACC,IAAI,CAACA,MAAM;QACT,IAAID,iBAAiBE,WAAW,EAAE;YAChCD,OAAOD,iBAAiBE,WAAW;QACrC,OAAO;YACLD,OAAO;QACT;IACF;IAEA,IAAI,OAAOA,SAAS,UAAU;QAC5BA,OAAO;YAACA;SAAK;IACf;IAEA,OAAOA,KAAKE,GAAG,CAAC,CAACC;QACf,IAAIC;QACJ,IAAIC,YAAY;QAChB,IAAIF,KAAK,CAAC,EAAE,KAAK,KAAK;YACpBC,UAAUD,MAAMG,SAAS,CAAC;YAC1BD,YAAY;QACd,OAAO;YACLD,UAAUD;QACZ;QAEA,IAAIC,YAAY,MAAM;YACpB,OAAO,GAAGC,UAAU,MAAM,CAAC;QAC7B;QAEA,OAAO,GAAGA,UAAU,QAAQ,EAAED,SAAS;IACzC;AACF,EAAC"}