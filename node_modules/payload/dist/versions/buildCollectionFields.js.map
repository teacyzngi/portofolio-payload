{"version":3,"sources":["../../src/versions/buildCollectionFields.ts"],"sourcesContent":["import type { SanitizedCollectionConfig } from '../collections/config/types.js'\nimport type { SanitizedConfig } from '../config/types.js'\nimport type { Field, FlattenedField } from '../fields/config/types.js'\n\nimport { versionSnapshotField } from './baseFields.js'\n\nexport const buildVersionCollectionFields = <T extends boolean = false>(\n  config: SanitizedConfig,\n  collection: SanitizedCollectionConfig,\n  flatten?: T,\n): true extends T ? FlattenedField[] : Field[] => {\n  const fields: FlattenedField[] = [\n    {\n      name: 'parent',\n      type: 'relationship',\n      index: true,\n      relationTo: collection.slug,\n    },\n    {\n      name: 'version',\n      type: 'group',\n      fields: collection.fields.filter((field) => !('name' in field) || field.name !== 'id'),\n      ...(flatten && {\n        flattenedFields: collection.flattenedFields.filter((each) => each.name !== 'id'),\n      })!,\n    },\n    {\n      name: 'createdAt',\n      type: 'date',\n      admin: {\n        disabled: true,\n      },\n      index: true,\n    },\n    {\n      name: 'updatedAt',\n      type: 'date',\n      admin: {\n        disabled: true,\n      },\n      index: true,\n    },\n  ]\n\n  if (collection?.versions?.drafts) {\n    if (config.localization) {\n      fields.push(versionSnapshotField)\n\n      fields.push({\n        name: 'publishedLocale',\n        type: 'select',\n        admin: {\n          disableBulkEdit: true,\n          disabled: true,\n        },\n        index: true,\n        options: config.localization.locales.map((locale) => {\n          if (typeof locale === 'string') {\n            return locale\n          }\n\n          return locale.code\n        }),\n      })\n    }\n\n    fields.push({\n      name: 'latest',\n      type: 'checkbox',\n      admin: {\n        disabled: true,\n      },\n      index: true,\n    })\n\n    if (collection?.versions?.drafts?.autosave) {\n      fields.push({\n        name: 'autosave',\n        type: 'checkbox',\n        index: true,\n      })\n    }\n  }\n\n  return fields as true extends T ? FlattenedField[] : Field[]\n}\n"],"names":["versionSnapshotField","buildVersionCollectionFields","config","collection","flatten","fields","name","type","index","relationTo","slug","filter","field","flattenedFields","each","admin","disabled","versions","drafts","localization","push","disableBulkEdit","options","locales","map","locale","code","autosave"],"mappings":"AAIA,SAASA,oBAAoB,QAAQ,kBAAiB;AAEtD,OAAO,MAAMC,+BAA+B,CAC1CC,QACAC,YACAC;IAEA,MAAMC,SAA2B;QAC/B;YACEC,MAAM;YACNC,MAAM;YACNC,OAAO;YACPC,YAAYN,WAAWO,IAAI;QAC7B;QACA;YACEJ,MAAM;YACNC,MAAM;YACNF,QAAQF,WAAWE,MAAM,CAACM,MAAM,CAAC,CAACC,QAAU,CAAE,CAAA,UAAUA,KAAI,KAAMA,MAAMN,IAAI,KAAK;YACjF,GAAIF,WAAW;gBACbS,iBAAiBV,WAAWU,eAAe,CAACF,MAAM,CAAC,CAACG,OAASA,KAAKR,IAAI,KAAK;YAC7E,CAAC;QACH;QACA;YACEA,MAAM;YACNC,MAAM;YACNQ,OAAO;gBACLC,UAAU;YACZ;YACAR,OAAO;QACT;QACA;YACEF,MAAM;YACNC,MAAM;YACNQ,OAAO;gBACLC,UAAU;YACZ;YACAR,OAAO;QACT;KACD;IAED,IAAIL,YAAYc,UAAUC,QAAQ;QAChC,IAAIhB,OAAOiB,YAAY,EAAE;YACvBd,OAAOe,IAAI,CAACpB;YAEZK,OAAOe,IAAI,CAAC;gBACVd,MAAM;gBACNC,MAAM;gBACNQ,OAAO;oBACLM,iBAAiB;oBACjBL,UAAU;gBACZ;gBACAR,OAAO;gBACPc,SAASpB,OAAOiB,YAAY,CAACI,OAAO,CAACC,GAAG,CAAC,CAACC;oBACxC,IAAI,OAAOA,WAAW,UAAU;wBAC9B,OAAOA;oBACT;oBAEA,OAAOA,OAAOC,IAAI;gBACpB;YACF;QACF;QAEArB,OAAOe,IAAI,CAAC;YACVd,MAAM;YACNC,MAAM;YACNQ,OAAO;gBACLC,UAAU;YACZ;YACAR,OAAO;QACT;QAEA,IAAIL,YAAYc,UAAUC,QAAQS,UAAU;YAC1CtB,OAAOe,IAAI,CAAC;gBACVd,MAAM;gBACNC,MAAM;gBACNC,OAAO;YACT;QACF;IACF;IAEA,OAAOH;AACT,EAAC"}