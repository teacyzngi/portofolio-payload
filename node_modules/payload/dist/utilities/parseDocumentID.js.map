{"version":3,"sources":["../../src/utilities/parseDocumentID.ts"],"sourcesContent":["import type { CollectionSlug, Payload } from '../index.js'\n\nimport { isNumber } from './isNumber.js'\n\ntype ParseDocumentIDArgs = {\n  collectionSlug: CollectionSlug\n  id?: number | string\n  payload: Payload\n}\n\nexport function parseDocumentID({ id, collectionSlug, payload }: ParseDocumentIDArgs) {\n  const idType = payload.collections[collectionSlug]?.customIDType ?? payload.db.defaultIDType\n\n  return id ? (idType === 'number' && isNumber(id) ? parseFloat(String(id)) : id) : undefined\n}\n"],"names":["isNumber","parseDocumentID","id","collectionSlug","payload","idType","collections","customIDType","db","defaultIDType","parseFloat","String","undefined"],"mappings":"AAEA,SAASA,QAAQ,QAAQ,gBAAe;AAQxC,OAAO,SAASC,gBAAgB,EAAEC,EAAE,EAAEC,cAAc,EAAEC,OAAO,EAAuB;IAClF,MAAMC,SAASD,QAAQE,WAAW,CAACH,eAAe,EAAEI,gBAAgBH,QAAQI,EAAE,CAACC,aAAa;IAE5F,OAAOP,KAAMG,WAAW,YAAYL,SAASE,MAAMQ,WAAWC,OAAOT,OAAOA,KAAMU;AACpF"}