{"version":3,"sources":["../../src/utilities/getSiblingData.ts"],"sourcesContent":["import type { Data, FormState } from '../admin/types.js'\n\nimport { reduceFieldsToValues } from './reduceFieldsToValues.js'\nimport { unflatten } from './unflatten.js'\n\nexport const getSiblingData = (fields: FormState, path: string): Data => {\n  if (!fields) {\n    return null!\n  }\n\n  if (path.indexOf('.') === -1) {\n    return reduceFieldsToValues(fields, true)\n  }\n\n  const siblingFields: Record<string, any> = {}\n\n  // Determine if the last segment of the path is an array-based row\n  const pathSegments = path.split('.')\n  const lastSegment = pathSegments[pathSegments.length - 1]\n  const lastSegmentIsRowIndex = !Number.isNaN(Number(lastSegment))\n\n  let parentFieldPath: string\n\n  if (lastSegmentIsRowIndex) {\n    // If the last segment is a row index,\n    // the sibling data is that row's contents\n    // so create a parent field path that will\n    // retrieve all contents of that row index only\n    parentFieldPath = `${path}.`\n  } else {\n    // Otherwise, the last path segment is a field name\n    // and it should be removed\n    parentFieldPath = path.substring(0, path.lastIndexOf('.') + 1)\n  }\n\n  Object.keys(fields).forEach((fieldKey) => {\n    if (!fields[fieldKey]?.disableFormData && fieldKey.indexOf(parentFieldPath) === 0) {\n      siblingFields[fieldKey.replace(parentFieldPath, '')] = fields[fieldKey]?.value\n    }\n  })\n\n  return unflatten(siblingFields)\n}\n"],"names":["reduceFieldsToValues","unflatten","getSiblingData","fields","path","indexOf","siblingFields","pathSegments","split","lastSegment","length","lastSegmentIsRowIndex","Number","isNaN","parentFieldPath","substring","lastIndexOf","Object","keys","forEach","fieldKey","disableFormData","replace","value"],"mappings":"AAEA,SAASA,oBAAoB,QAAQ,4BAA2B;AAChE,SAASC,SAAS,QAAQ,iBAAgB;AAE1C,OAAO,MAAMC,iBAAiB,CAACC,QAAmBC;IAChD,IAAI,CAACD,QAAQ;QACX,OAAO;IACT;IAEA,IAAIC,KAAKC,OAAO,CAAC,SAAS,CAAC,GAAG;QAC5B,OAAOL,qBAAqBG,QAAQ;IACtC;IAEA,MAAMG,gBAAqC,CAAC;IAE5C,kEAAkE;IAClE,MAAMC,eAAeH,KAAKI,KAAK,CAAC;IAChC,MAAMC,cAAcF,YAAY,CAACA,aAAaG,MAAM,GAAG,EAAE;IACzD,MAAMC,wBAAwB,CAACC,OAAOC,KAAK,CAACD,OAAOH;IAEnD,IAAIK;IAEJ,IAAIH,uBAAuB;QACzB,sCAAsC;QACtC,0CAA0C;QAC1C,0CAA0C;QAC1C,+CAA+C;QAC/CG,kBAAkB,GAAGV,KAAK,CAAC,CAAC;IAC9B,OAAO;QACL,mDAAmD;QACnD,2BAA2B;QAC3BU,kBAAkBV,KAAKW,SAAS,CAAC,GAAGX,KAAKY,WAAW,CAAC,OAAO;IAC9D;IAEAC,OAAOC,IAAI,CAACf,QAAQgB,OAAO,CAAC,CAACC;QAC3B,IAAI,CAACjB,MAAM,CAACiB,SAAS,EAAEC,mBAAmBD,SAASf,OAAO,CAACS,qBAAqB,GAAG;YACjFR,aAAa,CAACc,SAASE,OAAO,CAACR,iBAAiB,IAAI,GAAGX,MAAM,CAACiB,SAAS,EAAEG;QAC3E;IACF;IAEA,OAAOtB,UAAUK;AACnB,EAAC"}