{"version":3,"sources":["../../src/utilities/createLocalReq.ts"],"sourcesContent":["import type { Payload, RequestContext, TypedLocale, TypedUser } from '../index.js'\nimport type { PayloadRequest } from '../types/index.js'\n\nimport { getDataLoader } from '../collections/dataloader.js'\nimport { getLocalI18n } from '../translations/getLocalI18n.js'\nimport { sanitizeFallbackLocale } from '../utilities/sanitizeFallbackLocale.js'\n\nfunction getRequestContext(\n  req: Partial<PayloadRequest> = { context: null } as unknown as PayloadRequest,\n  context: RequestContext = {},\n): RequestContext {\n  if (req.context) {\n    if (Object.keys(req.context).length === 0 && req.context.constructor === Object) {\n      // if req.context is `{}` avoid unnecessary spread\n      return context\n    } else {\n      return { ...req.context, ...context }\n    }\n  } else {\n    return context\n  }\n}\n\nconst attachFakeURLProperties = (req: Partial<PayloadRequest>, urlSuffix?: string) => {\n  /**\n   * *NOTE*\n   * If no URL is provided, the local API was called outside\n   * the context of a request. Therefore we create a fake URL object.\n   * `ts-expect-error` is used below for properties that are 'read-only'.\n   * Since they do not exist yet we can safely ignore the error.\n   */\n  let urlObject: undefined | URL\n\n  function getURLObject() {\n    if (urlObject) {\n      return urlObject\n    }\n\n    const fallbackURL = `http://${req.host || 'localhost'}${urlSuffix || ''}`\n\n    const urlToUse =\n      req?.url || req.payload?.config?.serverURL\n        ? `${req.payload?.config.serverURL}${urlSuffix || ''}`\n        : fallbackURL\n\n    try {\n      urlObject = new URL(urlToUse)\n    } catch (_err) {\n      req.payload?.logger.error(\n        `Failed to create URL object from URL: ${urlToUse}, falling back to ${fallbackURL}`,\n      )\n\n      urlObject = new URL(fallbackURL)\n    }\n\n    return urlObject\n  }\n\n  if (!req.host) {\n    req.host = getURLObject().host\n  }\n\n  if (!req.protocol) {\n    req.protocol = getURLObject().protocol\n  }\n\n  if (!req.pathname) {\n    req.pathname = getURLObject().pathname\n  }\n\n  if (!req.searchParams) {\n    // @ts-expect-error eslint-disable-next-line no-param-reassign\n    req.searchParams = getURLObject().searchParams\n  }\n\n  if (!req.origin) {\n    // @ts-expect-error eslint-disable-next-line no-param-reassign\n    req.origin = getURLObject().origin\n  }\n\n  if (!req?.url) {\n    // @ts-expect-error eslint-disable-next-line no-param-reassign\n    req.url = getURLObject().href\n  }\n}\n\nexport type CreateLocalReqOptions = {\n  context?: RequestContext\n  fallbackLocale?: false | TypedLocale\n  locale?: string\n  req?: Partial<PayloadRequest>\n  urlSuffix?: string\n  user?: TypedUser\n}\n\ntype CreateLocalReq = (options: CreateLocalReqOptions, payload: Payload) => Promise<PayloadRequest>\n\nexport const createLocalReq: CreateLocalReq = async (\n  { context, fallbackLocale, locale: localeArg, req = {} as PayloadRequest, urlSuffix, user },\n  payload,\n): Promise<PayloadRequest> => {\n  const localization = payload.config?.localization\n\n  if (localization) {\n    const locale = localeArg === '*' ? 'all' : localeArg\n    const defaultLocale = localization.defaultLocale\n    const localeCandidate = locale || req?.locale || req?.query?.locale\n\n    req.locale =\n      localeCandidate && typeof localeCandidate === 'string' ? localeCandidate : defaultLocale\n\n    const sanitizedFallback = sanitizeFallbackLocale({\n      fallbackLocale: fallbackLocale!,\n      locale: req.locale,\n      localization,\n    })\n\n    req.fallbackLocale = sanitizedFallback!\n  }\n\n  const i18n =\n    req?.i18n ||\n    (await getLocalI18n({ config: payload.config, language: payload.config.i18n.fallbackLanguage }))\n\n  if (!req.headers) {\n    // @ts-expect-error eslint-disable-next-line no-param-reassign\n    req.headers = new Headers()\n  }\n\n  req.context = getRequestContext(req, context)\n  req.payloadAPI = req?.payloadAPI || 'local'\n  req.payload = payload\n  req.i18n = i18n\n  req.t = i18n.t\n  req.user = user || req?.user || null\n  req.payloadDataLoader = req?.payloadDataLoader || getDataLoader(req as PayloadRequest)\n  req.routeParams = req?.routeParams || {}\n  req.query = req?.query || {}\n\n  attachFakeURLProperties(req, urlSuffix)\n\n  return req as PayloadRequest\n}\n"],"names":["getDataLoader","getLocalI18n","sanitizeFallbackLocale","getRequestContext","req","context","Object","keys","length","constructor","attachFakeURLProperties","urlSuffix","urlObject","getURLObject","fallbackURL","host","urlToUse","url","payload","config","serverURL","URL","_err","logger","error","protocol","pathname","searchParams","origin","href","createLocalReq","fallbackLocale","locale","localeArg","user","localization","defaultLocale","localeCandidate","query","sanitizedFallback","i18n","language","fallbackLanguage","headers","Headers","payloadAPI","t","payloadDataLoader","routeParams"],"mappings":"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"}