{"version":3,"sources":["../../src/utilities/getBlockSelect.ts"],"sourcesContent":["import type { Block } from '../fields/config/types.js'\nimport type { SelectMode, SelectType } from '../types/index.js'\n\n/**\n * This is used for the Select API to determine the select level of a block.\n * It will ensure that `id` and `blockType` are always included in the select object.\n * @returns { blockSelect: boolean | SelectType, blockSelectMode: SelectMode }\n */\nexport const getBlockSelect = ({\n  block,\n  select,\n  selectMode,\n}: {\n  block: Block\n  select: SelectType[string]\n  selectMode: SelectMode\n}): { blockSelect: boolean | SelectType; blockSelectMode: SelectMode } => {\n  if (typeof select === 'object') {\n    let blockSelectMode = selectMode\n\n    const blocksSelect = {\n      ...select,\n    }\n\n    let blockSelect = blocksSelect[block.slug]\n\n    // sanitize `{ blocks: { cta: false }}` to `{ blocks: { cta: { id: true, blockType: true }}}`\n    if (selectMode === 'exclude' && blockSelect === false) {\n      blockSelectMode = 'include'\n\n      blockSelect = {\n        id: true,\n        blockType: true,\n      }\n    } else if (selectMode === 'include') {\n      if (!blockSelect) {\n        blockSelect = {}\n      }\n\n      if (typeof blockSelect === 'object') {\n        blockSelect = {\n          ...blockSelect,\n        }\n\n        blockSelect['id'] = true\n        blockSelect['blockType'] = true\n      }\n    }\n\n    return { blockSelect: blockSelect!, blockSelectMode }\n  }\n\n  return { blockSelect: select, blockSelectMode: selectMode }\n}\n"],"names":["getBlockSelect","block","select","selectMode","blockSelectMode","blocksSelect","blockSelect","slug","id","blockType"],"mappings":"AAGA;;;;CAIC,GACD,OAAO,MAAMA,iBAAiB,CAAC,EAC7BC,KAAK,EACLC,MAAM,EACNC,UAAU,EAKX;IACC,IAAI,OAAOD,WAAW,UAAU;QAC9B,IAAIE,kBAAkBD;QAEtB,MAAME,eAAe;YACnB,GAAGH,MAAM;QACX;QAEA,IAAII,cAAcD,YAAY,CAACJ,MAAMM,IAAI,CAAC;QAE1C,6FAA6F;QAC7F,IAAIJ,eAAe,aAAaG,gBAAgB,OAAO;YACrDF,kBAAkB;YAElBE,cAAc;gBACZE,IAAI;gBACJC,WAAW;YACb;QACF,OAAO,IAAIN,eAAe,WAAW;YACnC,IAAI,CAACG,aAAa;gBAChBA,cAAc,CAAC;YACjB;YAEA,IAAI,OAAOA,gBAAgB,UAAU;gBACnCA,cAAc;oBACZ,GAAGA,WAAW;gBAChB;gBAEAA,WAAW,CAAC,KAAK,GAAG;gBACpBA,WAAW,CAAC,YAAY,GAAG;YAC7B;QACF;QAEA,OAAO;YAAEA,aAAaA;YAAcF;QAAgB;IACtD;IAEA,OAAO;QAAEE,aAAaJ;QAAQE,iBAAiBD;IAAW;AAC5D,EAAC"}