{"version":3,"sources":["../../src/utilities/sanitizeUserDataForEmail.spec.ts"],"sourcesContent":["import { sanitizeUserDataForEmail } from './sanitizeUserDataForEmail'\n\ndescribe('sanitizeUserDataForEmail', () => {\n  it('should remove anchor tags', () => {\n    const input = '<a href=\"https://example.com\">Click me</a>'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('Click me')\n  })\n\n  it('should remove script tags', () => {\n    const unsanitizedData = '<script>alert</script>'\n    const sanitizedData = sanitizeUserDataForEmail(unsanitizedData)\n    expect(sanitizedData).toBe('alert')\n  })\n\n  it('should remove mixed-case script tags', () => {\n    const input = '<ScRipT>alert(1)</sCrIpT>'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('alert1')\n  })\n\n  it('should remove embedded base64-encoded scripts', () => {\n    const input = '<img src=\"data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==\">'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('')\n  })\n\n  it('should remove iframe elements', () => {\n    const input = '<iframe src=\"malicious.com\"></iframe>Frame'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('Frame')\n  })\n\n  it('should remove javascript: links in attributes', () => {\n    const input = '<a href=\"javascript:alert(1)\">click</a>'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('click')\n  })\n\n  it('should remove mismatched script input', () => {\n    const input = '<script>console.log(\"test\")'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('console.log\\\"test\\\"')\n  })\n\n  it('should remove encoded scripts via HTML entities', () => {\n    const input = '&#x3C;script&#x3E;alert(1)&#x3C;/script&#x3E;'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('alert1')\n  })\n\n  it('should remove template injection syntax', () => {\n    const input = '{{7*7}}'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('77')\n  })\n\n  it('should remove invisible zero-width characters', () => {\n    const input = 'a\\u200Bler\\u200Bt(\"XSS\")'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('alert\\\"XSS\\\"')\n  })\n\n  it('should remove CSS expressions within style attributes', () => {\n    const input = '<div style=\"width: expression(alert(\\'XSS\\'));\">Hello</div>'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('Hello')\n  })\n\n  it('should not render SVG with onload event', () => {\n    const input = '<svg onload=\"alert(\\'XSS\\')\">Graphic</svg>'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('Graphic')\n  })\n\n  it('should not allow backtick-based patterns', () => {\n    const input = '`alert(\"XSS\")`'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('alert\\\"XSS\\\"')\n  })\n\n  it('should preserve allowed punctuation', () => {\n    const input = `Hello \"world\" - it's safe!`\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe(`Hello \"world\" - it's safe!`)\n  })\n\n  it('should return empty string for non-string input', () => {\n    expect(sanitizeUserDataForEmail(null)).toBe('')\n    expect(sanitizeUserDataForEmail(undefined)).toBe('')\n    expect(sanitizeUserDataForEmail(123)).toBe('')\n    expect(sanitizeUserDataForEmail({})).toBe('')\n  })\n\n  it('should return empty string for an empty string', () => {\n    expect(sanitizeUserDataForEmail('')).toBe('')\n  })\n\n  it('should collapse excessive whitespace', () => {\n    const input = 'This    is \\n\\n a    test'\n    expect(sanitizeUserDataForEmail(input)).toBe('This is a test')\n  })\n\n  it('should truncate to maxLength characters', () => {\n    const input = 'a'.repeat(200)\n    const result = sanitizeUserDataForEmail(input, 50)\n    expect(result.length).toBe(50)\n  })\n\n  it('should remove characters outside allowed punctuation', () => {\n    const input = 'Hello @#$%^*()_+=[]{}|\\\\~`'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('Hello')\n  })\n  it('should sanitize syntax in regex-like input', () => {\n    const input = '(?=XSS)(?:abc)'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('XSSabc')\n  })\n\n  it('should handle string of only control characters', () => {\n    const input = '\\x01\\x02\\x03\\x04'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('')\n  })\n\n  it('should sanitize complex script attempt with mixed encoding', () => {\n    const input = '&#x3C;script&#x3E;alert(String.fromCharCode(88,83,83))&#x3C;/script&#x3E;'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('alertString.fromCharCode88,83,83')\n  })\n\n  it('should handle deeply nested HTML tags correctly', () => {\n    const input = `<div><section><article><p>Hello <strong>world <em>from <span>deep <a href=\"#\">tags</a></span></em></strong></p></article></section></div>`\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('Hello world from deep tags')\n  })\n\n  it('should preserve accented Spanish characters', () => {\n    const input = '¡Hola! ¿Cómo estás? ÁÉÍÓÚ ÜÑ ñáéíóú ü'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('¡Hola! ¿Cómo estás? ÁÉÍÓÚ ÜÑ ñáéíóú ü')\n  })\n\n  it('should preserve Arabic characters with diacritics', () => {\n    const input = 'مَرْحَبًا بِكَ فِي الْمَوْقِعِ'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('مَرْحَبًا بِكَ فِي الْمَوْقِعِ')\n  })\n\n  it('should preserve Japanese characters', () => {\n    const input = 'こんにちゎ、世界！！〆'\n    const result = sanitizeUserDataForEmail(input)\n    expect(result).toBe('こんにちゎ、世界！！〆')\n  })\n})\n"],"names":["sanitizeUserDataForEmail","describe","it","input","result","expect","toBe","unsanitizedData","sanitizedData","undefined","repeat","length"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,6BAA4B;AAErEC,SAAS,4BAA4B;IACnCC,GAAG,6BAA6B;QAC9B,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IAEAJ,GAAG,6BAA6B;QAC9B,MAAMK,kBAAkB;QACxB,MAAMC,gBAAgBR,yBAAyBO;QAC/CF,OAAOG,eAAeF,IAAI,CAAC;IAC7B;IAEAJ,GAAG,wCAAwC;QACzC,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IAEAJ,GAAG,iDAAiD;QAClD,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IAEAJ,GAAG,iCAAiC;QAClC,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IAEAJ,GAAG,iDAAiD;QAClD,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IAEAJ,GAAG,yCAAyC;QAC1C,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IAEAJ,GAAG,mDAAmD;QACpD,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IAEAJ,GAAG,2CAA2C;QAC5C,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IAEAJ,GAAG,iDAAiD;QAClD,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IAEAJ,GAAG,yDAAyD;QAC1D,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IAEAJ,GAAG,2CAA2C;QAC5C,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IAEAJ,GAAG,4CAA4C;QAC7C,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IAEAJ,GAAG,uCAAuC;QACxC,MAAMC,QAAQ,CAAC,0BAA0B,CAAC;QAC1C,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC,CAAC,0BAA0B,CAAC;IAClD;IAEAJ,GAAG,mDAAmD;QACpDG,OAAOL,yBAAyB,OAAOM,IAAI,CAAC;QAC5CD,OAAOL,yBAAyBS,YAAYH,IAAI,CAAC;QACjDD,OAAOL,yBAAyB,MAAMM,IAAI,CAAC;QAC3CD,OAAOL,yBAAyB,CAAC,IAAIM,IAAI,CAAC;IAC5C;IAEAJ,GAAG,kDAAkD;QACnDG,OAAOL,yBAAyB,KAAKM,IAAI,CAAC;IAC5C;IAEAJ,GAAG,wCAAwC;QACzC,MAAMC,QAAQ;QACdE,OAAOL,yBAAyBG,QAAQG,IAAI,CAAC;IAC/C;IAEAJ,GAAG,2CAA2C;QAC5C,MAAMC,QAAQ,IAAIO,MAAM,CAAC;QACzB,MAAMN,SAASJ,yBAAyBG,OAAO;QAC/CE,OAAOD,OAAOO,MAAM,EAAEL,IAAI,CAAC;IAC7B;IAEAJ,GAAG,wDAAwD;QACzD,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IACAJ,GAAG,8CAA8C;QAC/C,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IAEAJ,GAAG,mDAAmD;QACpD,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IAEAJ,GAAG,8DAA8D;QAC/D,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IAEAJ,GAAG,mDAAmD;QACpD,MAAMC,QAAQ,CAAC,yIAAyI,CAAC;QACzJ,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IAEAJ,GAAG,+CAA+C;QAChD,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IAEAJ,GAAG,qDAAqD;QACtD,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;IAEAJ,GAAG,uCAAuC;QACxC,MAAMC,QAAQ;QACd,MAAMC,SAASJ,yBAAyBG;QACxCE,OAAOD,QAAQE,IAAI,CAAC;IACtB;AACF"}