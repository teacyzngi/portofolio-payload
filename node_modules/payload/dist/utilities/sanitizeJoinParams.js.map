{"version":3,"sources":["../../src/utilities/sanitizeJoinParams.ts"],"sourcesContent":["import type { JoinQuery } from '../types/index.js'\n\nimport { isNumber } from './isNumber.js'\n\nexport type JoinParams =\n  | {\n      [schemaPath: string]:\n        | {\n            limit?: unknown\n            sort?: string\n            where?: unknown\n          }\n        | false\n    }\n  | false\n\n/**\n * Convert request JoinQuery object from strings to numbers\n * @param joins\n */\nexport const sanitizeJoinParams = (_joins: JoinParams = {}): JoinQuery => {\n  const joinQuery: Record<string, any> = {}\n  const joins = _joins as Record<string, any>\n\n  Object.keys(joins).forEach((schemaPath) => {\n    if (joins[schemaPath] === 'false' || joins[schemaPath] === false) {\n      joinQuery[schemaPath] = false\n    } else {\n      joinQuery[schemaPath] = {\n        count: joins[schemaPath].count === 'true',\n        limit: isNumber(joins[schemaPath]?.limit) ? Number(joins[schemaPath].limit) : undefined,\n        page: isNumber(joins[schemaPath]?.page) ? Number(joins[schemaPath].page) : undefined,\n        sort: joins[schemaPath]?.sort ? joins[schemaPath].sort : undefined,\n        where: joins[schemaPath]?.where ? joins[schemaPath].where : undefined,\n      }\n    }\n  })\n\n  return joinQuery\n}\n"],"names":["isNumber","sanitizeJoinParams","_joins","joinQuery","joins","Object","keys","forEach","schemaPath","count","limit","Number","undefined","page","sort","where"],"mappings":"AAEA,SAASA,QAAQ,QAAQ,gBAAe;AAcxC;;;CAGC,GACD,OAAO,MAAMC,qBAAqB,CAACC,SAAqB,CAAC,CAAC;IACxD,MAAMC,YAAiC,CAAC;IACxC,MAAMC,QAAQF;IAEdG,OAAOC,IAAI,CAACF,OAAOG,OAAO,CAAC,CAACC;QAC1B,IAAIJ,KAAK,CAACI,WAAW,KAAK,WAAWJ,KAAK,CAACI,WAAW,KAAK,OAAO;YAChEL,SAAS,CAACK,WAAW,GAAG;QAC1B,OAAO;YACLL,SAAS,CAACK,WAAW,GAAG;gBACtBC,OAAOL,KAAK,CAACI,WAAW,CAACC,KAAK,KAAK;gBACnCC,OAAOV,SAASI,KAAK,CAACI,WAAW,EAAEE,SAASC,OAAOP,KAAK,CAACI,WAAW,CAACE,KAAK,IAAIE;gBAC9EC,MAAMb,SAASI,KAAK,CAACI,WAAW,EAAEK,QAAQF,OAAOP,KAAK,CAACI,WAAW,CAACK,IAAI,IAAID;gBAC3EE,MAAMV,KAAK,CAACI,WAAW,EAAEM,OAAOV,KAAK,CAACI,WAAW,CAACM,IAAI,GAAGF;gBACzDG,OAAOX,KAAK,CAACI,WAAW,EAAEO,QAAQX,KAAK,CAACI,WAAW,CAACO,KAAK,GAAGH;YAC9D;QACF;IACF;IAEA,OAAOT;AACT,EAAC"}