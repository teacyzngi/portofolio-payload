{"version":3,"sources":["../../src/query-presets/types.ts"],"sourcesContent":["import type { Field } from '../fields/config/types.js'\nimport type { Access, CollectionSlug } from '../index.js'\nimport type { CollectionPreferences } from '../preferences/types.js'\nimport type { Where } from '../types/index.js'\n\n// Note: order matters here as it will change the rendered order in the UI\nexport const operations = ['read', 'update', 'delete'] as const\n\nexport type ConstraintOperation = (typeof operations)[number]\n\nexport type DefaultConstraint = 'everyone' | 'onlyMe' | 'specificUsers'\n\nexport type Constraint = DefaultConstraint | string // TODO: type `string` as the custom constraints provided by the config\n\nexport type QueryPreset = {\n  access: {\n    [operation in ConstraintOperation]: {\n      constraint: DefaultConstraint\n      users?: string[]\n    }\n  }\n  columns: CollectionPreferences['columns']\n  id: number | string\n  isShared: boolean\n  relatedCollection: CollectionSlug\n  title: string\n  where: Where\n}\n\nexport type QueryPresetConstraint = {\n  access: Access<QueryPreset>\n  fields?: Field[]\n  label: string\n  value: string\n}\n\nexport type QueryPresetConstraints = QueryPresetConstraint[]\n"],"names":["operations"],"mappings":"AAKA,0EAA0E;AAC1E,OAAO,MAAMA,aAAa;IAAC;IAAQ;IAAU;CAAS,CAAS"}