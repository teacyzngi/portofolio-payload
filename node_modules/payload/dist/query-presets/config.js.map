{"version":3,"sources":["../../src/query-presets/config.ts"],"sourcesContent":["import type { CollectionConfig } from '../collections/config/types.js'\nimport type { Config } from '../config/types.js'\nimport type { Option } from '../fields/config/types.js'\n\nimport { transformWhereQuery } from '../utilities/transformWhereQuery.js'\nimport { validateWhereQuery } from '../utilities/validateWhereQuery.js'\nimport { getAccess } from './access.js'\nimport { getConstraints } from './constraints.js'\nimport { operations, type QueryPreset } from './types.js'\n\nexport const queryPresetsCollectionSlug = 'payload-query-presets'\n\nexport const getQueryPresetsConfig = (config: Config): CollectionConfig => ({\n  slug: queryPresetsCollectionSlug,\n  access: getAccess(config),\n  admin: {\n    defaultColumns: ['title', 'isShared', 'access', 'where', 'columns'],\n    hidden: true,\n    useAsTitle: 'title',\n  },\n  fields: [\n    {\n      name: 'title',\n      type: 'text',\n      required: true,\n    },\n    {\n      name: 'isShared',\n      type: 'checkbox',\n      defaultValue: false,\n      validate: (isShared, { data }) => {\n        const typedData = data as QueryPreset\n\n        // ensure the `isShared` is only true if all constraints are 'onlyMe'\n        if (typedData?.access) {\n          const someOperationsAreShared = Object.values(typedData.access).some(\n            (operation) => operation.constraint !== 'onlyMe',\n          )\n\n          if (!isShared && someOperationsAreShared) {\n            return 'If any constraint is not \"onlyMe\", the preset must be shared'\n          }\n        }\n\n        return true\n      },\n    },\n    getConstraints(config),\n    {\n      name: 'where',\n      type: 'json',\n      admin: {\n        components: {\n          Cell: '@payloadcms/ui#QueryPresetsWhereCell',\n          Field: '@payloadcms/ui#QueryPresetsWhereField',\n        },\n      },\n      hooks: {\n        beforeValidate: [\n          ({ data }) => {\n            // transform the \"where\" query here so that the client-side doesn't have to\n            if (data?.where) {\n              if (validateWhereQuery(data.where)) {\n                return data.where\n              } else {\n                return transformWhereQuery(data.where)\n              }\n            }\n\n            return data?.where\n          },\n        ],\n      },\n      label: 'Filters',\n    },\n    {\n      name: 'columns',\n      type: 'json',\n      admin: {\n        components: {\n          Cell: '@payloadcms/ui#QueryPresetsColumnsCell',\n          Field: '@payloadcms/ui#QueryPresetsColumnField',\n        },\n      },\n      validate: (value) => {\n        if (value) {\n          try {\n            JSON.parse(JSON.stringify(value))\n          } catch {\n            return 'Invalid JSON'\n          }\n        }\n\n        return true\n      },\n    },\n    {\n      name: 'relatedCollection',\n      type: 'select',\n      admin: {\n        hidden: true,\n      },\n      options: config.collections\n        ? config.collections.reduce((acc, collection) => {\n            if (collection.enableQueryPresets) {\n              acc.push({\n                label: collection.labels?.plural || collection.slug,\n                value: collection.slug,\n              })\n            }\n            return acc\n          }, [] as Option[])\n        : [],\n      required: true,\n    },\n    {\n      name: 'isTemp',\n      type: 'checkbox',\n      admin: {\n        description:\n          \"This is a temporary field used to determine if updating the preset would remove the user's access to it. When `true`, this record will be deleted after running the preset's `validate` function.\",\n        disabled: true,\n        hidden: true,\n      },\n    },\n  ],\n  hooks: {\n    beforeValidate: [\n      ({ data, operation }) => {\n        // TODO: type this\n        const typedData = data as any\n\n        if (operation === 'create' || operation === 'update') {\n          // Ensure all operations have a constraint\n          operations.forEach((operation) => {\n            if (!typedData.access) {\n              typedData.access = {}\n            }\n\n            if (!typedData.access?.[operation]) {\n              typedData[operation] = {}\n            }\n\n            // Ensure all operations have a constraint\n            if (!typedData.access[operation]?.constraint) {\n              typedData.access[operation] = {\n                ...typedData.access[operation],\n                constraint: 'onlyMe',\n              }\n            }\n          })\n\n          // If at least one constraint is not `onlyMe` then `isShared` must be true\n          if (typedData?.access) {\n            const someOperationsAreShared = Object.values(typedData.access).some(\n              // TODO: remove the `any` here\n              (operation: any) => operation.constraint !== 'onlyMe',\n            )\n\n            typedData.isShared = someOperationsAreShared\n          }\n        }\n\n        return typedData\n      },\n    ],\n  },\n  labels: {\n    plural: 'Presets',\n    singular: 'Preset',\n    ...(config.queryPresets?.labels || {}),\n  },\n  lockDocuments: false,\n})\n"],"names":["transformWhereQuery","validateWhereQuery","getAccess","getConstraints","operations","queryPresetsCollectionSlug","getQueryPresetsConfig","config","slug","access","admin","defaultColumns","hidden","useAsTitle","fields","name","type","required","defaultValue","validate","isShared","data","typedData","someOperationsAreShared","Object","values","some","operation","constraint","components","Cell","Field","hooks","beforeValidate","where","label","value","JSON","parse","stringify","options","collections","reduce","acc","collection","enableQueryPresets","push","labels","plural","description","disabled","forEach","singular","queryPresets","lockDocuments"],"mappings":"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"}