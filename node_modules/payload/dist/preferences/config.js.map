{"version":3,"sources":["../../src/preferences/config.ts"],"sourcesContent":["import type { CollectionConfig } from '../collections/config/types.js'\nimport type { Access, Config } from '../config/types.js'\n\nimport { deleteHandler } from './requestHandlers/delete.js'\nimport { findByIDHandler } from './requestHandlers/findOne.js'\nimport { updateHandler } from './requestHandlers/update.js'\n\nconst preferenceAccess: Access = ({ req }) => {\n  if (!req.user) {\n    return false\n  }\n\n  return {\n    'user.value': {\n      equals: req?.user?.id,\n    },\n  }\n}\n\nexport const preferencesCollectionSlug = 'payload-preferences'\n\nexport const getPreferencesCollection = (config: Config): CollectionConfig => ({\n  slug: preferencesCollectionSlug,\n  access: {\n    delete: preferenceAccess,\n    read: preferenceAccess,\n  },\n  admin: {\n    hidden: true,\n  },\n  endpoints: [\n    {\n      handler: findByIDHandler,\n      method: 'get',\n      path: '/:key',\n    },\n    {\n      handler: deleteHandler,\n      method: 'delete',\n      path: '/:key',\n    },\n    {\n      handler: updateHandler,\n      method: 'post',\n      path: '/:key',\n    },\n  ],\n  fields: [\n    {\n      name: 'user',\n      type: 'relationship',\n      hooks: {\n        beforeValidate: [\n          ({ req }) => {\n            if (!req?.user) {\n              return null\n            }\n\n            return {\n              relationTo: req?.user.collection,\n              value: req?.user.id,\n            }\n          },\n        ],\n      },\n      index: true,\n      relationTo: config\n        .collections!.filter((collectionConfig) => collectionConfig.auth)\n        .map((collectionConfig) => collectionConfig.slug),\n      required: true,\n    },\n    {\n      name: 'key',\n      type: 'text',\n      index: true,\n    },\n    {\n      name: 'value',\n      type: 'json',\n      validate: (value) => {\n        if (value) {\n          try {\n            JSON.parse(JSON.stringify(value))\n          } catch {\n            return 'Invalid JSON'\n          }\n        }\n\n        return true\n      },\n    },\n  ],\n  lockDocuments: false,\n})\n"],"names":["deleteHandler","findByIDHandler","updateHandler","preferenceAccess","req","user","equals","id","preferencesCollectionSlug","getPreferencesCollection","config","slug","access","delete","read","admin","hidden","endpoints","handler","method","path","fields","name","type","hooks","beforeValidate","relationTo","collection","value","index","collections","filter","collectionConfig","auth","map","required","validate","JSON","parse","stringify","lockDocuments"],"mappings":"AAGA,SAASA,aAAa,QAAQ,8BAA6B;AAC3D,SAASC,eAAe,QAAQ,+BAA8B;AAC9D,SAASC,aAAa,QAAQ,8BAA6B;AAE3D,MAAMC,mBAA2B,CAAC,EAAEC,GAAG,EAAE;IACvC,IAAI,CAACA,IAAIC,IAAI,EAAE;QACb,OAAO;IACT;IAEA,OAAO;QACL,cAAc;YACZC,QAAQF,KAAKC,MAAME;QACrB;IACF;AACF;AAEA,OAAO,MAAMC,4BAA4B,sBAAqB;AAE9D,OAAO,MAAMC,2BAA2B,CAACC,SAAsC,CAAA;QAC7EC,MAAMH;QACNI,QAAQ;YACNC,QAAQV;YACRW,MAAMX;QACR;QACAY,OAAO;YACLC,QAAQ;QACV;QACAC,WAAW;YACT;gBACEC,SAASjB;gBACTkB,QAAQ;gBACRC,MAAM;YACR;YACA;gBACEF,SAASlB;gBACTmB,QAAQ;gBACRC,MAAM;YACR;YACA;gBACEF,SAAShB;gBACTiB,QAAQ;gBACRC,MAAM;YACR;SACD;QACDC,QAAQ;YACN;gBACEC,MAAM;gBACNC,MAAM;gBACNC,OAAO;oBACLC,gBAAgB;wBACd,CAAC,EAAErB,GAAG,EAAE;4BACN,IAAI,CAACA,KAAKC,MAAM;gCACd,OAAO;4BACT;4BAEA,OAAO;gCACLqB,YAAYtB,KAAKC,KAAKsB;gCACtBC,OAAOxB,KAAKC,KAAKE;4BACnB;wBACF;qBACD;gBACH;gBACAsB,OAAO;gBACPH,YAAYhB,OACToB,WAAW,CAAEC,MAAM,CAAC,CAACC,mBAAqBA,iBAAiBC,IAAI,EAC/DC,GAAG,CAAC,CAACF,mBAAqBA,iBAAiBrB,IAAI;gBAClDwB,UAAU;YACZ;YACA;gBACEb,MAAM;gBACNC,MAAM;gBACNM,OAAO;YACT;YACA;gBACEP,MAAM;gBACNC,MAAM;gBACNa,UAAU,CAACR;oBACT,IAAIA,OAAO;wBACT,IAAI;4BACFS,KAAKC,KAAK,CAACD,KAAKE,SAAS,CAACX;wBAC5B,EAAE,OAAM;4BACN,OAAO;wBACT;oBACF;oBAEA,OAAO;gBACT;YACF;SACD;QACDY,eAAe;IACjB,CAAA,EAAE"}