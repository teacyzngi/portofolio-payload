{"version":3,"sources":["../../../src/bin/generateImportMap/iterateConfig.ts"],"sourcesContent":["import type { SanitizedConfig } from '../../config/types.js'\nimport type { AddToImportMap, Imports, InternalImportMap } from './index.js'\n\nimport { iterateCollections } from './iterateCollections.js'\nimport { genImportMapIterateFields } from './iterateFields.js'\nimport { iterateGlobals } from './iterateGlobals.js'\n\nexport function iterateConfig({\n  addToImportMap,\n  baseDir,\n  config,\n  importMap,\n  imports,\n}: {\n  addToImportMap: AddToImportMap\n  baseDir: string\n  config: SanitizedConfig\n  importMap: InternalImportMap\n  imports: Imports\n}) {\n  iterateCollections({\n    addToImportMap,\n    baseDir,\n    collections: config.collections,\n    config,\n    importMap,\n    imports,\n  })\n\n  iterateGlobals({\n    addToImportMap,\n    baseDir,\n    config,\n    globals: config.globals,\n    importMap,\n    imports,\n  })\n\n  if (config?.blocks) {\n    const blocks = Object.values(config.blocks)\n    if (blocks?.length) {\n      genImportMapIterateFields({\n        addToImportMap,\n        baseDir,\n        config,\n        fields: blocks,\n        importMap,\n        imports,\n      })\n    }\n  }\n\n  if (typeof config.admin?.avatar === 'object') {\n    addToImportMap(config.admin?.avatar?.Component)\n  }\n\n  addToImportMap(config.admin?.components?.Nav)\n  addToImportMap(config.admin?.components?.header)\n  addToImportMap(config.admin?.components?.logout?.Button)\n  addToImportMap(config.admin?.components?.settingsMenu)\n  addToImportMap(config.admin?.components?.graphics?.Icon)\n  addToImportMap(config.admin?.components?.graphics?.Logo)\n\n  addToImportMap(config.admin?.components?.actions)\n  addToImportMap(config.admin?.components?.afterDashboard)\n  addToImportMap(config.admin?.components?.afterLogin)\n  addToImportMap(config.admin?.components?.afterNavLinks)\n  addToImportMap(config.admin?.components?.beforeDashboard)\n  addToImportMap(config.admin?.components?.beforeLogin)\n  addToImportMap(config.admin?.components?.beforeNavLinks)\n\n  addToImportMap(config.admin?.components?.providers)\n\n  if (config.admin?.components?.views) {\n    if (Object.keys(config.admin?.components?.views)?.length) {\n      for (const key in config.admin?.components?.views) {\n        const adminViewConfig = config.admin?.components?.views[key]\n        addToImportMap(adminViewConfig?.Component)\n      }\n    }\n  }\n\n  if (config?.admin?.importMap?.generators?.length) {\n    for (const generator of config.admin.importMap.generators) {\n      generator({\n        addToImportMap,\n        baseDir,\n        config,\n        importMap,\n        imports,\n      })\n    }\n  }\n\n  if (config?.admin?.dependencies) {\n    for (const dependency of Object.values(config.admin.dependencies)) {\n      addToImportMap(dependency.path)\n    }\n  }\n\n  /*\n  if (\n    config?.editor &&\n    typeof config.editor === 'object' &&\n    config.editor.generateImportMap &&\n    typeof config.editor.generateImportMap === 'function'\n  ) {\n    config.editor.generateImportMap({\n      addToImportMap,\n      baseDir,\n      componentMap,\n      config,\n      importMap,\n    })\n  }*/ // No need to do that here since in the sanitized editor config, this root editor is already added to the field editor - and we already process that in iterateFields\n}\n"],"names":["iterateCollections","genImportMapIterateFields","iterateGlobals","iterateConfig","addToImportMap","baseDir","config","importMap","imports","collections","globals","blocks","Object","values","length","fields","admin","avatar","Component","components","Nav","header","logout","Button","settingsMenu","graphics","Icon","Logo","actions","afterDashboard","afterLogin","afterNavLinks","beforeDashboard","beforeLogin","beforeNavLinks","providers","views","keys","key","adminViewConfig","generators","generator","dependencies","dependency","path"],"mappings":"AAGA,SAASA,kBAAkB,QAAQ,0BAAyB;AAC5D,SAASC,yBAAyB,QAAQ,qBAAoB;AAC9D,SAASC,cAAc,QAAQ,sBAAqB;AAEpD,OAAO,SAASC,cAAc,EAC5BC,cAAc,EACdC,OAAO,EACPC,MAAM,EACNC,SAAS,EACTC,OAAO,EAOR;IACCR,mBAAmB;QACjBI;QACAC;QACAI,aAAaH,OAAOG,WAAW;QAC/BH;QACAC;QACAC;IACF;IAEAN,eAAe;QACbE;QACAC;QACAC;QACAI,SAASJ,OAAOI,OAAO;QACvBH;QACAC;IACF;IAEA,IAAIF,QAAQK,QAAQ;QAClB,MAAMA,SAASC,OAAOC,MAAM,CAACP,OAAOK,MAAM;QAC1C,IAAIA,QAAQG,QAAQ;YAClBb,0BAA0B;gBACxBG;gBACAC;gBACAC;gBACAS,QAAQJ;gBACRJ;gBACAC;YACF;QACF;IACF;IAEA,IAAI,OAAOF,OAAOU,KAAK,EAAEC,WAAW,UAAU;QAC5Cb,eAAeE,OAAOU,KAAK,EAAEC,QAAQC;IACvC;IAEAd,eAAeE,OAAOU,KAAK,EAAEG,YAAYC;IACzChB,eAAeE,OAAOU,KAAK,EAAEG,YAAYE;IACzCjB,eAAeE,OAAOU,KAAK,EAAEG,YAAYG,QAAQC;IACjDnB,eAAeE,OAAOU,KAAK,EAAEG,YAAYK;IACzCpB,eAAeE,OAAOU,KAAK,EAAEG,YAAYM,UAAUC;IACnDtB,eAAeE,OAAOU,KAAK,EAAEG,YAAYM,UAAUE;IAEnDvB,eAAeE,OAAOU,KAAK,EAAEG,YAAYS;IACzCxB,eAAeE,OAAOU,KAAK,EAAEG,YAAYU;IACzCzB,eAAeE,OAAOU,KAAK,EAAEG,YAAYW;IACzC1B,eAAeE,OAAOU,KAAK,EAAEG,YAAYY;IACzC3B,eAAeE,OAAOU,KAAK,EAAEG,YAAYa;IACzC5B,eAAeE,OAAOU,KAAK,EAAEG,YAAYc;IACzC7B,eAAeE,OAAOU,KAAK,EAAEG,YAAYe;IAEzC9B,eAAeE,OAAOU,KAAK,EAAEG,YAAYgB;IAEzC,IAAI7B,OAAOU,KAAK,EAAEG,YAAYiB,OAAO;QACnC,IAAIxB,OAAOyB,IAAI,CAAC/B,OAAOU,KAAK,EAAEG,YAAYiB,QAAQtB,QAAQ;YACxD,IAAK,MAAMwB,OAAOhC,OAAOU,KAAK,EAAEG,YAAYiB,MAAO;gBACjD,MAAMG,kBAAkBjC,OAAOU,KAAK,EAAEG,YAAYiB,KAAK,CAACE,IAAI;gBAC5DlC,eAAemC,iBAAiBrB;YAClC;QACF;IACF;IAEA,IAAIZ,QAAQU,OAAOT,WAAWiC,YAAY1B,QAAQ;QAChD,KAAK,MAAM2B,aAAanC,OAAOU,KAAK,CAACT,SAAS,CAACiC,UAAU,CAAE;YACzDC,UAAU;gBACRrC;gBACAC;gBACAC;gBACAC;gBACAC;YACF;QACF;IACF;IAEA,IAAIF,QAAQU,OAAO0B,cAAc;QAC/B,KAAK,MAAMC,cAAc/B,OAAOC,MAAM,CAACP,OAAOU,KAAK,CAAC0B,YAAY,EAAG;YACjEtC,eAAeuC,WAAWC,IAAI;QAChC;IACF;AAEA;;;;;;;;;;;;;;GAcC,GAAG,qKAAqK;AAC3K"}