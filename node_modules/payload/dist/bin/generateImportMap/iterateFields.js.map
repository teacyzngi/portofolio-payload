{"version":3,"sources":["../../../src/bin/generateImportMap/iterateFields.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport type { PayloadComponent, SanitizedConfig } from '../../config/types.js'\nimport type { Block, Field, Tab } from '../../fields/config/types.js'\nimport type { AddToImportMap, Imports, InternalImportMap } from './index.js'\n\nfunction hasKey<T, K extends string>(\n  obj: null | T | undefined,\n  key: K,\n): obj is { [P in K]: PayloadComponent | PayloadComponent[] } & T {\n  return obj != null && Object.prototype.hasOwnProperty.call(obj, key)\n}\n\nconst defaultUIFieldComponentKeys: Array<'Cell' | 'Description' | 'Field' | 'Filter'> = [\n  'Cell',\n  'Description',\n  'Field',\n  'Filter',\n]\nexport function genImportMapIterateFields({\n  addToImportMap,\n  baseDir,\n  config,\n  fields,\n  importMap,\n  imports,\n}: {\n  addToImportMap: AddToImportMap\n  baseDir: string\n  config: SanitizedConfig\n  fields: Block[] | Field[] | Tab[]\n  importMap: InternalImportMap\n  imports: Imports\n}) {\n  for (const field of fields) {\n    if ('fields' in field) {\n      genImportMapIterateFields({\n        addToImportMap,\n        baseDir,\n        config,\n        fields: field.fields,\n        importMap,\n        imports,\n      })\n    } else if (field.type === 'blocks') {\n      genImportMapIterateFields({\n        addToImportMap,\n        baseDir,\n        config,\n        fields: field.blocks.filter((block) => typeof block !== 'string'),\n        importMap,\n        imports,\n      })\n    } else if (field.type === 'tabs') {\n      genImportMapIterateFields({\n        addToImportMap,\n        baseDir,\n        config,\n        fields: field.tabs,\n        importMap,\n        imports,\n      })\n    } else if (field.type === 'richText') {\n      if (\n        field?.editor &&\n        typeof field.editor === 'object' &&\n        field.editor.generateImportMap &&\n        typeof field.editor.generateImportMap === 'function'\n      ) {\n        field.editor.generateImportMap({\n          addToImportMap,\n          baseDir,\n          config,\n          importMap,\n          imports,\n        })\n      }\n    } else if (field.type === 'ui') {\n      if (field?.admin?.components) {\n        // Render any extra, untyped components\n        for (const key in field.admin.components) {\n          if (key in defaultUIFieldComponentKeys) {\n            continue\n          }\n          addToImportMap(field.admin.components[key])\n        }\n      }\n    }\n\n    hasKey(field?.admin, 'jsx') && addToImportMap(field.admin.jsx) // For Blocks\n\n    hasKey(field?.admin?.components, 'Label') && addToImportMap(field.admin.components.Label)\n\n    hasKey(field?.admin?.components, 'Block') && addToImportMap(field.admin.components.Block)\n\n    hasKey(field?.admin?.components, 'Cell') && addToImportMap(field?.admin?.components?.Cell)\n\n    hasKey(field?.admin?.components, 'Description') &&\n      addToImportMap(field?.admin?.components?.Description)\n\n    hasKey(field?.admin?.components, 'Field') && addToImportMap(field?.admin?.components?.Field)\n    hasKey(field?.admin?.components, 'Filter') && addToImportMap(field?.admin?.components?.Filter)\n\n    hasKey(field?.admin?.components, 'Error') && addToImportMap(field?.admin?.components?.Error)\n\n    hasKey(field?.admin?.components, 'afterInput') &&\n      addToImportMap(field?.admin?.components?.afterInput)\n\n    hasKey(field?.admin?.components, 'beforeInput') &&\n      addToImportMap(field?.admin?.components?.beforeInput)\n\n    hasKey(field?.admin?.components, 'RowLabel') &&\n      addToImportMap(field?.admin?.components?.RowLabel)\n\n    hasKey(field?.admin?.components, 'Diff') && addToImportMap(field?.admin?.components?.Diff)\n  }\n}\n"],"names":["hasKey","obj","key","Object","prototype","hasOwnProperty","call","defaultUIFieldComponentKeys","genImportMapIterateFields","addToImportMap","baseDir","config","fields","importMap","imports","field","type","blocks","filter","block","tabs","editor","generateImportMap","admin","components","jsx","Label","Block","Cell","Description","Field","Filter","Error","afterInput","beforeInput","RowLabel","Diff"],"mappings":"AAAA,2DAA2D,GAK3D,SAASA,OACPC,GAAyB,EACzBC,GAAM;IAEN,OAAOD,OAAO,QAAQE,OAAOC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACL,KAAKC;AAClE;AAEA,MAAMK,8BAAkF;IACtF;IACA;IACA;IACA;CACD;AACD,OAAO,SAASC,0BAA0B,EACxCC,cAAc,EACdC,OAAO,EACPC,MAAM,EACNC,MAAM,EACNC,SAAS,EACTC,OAAO,EAQR;IACC,KAAK,MAAMC,SAASH,OAAQ;QAC1B,IAAI,YAAYG,OAAO;YACrBP,0BAA0B;gBACxBC;gBACAC;gBACAC;gBACAC,QAAQG,MAAMH,MAAM;gBACpBC;gBACAC;YACF;QACF,OAAO,IAAIC,MAAMC,IAAI,KAAK,UAAU;YAClCR,0BAA0B;gBACxBC;gBACAC;gBACAC;gBACAC,QAAQG,MAAME,MAAM,CAACC,MAAM,CAAC,CAACC,QAAU,OAAOA,UAAU;gBACxDN;gBACAC;YACF;QACF,OAAO,IAAIC,MAAMC,IAAI,KAAK,QAAQ;YAChCR,0BAA0B;gBACxBC;gBACAC;gBACAC;gBACAC,QAAQG,MAAMK,IAAI;gBAClBP;gBACAC;YACF;QACF,OAAO,IAAIC,MAAMC,IAAI,KAAK,YAAY;YACpC,IACED,OAAOM,UACP,OAAON,MAAMM,MAAM,KAAK,YACxBN,MAAMM,MAAM,CAACC,iBAAiB,IAC9B,OAAOP,MAAMM,MAAM,CAACC,iBAAiB,KAAK,YAC1C;gBACAP,MAAMM,MAAM,CAACC,iBAAiB,CAAC;oBAC7Bb;oBACAC;oBACAC;oBACAE;oBACAC;gBACF;YACF;QACF,OAAO,IAAIC,MAAMC,IAAI,KAAK,MAAM;YAC9B,IAAID,OAAOQ,OAAOC,YAAY;gBAC5B,uCAAuC;gBACvC,IAAK,MAAMtB,OAAOa,MAAMQ,KAAK,CAACC,UAAU,CAAE;oBACxC,IAAItB,OAAOK,6BAA6B;wBACtC;oBACF;oBACAE,eAAeM,MAAMQ,KAAK,CAACC,UAAU,CAACtB,IAAI;gBAC5C;YACF;QACF;QAEAF,OAAOe,OAAOQ,OAAO,UAAUd,eAAeM,MAAMQ,KAAK,CAACE,GAAG,EAAE,aAAa;;QAE5EzB,OAAOe,OAAOQ,OAAOC,YAAY,YAAYf,eAAeM,MAAMQ,KAAK,CAACC,UAAU,CAACE,KAAK;QAExF1B,OAAOe,OAAOQ,OAAOC,YAAY,YAAYf,eAAeM,MAAMQ,KAAK,CAACC,UAAU,CAACG,KAAK;QAExF3B,OAAOe,OAAOQ,OAAOC,YAAY,WAAWf,eAAeM,OAAOQ,OAAOC,YAAYI;QAErF5B,OAAOe,OAAOQ,OAAOC,YAAY,kBAC/Bf,eAAeM,OAAOQ,OAAOC,YAAYK;QAE3C7B,OAAOe,OAAOQ,OAAOC,YAAY,YAAYf,eAAeM,OAAOQ,OAAOC,YAAYM;QACtF9B,OAAOe,OAAOQ,OAAOC,YAAY,aAAaf,eAAeM,OAAOQ,OAAOC,YAAYO;QAEvF/B,OAAOe,OAAOQ,OAAOC,YAAY,YAAYf,eAAeM,OAAOQ,OAAOC,YAAYQ;QAEtFhC,OAAOe,OAAOQ,OAAOC,YAAY,iBAC/Bf,eAAeM,OAAOQ,OAAOC,YAAYS;QAE3CjC,OAAOe,OAAOQ,OAAOC,YAAY,kBAC/Bf,eAAeM,OAAOQ,OAAOC,YAAYU;QAE3ClC,OAAOe,OAAOQ,OAAOC,YAAY,eAC/Bf,eAAeM,OAAOQ,OAAOC,YAAYW;QAE3CnC,OAAOe,OAAOQ,OAAOC,YAAY,WAAWf,eAAeM,OAAOQ,OAAOC,YAAYY;IACvF;AACF"}