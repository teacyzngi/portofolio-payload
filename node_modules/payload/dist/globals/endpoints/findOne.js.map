{"version":3,"sources":["../../../src/globals/endpoints/findOne.ts"],"sourcesContent":["import { status as httpStatus } from 'http-status'\n\nimport type { PayloadHandler } from '../../config/types.js'\n\nimport { getRequestGlobal } from '../../utilities/getRequestEntity.js'\nimport { headersWithCors } from '../../utilities/headersWithCors.js'\nimport { isNumber } from '../../utilities/isNumber.js'\nimport { sanitizePopulateParam } from '../../utilities/sanitizePopulateParam.js'\nimport { sanitizeSelectParam } from '../../utilities/sanitizeSelectParam.js'\nimport { findOneOperation } from '../operations/findOne.js'\n\nexport const findOneHandler: PayloadHandler = async (req) => {\n  const globalConfig = getRequestGlobal(req)\n  const { data, searchParams } = req\n  const depth = data ? data.depth : searchParams.get('depth')\n  const flattenLocales = data\n    ? data.flattenLocales\n    : searchParams.has('flattenLocales')\n      ? searchParams.get('flattenLocales') === 'true'\n      : // flattenLocales should be undfined if not provided, so that the default (true) is applied in the operation\n        undefined\n\n  const result = await findOneOperation({\n    slug: globalConfig.slug,\n    data: data\n      ? data?.data\n      : searchParams.get('data')\n        ? JSON.parse(searchParams.get('data') as string)\n        : undefined,\n    depth: isNumber(depth) ? Number(depth) : undefined,\n    draft: data ? data.draft : searchParams.get('draft') === 'true',\n    flattenLocales,\n    globalConfig,\n    populate: sanitizePopulateParam(req.query.populate),\n    req,\n    select: sanitizeSelectParam(req.query.select),\n  })\n\n  return Response.json(result, {\n    headers: headersWithCors({\n      headers: new Headers(),\n      req,\n    }),\n    status: httpStatus.OK,\n  })\n}\n"],"names":["status","httpStatus","getRequestGlobal","headersWithCors","isNumber","sanitizePopulateParam","sanitizeSelectParam","findOneOperation","findOneHandler","req","globalConfig","data","searchParams","depth","get","flattenLocales","has","undefined","result","slug","JSON","parse","Number","draft","populate","query","select","Response","json","headers","Headers","OK"],"mappings":"AAAA,SAASA,UAAUC,UAAU,QAAQ,cAAa;AAIlD,SAASC,gBAAgB,QAAQ,sCAAqC;AACtE,SAASC,eAAe,QAAQ,qCAAoC;AACpE,SAASC,QAAQ,QAAQ,8BAA6B;AACtD,SAASC,qBAAqB,QAAQ,2CAA0C;AAChF,SAASC,mBAAmB,QAAQ,yCAAwC;AAC5E,SAASC,gBAAgB,QAAQ,2BAA0B;AAE3D,OAAO,MAAMC,iBAAiC,OAAOC;IACnD,MAAMC,eAAeR,iBAAiBO;IACtC,MAAM,EAAEE,IAAI,EAAEC,YAAY,EAAE,GAAGH;IAC/B,MAAMI,QAAQF,OAAOA,KAAKE,KAAK,GAAGD,aAAaE,GAAG,CAAC;IACnD,MAAMC,iBAAiBJ,OACnBA,KAAKI,cAAc,GACnBH,aAAaI,GAAG,CAAC,oBACfJ,aAAaE,GAAG,CAAC,sBAAsB,SAEvCG;IAEN,MAAMC,SAAS,MAAMX,iBAAiB;QACpCY,MAAMT,aAAaS,IAAI;QACvBR,MAAMA,OACFA,MAAMA,OACNC,aAAaE,GAAG,CAAC,UACfM,KAAKC,KAAK,CAACT,aAAaE,GAAG,CAAC,WAC5BG;QACNJ,OAAOT,SAASS,SAASS,OAAOT,SAASI;QACzCM,OAAOZ,OAAOA,KAAKY,KAAK,GAAGX,aAAaE,GAAG,CAAC,aAAa;QACzDC;QACAL;QACAc,UAAUnB,sBAAsBI,IAAIgB,KAAK,CAACD,QAAQ;QAClDf;QACAiB,QAAQpB,oBAAoBG,IAAIgB,KAAK,CAACC,MAAM;IAC9C;IAEA,OAAOC,SAASC,IAAI,CAACV,QAAQ;QAC3BW,SAAS1B,gBAAgB;YACvB0B,SAAS,IAAIC;YACbrB;QACF;QACAT,QAAQC,WAAW8B,EAAE;IACvB;AACF,EAAC"}