{"version":3,"sources":["../../../src/globals/endpoints/findVersions.ts"],"sourcesContent":["import { status as httpStatus } from 'http-status'\n\nimport type { PayloadHandler } from '../../config/types.js'\nimport type { Where } from '../../types/index.js'\n\nimport { getRequestGlobal } from '../../utilities/getRequestEntity.js'\nimport { headersWithCors } from '../../utilities/headersWithCors.js'\nimport { isNumber } from '../../utilities/isNumber.js'\nimport { sanitizePopulateParam } from '../../utilities/sanitizePopulateParam.js'\nimport { sanitizeSelectParam } from '../../utilities/sanitizeSelectParam.js'\nimport { findVersionsOperation } from '../operations/findVersions.js'\n\nexport const findVersionsHandler: PayloadHandler = async (req) => {\n  const globalConfig = getRequestGlobal(req)\n  const { depth, limit, page, pagination, populate, select, sort, where } = req.query as {\n    depth?: string\n    limit?: string\n    page?: string\n    pagination?: string\n    populate?: Record<string, unknown>\n    select?: Record<string, unknown>\n    sort?: string\n    where?: Where\n  }\n\n  const result = await findVersionsOperation({\n    depth: isNumber(depth) ? Number(depth) : undefined,\n    globalConfig,\n    limit: isNumber(limit) ? Number(limit) : undefined,\n    page: isNumber(page) ? Number(page) : undefined,\n    pagination: pagination === 'false' ? false : undefined,\n    populate: sanitizePopulateParam(populate),\n    req,\n    select: sanitizeSelectParam(select),\n    sort: typeof sort === 'string' ? sort.split(',') : undefined,\n    where,\n  })\n\n  return Response.json(result, {\n    headers: headersWithCors({\n      headers: new Headers(),\n      req,\n    }),\n    status: httpStatus.OK,\n  })\n}\n"],"names":["status","httpStatus","getRequestGlobal","headersWithCors","isNumber","sanitizePopulateParam","sanitizeSelectParam","findVersionsOperation","findVersionsHandler","req","globalConfig","depth","limit","page","pagination","populate","select","sort","where","query","result","Number","undefined","split","Response","json","headers","Headers","OK"],"mappings":"AAAA,SAASA,UAAUC,UAAU,QAAQ,cAAa;AAKlD,SAASC,gBAAgB,QAAQ,sCAAqC;AACtE,SAASC,eAAe,QAAQ,qCAAoC;AACpE,SAASC,QAAQ,QAAQ,8BAA6B;AACtD,SAASC,qBAAqB,QAAQ,2CAA0C;AAChF,SAASC,mBAAmB,QAAQ,yCAAwC;AAC5E,SAASC,qBAAqB,QAAQ,gCAA+B;AAErE,OAAO,MAAMC,sBAAsC,OAAOC;IACxD,MAAMC,eAAeR,iBAAiBO;IACtC,MAAM,EAAEE,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAE,GAAGT,IAAIU,KAAK;IAWnF,MAAMC,SAAS,MAAMb,sBAAsB;QACzCI,OAAOP,SAASO,SAASU,OAAOV,SAASW;QACzCZ;QACAE,OAAOR,SAASQ,SAASS,OAAOT,SAASU;QACzCT,MAAMT,SAASS,QAAQQ,OAAOR,QAAQS;QACtCR,YAAYA,eAAe,UAAU,QAAQQ;QAC7CP,UAAUV,sBAAsBU;QAChCN;QACAO,QAAQV,oBAAoBU;QAC5BC,MAAM,OAAOA,SAAS,WAAWA,KAAKM,KAAK,CAAC,OAAOD;QACnDJ;IACF;IAEA,OAAOM,SAASC,IAAI,CAACL,QAAQ;QAC3BM,SAASvB,gBAAgB;YACvBuB,SAAS,IAAIC;YACblB;QACF;QACAT,QAAQC,WAAW2B,EAAE;IACvB;AACF,EAAC"}