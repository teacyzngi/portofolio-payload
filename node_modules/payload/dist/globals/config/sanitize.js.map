{"version":3,"sources":["../../../src/globals/config/sanitize.ts"],"sourcesContent":["import type { Config, SanitizedConfig } from '../../config/types.js'\nimport type { GlobalConfig, SanitizedGlobalConfig } from './types.js'\n\nimport { defaultAccess } from '../../auth/defaultAccess.js'\nimport { sanitizeFields } from '../../fields/config/sanitize.js'\nimport { fieldAffectsData } from '../../fields/config/types.js'\nimport { mergeBaseFields } from '../../fields/mergeBaseFields.js'\nimport { flattenAllFields } from '../../utilities/flattenAllFields.js'\nimport { toWords } from '../../utilities/formatLabels.js'\nimport { baseVersionFields } from '../../versions/baseFields.js'\nimport { versionDefaults } from '../../versions/defaults.js'\nimport { defaultGlobalEndpoints } from '../endpoints/index.js'\n\nexport const sanitizeGlobal = async (\n  config: Config,\n  global: GlobalConfig,\n  /**\n   * If this property is set, RichText fields won't be sanitized immediately. Instead, they will be added to this array as promises\n   * so that you can sanitize them together, after the config has been sanitized.\n   */\n  richTextSanitizationPromises?: Array<(config: SanitizedConfig) => Promise<void>>,\n  _validRelationships?: string[],\n): Promise<SanitizedGlobalConfig> => {\n  if (global._sanitized) {\n    return global as SanitizedGlobalConfig\n  }\n\n  global._sanitized = true\n\n  global.label = global.label || toWords(global.slug)\n\n  // /////////////////////////////////\n  // Ensure that collection has required object structure\n  // /////////////////////////////////\n\n  global.endpoints = global.endpoints ?? []\n\n  if (!global.hooks) {\n    global.hooks = {}\n  }\n\n  if (!global.access) {\n    global.access = {}\n  }\n\n  if (!global.admin) {\n    global.admin = {}\n  }\n\n  if (!global.access.read) {\n    global.access.read = defaultAccess\n  }\n\n  if (!global.access.update) {\n    global.access.update = defaultAccess\n  }\n\n  if (!global.hooks.beforeValidate) {\n    global.hooks.beforeValidate = []\n  }\n\n  if (!global.hooks.beforeChange) {\n    global.hooks.beforeChange = []\n  }\n\n  if (!global.hooks.afterChange) {\n    global.hooks.afterChange = []\n  }\n\n  if (!global.hooks.beforeRead) {\n    global.hooks.beforeRead = []\n  }\n\n  if (!global.hooks.afterRead) {\n    global.hooks.afterRead = []\n  }\n\n  // Sanitize fields\n  const validRelationships = _validRelationships ?? config.collections?.map((c) => c.slug) ?? []\n\n  global.fields = await sanitizeFields({\n    config,\n    fields: global.fields,\n    globalConfig: global,\n    parentIsLocalized: false,\n    richTextSanitizationPromises,\n    validRelationships,\n  })\n\n  if (global.endpoints !== false) {\n    if (!global.endpoints) {\n      global.endpoints = []\n    }\n\n    for (const endpoint of defaultGlobalEndpoints) {\n      global.endpoints.push(endpoint)\n    }\n  }\n\n  if (global.versions) {\n    if (global.versions === true) {\n      global.versions = { drafts: false, max: 100 }\n    }\n\n    global.versions.max = typeof global.versions.max === 'number' ? global.versions.max : 100\n\n    if (global.versions.drafts) {\n      if (global.versions.drafts === true) {\n        global.versions.drafts = {\n          autosave: false,\n          validate: false,\n        }\n      }\n\n      if (global.versions.drafts.autosave === true) {\n        global.versions.drafts.autosave = {\n          interval: versionDefaults.autosaveInterval,\n        }\n      }\n\n      if (global.versions.drafts.validate === undefined) {\n        global.versions.drafts.validate = false\n      }\n\n      global.fields = mergeBaseFields(global.fields, baseVersionFields)\n    }\n  }\n\n  if (!global.custom) {\n    global.custom = {}\n  }\n\n  // /////////////////////////////////\n  // Sanitize fields\n  // /////////////////////////////////\n  let hasUpdatedAt: boolean | null = null\n  let hasCreatedAt: boolean | null = null\n  global.fields.some((field) => {\n    if (fieldAffectsData(field)) {\n      if (field.name === 'updatedAt') {\n        hasUpdatedAt = true\n      }\n      if (field.name === 'createdAt') {\n        hasCreatedAt = true\n      }\n    }\n    return hasCreatedAt && hasUpdatedAt\n  })\n  if (!hasUpdatedAt) {\n    global.fields.push({\n      name: 'updatedAt',\n      type: 'date',\n      admin: {\n        disableBulkEdit: true,\n        hidden: true,\n      },\n      label: ({ t }) => t('general:updatedAt'),\n    })\n  }\n  if (!hasCreatedAt) {\n    global.fields.push({\n      name: 'createdAt',\n      type: 'date',\n      admin: {\n        disableBulkEdit: true,\n        hidden: true,\n      },\n      label: ({ t }) => t('general:createdAt'),\n    })\n  }\n\n  ;(global as SanitizedGlobalConfig).flattenedFields = flattenAllFields({ fields: global.fields })\n\n  return global as SanitizedGlobalConfig\n}\n"],"names":["defaultAccess","sanitizeFields","fieldAffectsData","mergeBaseFields","flattenAllFields","toWords","baseVersionFields","versionDefaults","defaultGlobalEndpoints","sanitizeGlobal","config","global","richTextSanitizationPromises","_validRelationships","_sanitized","label","slug","endpoints","hooks","access","admin","read","update","beforeValidate","beforeChange","afterChange","beforeRead","afterRead","validRelationships","collections","map","c","fields","globalConfig","parentIsLocalized","endpoint","push","versions","drafts","max","autosave","validate","interval","autosaveInterval","undefined","custom","hasUpdatedAt","hasCreatedAt","some","field","name","type","disableBulkEdit","hidden","t","flattenedFields"],"mappings":"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"}