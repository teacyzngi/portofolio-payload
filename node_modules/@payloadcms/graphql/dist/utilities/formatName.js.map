{"version":3,"sources":["../../src/utilities/formatName.ts"],"sourcesContent":["const numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\n\nexport const formatName = (string: string): string => {\n  let sanitizedString = String(string)\n\n  const firstLetter = sanitizedString.substring(0, 1)\n\n  if (numbers.indexOf(firstLetter) > -1) {\n    sanitizedString = `_${sanitizedString}`\n  }\n\n  const formatted = sanitizedString\n    // Convert accented characters\n    .normalize('NFKD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n\n    .replace(/\\./g, '_')\n    .replace(/-|\\//g, '_')\n    .replace(/\\+/g, '_')\n    .replace(/,/g, '_')\n    .replace(/\\(/g, '_')\n    .replace(/\\)/g, '_')\n    .replace(/'/g, '_')\n    .replace(/ /g, '')\n    .replace(/\\[|\\]/g, '_')\n\n  return formatted || '_'\n}\n"],"names":["numbers","formatName","string","sanitizedString","String","firstLetter","substring","indexOf","formatted","normalize","replace"],"mappings":"AAAA,MAAMA,UAAU;IAAC;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;IAAK;CAAI;AAElE,OAAO,MAAMC,aAAa,CAACC;IACzB,IAAIC,kBAAkBC,OAAOF;IAE7B,MAAMG,cAAcF,gBAAgBG,SAAS,CAAC,GAAG;IAEjD,IAAIN,QAAQO,OAAO,CAACF,eAAe,CAAC,GAAG;QACrCF,kBAAkB,CAAC,CAAC,EAAEA,iBAAiB;IACzC;IAEA,MAAMK,YAAYL,eAChB,8BAA8B;KAC7BM,SAAS,CAAC,QACVC,OAAO,CAAC,oBAAoB,IAE5BA,OAAO,CAAC,OAAO,KACfA,OAAO,CAAC,SAAS,KACjBA,OAAO,CAAC,OAAO,KACfA,OAAO,CAAC,MAAM,KACdA,OAAO,CAAC,OAAO,KACfA,OAAO,CAAC,OAAO,KACfA,OAAO,CAAC,MAAM,KACdA,OAAO,CAAC,MAAM,IACdA,OAAO,CAAC,UAAU;IAErB,OAAOF,aAAa;AACtB,EAAC"}