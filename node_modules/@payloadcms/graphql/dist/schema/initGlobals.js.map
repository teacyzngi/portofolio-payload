{"version":3,"sources":["../../src/schema/initGlobals.ts"],"sourcesContent":["import { GraphQLBoolean, GraphQLInt, GraphQLNonNull, GraphQLString } from 'graphql'\nimport pluralize from 'pluralize'\nconst { singular } = pluralize\n\nimport type { Field, GraphQLInfo, SanitizedConfig, SanitizedGlobalConfig } from 'payload'\n\nimport { buildVersionGlobalFields, toWords } from 'payload'\n\nimport { docAccessResolver } from '../resolvers/globals/docAccess.js'\nimport { findOne } from '../resolvers/globals/findOne.js'\nimport { findVersionByID } from '../resolvers/globals/findVersionByID.js'\nimport { findVersions } from '../resolvers/globals/findVersions.js'\nimport { restoreVersion } from '../resolvers/globals/restoreVersion.js'\nimport { update } from '../resolvers/globals/update.js'\nimport { formatName } from '../utilities/formatName.js'\nimport { buildMutationInputType } from './buildMutationInputType.js'\nimport { buildObjectType } from './buildObjectType.js'\nimport { buildPaginatedListType } from './buildPaginatedListType.js'\nimport { buildPolicyType } from './buildPoliciesType.js'\nimport { buildWhereInputType } from './buildWhereInputType.js'\n\ntype InitGlobalsGraphQLArgs = {\n  config: SanitizedConfig\n  graphqlResult: GraphQLInfo\n}\nexport function initGlobals({ config, graphqlResult }: InitGlobalsGraphQLArgs): void {\n  Object.keys(graphqlResult.globals.config).forEach((slug) => {\n    const global: SanitizedGlobalConfig = graphqlResult.globals.config[slug]\n    const { fields, graphQL, versions } = global\n\n    if (graphQL === false) {\n      return\n    }\n\n    const formattedName = graphQL?.name ? graphQL.name : singular(toWords(global.slug, true))\n\n    const forceNullableObjectType = Boolean(versions?.drafts)\n\n    if (!graphqlResult.globals.graphQL) {\n      graphqlResult.globals.graphQL = {}\n    }\n\n    const updateMutationInputType = buildMutationInputType({\n      name: formattedName,\n      config,\n      fields,\n      graphqlResult,\n      parentIsLocalized: false,\n      parentName: formattedName,\n    })\n    graphqlResult.globals.graphQL[slug] = {\n      type: buildObjectType({\n        name: formattedName,\n        config,\n        fields,\n        forceNullable: forceNullableObjectType,\n        graphqlResult,\n        parentName: formattedName,\n      }),\n      mutationInputType: updateMutationInputType\n        ? new GraphQLNonNull(updateMutationInputType)\n        : null,\n    }\n\n    const queriesEnabled = typeof global.graphQL !== 'object' || !global.graphQL.disableQueries\n    const mutationsEnabled = typeof global.graphQL !== 'object' || !global.graphQL.disableMutations\n\n    if (queriesEnabled) {\n      graphqlResult.Query.fields[formattedName] = {\n        type: graphqlResult.globals.graphQL[slug].type,\n        args: {\n          draft: { type: GraphQLBoolean },\n          ...(config.localization\n            ? {\n                fallbackLocale: { type: graphqlResult.types.fallbackLocaleInputType },\n                locale: { type: graphqlResult.types.localeInputType },\n              }\n            : {}),\n          select: { type: GraphQLBoolean },\n        },\n        resolve: findOne(global),\n      }\n\n      graphqlResult.Query.fields[`docAccess${formattedName}`] = {\n        type: buildPolicyType({\n          type: 'global',\n          entity: global,\n          scope: 'docAccess',\n          typeSuffix: 'DocAccess',\n        }),\n        resolve: docAccessResolver(global),\n      }\n    }\n\n    if (mutationsEnabled) {\n      graphqlResult.Mutation.fields[`update${formattedName}`] = {\n        type: graphqlResult.globals.graphQL[slug].type,\n        args: {\n          ...(updateMutationInputType\n            ? { data: { type: graphqlResult.globals.graphQL[slug].mutationInputType } }\n            : {}),\n          draft: { type: GraphQLBoolean },\n          ...(config.localization\n            ? {\n                locale: { type: graphqlResult.types.localeInputType },\n              }\n            : {}),\n        },\n        resolve: update(global),\n      }\n    }\n\n    if (global.versions) {\n      const idType = config.db.defaultIDType === 'number' ? GraphQLInt : GraphQLString\n\n      const versionGlobalFields: Field[] = [\n        ...buildVersionGlobalFields(config, global),\n        {\n          name: 'id',\n          type: config.db.defaultIDType as 'text',\n        },\n        {\n          name: 'createdAt',\n          type: 'date',\n          label: 'Created At',\n        },\n        {\n          name: 'updatedAt',\n          type: 'date',\n          label: 'Updated At',\n        },\n      ]\n\n      graphqlResult.globals.graphQL[slug].versionType = buildObjectType({\n        name: `${formattedName}Version`,\n        config,\n        fields: versionGlobalFields,\n        forceNullable: forceNullableObjectType,\n        graphqlResult,\n        parentName: `${formattedName}Version`,\n      })\n\n      if (queriesEnabled) {\n        graphqlResult.Query.fields[`version${formatName(formattedName)}`] = {\n          type: graphqlResult.globals.graphQL[slug].versionType,\n          args: {\n            id: { type: idType },\n            draft: { type: GraphQLBoolean },\n            ...(config.localization\n              ? {\n                  fallbackLocale: { type: graphqlResult.types.fallbackLocaleInputType },\n                  locale: { type: graphqlResult.types.localeInputType },\n                }\n              : {}),\n            select: { type: GraphQLBoolean },\n          },\n          resolve: findVersionByID(global),\n        }\n        graphqlResult.Query.fields[`versions${formattedName}`] = {\n          type: buildPaginatedListType(\n            `versions${formatName(formattedName)}`,\n            graphqlResult.globals.graphQL[slug].versionType,\n          ),\n          args: {\n            where: {\n              type: buildWhereInputType({\n                name: `versions${formattedName}`,\n                fields: versionGlobalFields,\n                parentName: `versions${formattedName}`,\n              }),\n            },\n            ...(config.localization\n              ? {\n                  fallbackLocale: { type: graphqlResult.types.fallbackLocaleInputType },\n                  locale: { type: graphqlResult.types.localeInputType },\n                }\n              : {}),\n            limit: { type: GraphQLInt },\n            page: { type: GraphQLInt },\n            pagination: { type: GraphQLBoolean },\n            select: { type: GraphQLBoolean },\n            sort: { type: GraphQLString },\n          },\n          resolve: findVersions(global),\n        }\n      }\n\n      if (mutationsEnabled) {\n        graphqlResult.Mutation.fields[`restoreVersion${formatName(formattedName)}`] = {\n          type: graphqlResult.globals.graphQL[slug].type,\n          args: {\n            id: { type: idType },\n            draft: { type: GraphQLBoolean },\n          },\n          resolve: restoreVersion(global),\n        }\n      }\n    }\n  })\n}\n"],"names":["GraphQLBoolean","GraphQLInt","GraphQLNonNull","GraphQLString","pluralize","singular","buildVersionGlobalFields","toWords","docAccessResolver","findOne","findVersionByID","findVersions","restoreVersion","update","formatName","buildMutationInputType","buildObjectType","buildPaginatedListType","buildPolicyType","buildWhereInputType","initGlobals","config","graphqlResult","Object","keys","globals","forEach","slug","global","fields","graphQL","versions","formattedName","name","forceNullableObjectType","Boolean","drafts","updateMutationInputType","parentIsLocalized","parentName","type","forceNullable","mutationInputType","queriesEnabled","disableQueries","mutationsEnabled","disableMutations","Query","args","draft","localization","fallbackLocale","types","fallbackLocaleInputType","locale","localeInputType","select","resolve","entity","scope","typeSuffix","Mutation","data","idType","db","defaultIDType","versionGlobalFields","label","versionType","id","where","limit","page","pagination","sort"],"mappings":"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"}