{"version":3,"file":"index.js","names":["Logout","RenderServerComponent","EntityType","groupNavItems","React","NavHamburger","NavWrapper","SettingsMenuButton","baseClass","getNavPrefs","DefaultNavClient","DefaultNav","props","documentSubViewType","i18n","locale","params","payload","permissions","req","searchParams","user","viewType","visibleEntities","config","admin","components","afterNavLinks","beforeNavLinks","logout","settingsMenu","collections","globals","groups","filter","slug","includes","map","collection","type","entity","global","navPreferences","LogoutComponent","clientProps","Component","Button","Fallback","importMap","serverProps","renderedSettingsMenu","Array","isArray","item","index","key","_jsxs","className","_jsx"],"sources":["../../../src/elements/Nav/index.tsx"],"sourcesContent":["import type { EntityToGroup } from '@payloadcms/ui/shared'\nimport type { PayloadRequest, ServerProps } from 'payload'\n\nimport { Logout } from '@payloadcms/ui'\nimport { RenderServerComponent } from '@payloadcms/ui/elements/RenderServerComponent'\nimport { EntityType, groupNavItems } from '@payloadcms/ui/shared'\nimport React from 'react'\n\nimport { NavHamburger } from './NavHamburger/index.js'\nimport { NavWrapper } from './NavWrapper/index.js'\nimport { SettingsMenuButton } from './SettingsMenuButton/index.js'\nimport './index.scss'\n\nconst baseClass = 'nav'\n\nimport { getNavPrefs } from './getNavPrefs.js'\nimport { DefaultNavClient } from './index.client.js'\n\nexport type NavProps = {\n  req?: PayloadRequest\n} & ServerProps\n\nexport const DefaultNav: React.FC<NavProps> = async (props) => {\n  const {\n    documentSubViewType,\n    i18n,\n    locale,\n    params,\n    payload,\n    permissions,\n    req,\n    searchParams,\n    user,\n    viewType,\n    visibleEntities,\n  } = props\n\n  if (!payload?.config) {\n    return null\n  }\n\n  const {\n    admin: {\n      components: { afterNavLinks, beforeNavLinks, logout, settingsMenu },\n    },\n    collections,\n    globals,\n  } = payload.config\n\n  const groups = groupNavItems(\n    [\n      ...collections\n        .filter(({ slug }) => visibleEntities.collections.includes(slug))\n        .map(\n          (collection) =>\n            ({\n              type: EntityType.collection,\n              entity: collection,\n            }) satisfies EntityToGroup,\n        ),\n      ...globals\n        .filter(({ slug }) => visibleEntities.globals.includes(slug))\n        .map(\n          (global) =>\n            ({\n              type: EntityType.global,\n              entity: global,\n            }) satisfies EntityToGroup,\n        ),\n    ],\n    permissions,\n    i18n,\n  )\n\n  const navPreferences = await getNavPrefs(req)\n\n  const LogoutComponent = RenderServerComponent({\n    clientProps: {\n      documentSubViewType,\n      viewType,\n    },\n    Component: logout?.Button,\n    Fallback: Logout,\n    importMap: payload.importMap,\n    serverProps: {\n      i18n,\n      locale,\n      params,\n      payload,\n      permissions,\n      searchParams,\n      user,\n    },\n  })\n\n  const renderedSettingsMenu =\n    settingsMenu && Array.isArray(settingsMenu)\n      ? settingsMenu.map((item, index) =>\n          RenderServerComponent({\n            clientProps: {\n              documentSubViewType,\n              viewType,\n            },\n            Component: item,\n            importMap: payload.importMap,\n            key: `settings-menu-item-${index}`,\n            serverProps: {\n              i18n,\n              locale,\n              params,\n              payload,\n              permissions,\n              searchParams,\n              user,\n            },\n          }),\n        )\n      : []\n\n  return (\n    <NavWrapper baseClass={baseClass}>\n      <nav className={`${baseClass}__wrap`}>\n        {RenderServerComponent({\n          clientProps: {\n            documentSubViewType,\n            viewType,\n          },\n          Component: beforeNavLinks,\n          importMap: payload.importMap,\n          serverProps: {\n            i18n,\n            locale,\n            params,\n            payload,\n            permissions,\n            searchParams,\n            user,\n          },\n        })}\n        <DefaultNavClient groups={groups} navPreferences={navPreferences} />\n        {RenderServerComponent({\n          clientProps: {\n            documentSubViewType,\n            viewType,\n          },\n          Component: afterNavLinks,\n          importMap: payload.importMap,\n          serverProps: {\n            i18n,\n            locale,\n            params,\n            payload,\n            permissions,\n            searchParams,\n            user,\n          },\n        })}\n        <div className={`${baseClass}__controls`}>\n          <SettingsMenuButton settingsMenu={renderedSettingsMenu} />\n          {LogoutComponent}\n        </div>\n      </nav>\n      <div className={`${baseClass}__header`}>\n        <div className={`${baseClass}__header-content`}>\n          <NavHamburger baseClass={baseClass} />\n        </div>\n      </div>\n    </NavWrapper>\n  )\n}\n"],"mappings":"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","ignoreList":[]}