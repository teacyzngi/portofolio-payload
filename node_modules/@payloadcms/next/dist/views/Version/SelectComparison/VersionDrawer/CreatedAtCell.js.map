{"version":3,"file":"CreatedAtCell.js","names":["useConfig","useModal","useRouteTransition","useTranslation","formatDate","usePathname","useRouter","useSearchParams","VersionDrawerCreatedAtCell","t0","rowData","t1","id","updatedAt","undefined","config","t2","admin","t3","dateFormat","closeAllModals","router","pathname","searchParams","startRouteTransition","i18n","_jsx","className","onClick","current","URLSearchParams","Array","from","entries","set","String","search","toString","query","push","type","children","date","pattern"],"sources":["../../../../../src/views/Version/SelectComparison/VersionDrawer/CreatedAtCell.tsx"],"sourcesContent":["'use client'\nimport { useConfig, useModal, useRouteTransition, useTranslation } from '@payloadcms/ui'\nimport { formatDate } from '@payloadcms/ui/shared'\nimport { usePathname, useRouter, useSearchParams } from 'next/navigation.js'\n\nimport type { CreatedAtCellProps } from '../../../Versions/cells/CreatedAt/index.js'\n\nexport const VersionDrawerCreatedAtCell: React.FC<CreatedAtCellProps> = ({\n  rowData: { id, updatedAt } = {},\n}) => {\n  const {\n    config: {\n      admin: { dateFormat },\n    },\n  } = useConfig()\n  const { closeAllModals } = useModal()\n  const router = useRouter()\n  const pathname = usePathname()\n  const searchParams = useSearchParams()\n  const { startRouteTransition } = useRouteTransition()\n\n  const { i18n } = useTranslation()\n\n  return (\n    <button\n      className=\"created-at-cell\"\n      onClick={() => {\n        closeAllModals()\n        const current = new URLSearchParams(Array.from(searchParams.entries()))\n\n        if (id) {\n          current.set('versionFrom', String(id))\n        }\n\n        const search = current.toString()\n        const query = search ? `?${search}` : ''\n\n        startRouteTransition(() => router.push(`${pathname}${query}`))\n      }}\n      type=\"button\"\n    >\n      {formatDate({ date: updatedAt, i18n, pattern: dateFormat })}\n    </button>\n  )\n}\n"],"mappings":"AAAA;;;AACA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,kBAAkB,EAAEC,cAAc,QAAQ;AACxE,SAASC,UAAU,QAAQ;AAC3B,SAASC,WAAW,EAAEC,SAAS,EAAEC,eAAe,QAAQ;AAIxD,OAAO,MAAMC,0BAAA,GAA2DC,EAAA;EAAC;IAAAC,OAAA,EAAAC;EAAA,IAAAF,EAExE;EADU;IAAAG,EAAA;IAAAC;EAAA,IAAAF,EAAsB,KAAAG,SAAA,QAAtBH,EAAsB;EAE/B;IAAAI,MAAA,EAAAC;EAAA,IAIIhB,SAAA;EAHM;IAAAiB,KAAA,EAAAC;EAAA,IAAAF,EAEP;EADQ;IAAAG;EAAA,IAAAD,EAAc;EAGzB;IAAAE;EAAA,IAA2BnB,QAAA;EAC3B,MAAAoB,MAAA,GAAef,SAAA;EACf,MAAAgB,QAAA,GAAiBjB,WAAA;EACjB,MAAAkB,YAAA,GAAqBhB,eAAA;EACrB;IAAAiB;EAAA,IAAiCtB,kBAAA;EAEjC;IAAAuB;EAAA,IAAiBtB,cAAA;EAAA,OAGfuB,IAAA,CAAC;IAAAC,SAAA,EACW;IAAAC,OAAA,EAAAA,CAAA;MAERR,cAAA;MACA,MAAAS,OAAA,OAAAC,eAAA,CAAoCC,KAAA,CAAAC,IAAA,CAAWT,YAAA,CAAAU,OAAA,CAAoB;MAAA,IAE/DrB,EAAA;QACFiB,OAAA,CAAAK,GAAA,CAAY,eAAeC,MAAA,CAAOvB,EAAA;MAAA;MAGpC,MAAAwB,MAAA,GAAeP,OAAA,CAAAQ,QAAA,CAAgB;MAC/B,MAAAC,KAAA,GAAcF,MAAA,GAAS,IAAIA,MAAA,EAAQ,GAAG;MAEtCZ,oBAAA,OAA2BH,MAAA,CAAAkB,IAAA,CAAY,GAAGjB,QAAA,GAAWgB,KAAA,EAAO;IAAA;IAAAE,IAAA,EAEzD;IAAAC,QAAA,EAEJrC,UAAA;MAAAsC,IAAA,EAAmB7B,SAAA;MAAAY,IAAA;MAAAkB,OAAA,EAA0BxB;IAAA,CAAW;EAAA,C;CAG/D","ignoreList":[]}