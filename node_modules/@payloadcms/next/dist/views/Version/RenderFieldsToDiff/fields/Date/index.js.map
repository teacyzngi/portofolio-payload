{"version":3,"file":"index.js","names":["c","_c","FieldDiffContainer","getHTMLDiffComponents","useConfig","useTranslation","formatDate","React","baseClass","DateDiffComponent","t0","$","comparisonValue","valueFrom","field","locale","nestingLevel","versionValue","valueTo","i18n","config","t1","admin","t2","dateFormat","formattedFromDate","date","Date","pattern","formattedToDate","t3","t4","t5","label","From","To","fromHTML","toHTML","tokenizeByCharacter","_jsx","className"],"sources":["../../../../../../src/views/Version/RenderFieldsToDiff/fields/Date/index.tsx"],"sourcesContent":["'use client'\nimport type { DateFieldDiffClientComponent } from 'payload'\n\nimport {\n  FieldDiffContainer,\n  getHTMLDiffComponents,\n  useConfig,\n  useTranslation,\n} from '@payloadcms/ui'\nimport { formatDate } from '@payloadcms/ui/shared'\n\nimport './index.scss'\n\nimport React from 'react'\n\nconst baseClass = 'date-diff'\n\nexport const DateDiffComponent: DateFieldDiffClientComponent = ({\n  comparisonValue: valueFrom,\n  field,\n  locale,\n  nestingLevel,\n  versionValue: valueTo,\n}) => {\n  const { i18n } = useTranslation()\n  const {\n    config: {\n      admin: { dateFormat },\n    },\n  } = useConfig()\n\n  const formattedFromDate = valueFrom\n    ? formatDate({\n        date: typeof valueFrom === 'string' ? new Date(valueFrom) : (valueFrom as Date),\n        i18n,\n        pattern: dateFormat,\n      })\n    : ''\n\n  const formattedToDate = valueTo\n    ? formatDate({\n        date: typeof valueTo === 'string' ? new Date(valueTo) : (valueTo as Date),\n        i18n,\n        pattern: dateFormat,\n      })\n    : ''\n\n  const { From, To } = getHTMLDiffComponents({\n    fromHTML:\n      `<div class=\"${baseClass}\" data-enable-match=\"true\" data-date=\"${formattedFromDate}\"><p>` +\n      formattedFromDate +\n      '</p></div>',\n    toHTML:\n      `<div class=\"${baseClass}\" data-enable-match=\"true\" data-date=\"${formattedToDate}\"><p>` +\n      formattedToDate +\n      '</p></div>',\n    tokenizeByCharacter: false,\n  })\n\n  return (\n    <FieldDiffContainer\n      className={baseClass}\n      From={From}\n      i18n={i18n}\n      label={{\n        label: field.label,\n        locale,\n      }}\n      nestingLevel={nestingLevel}\n      To={To}\n    />\n  )\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AAGA,SACEC,kBAAkB,EAClBC,qBAAqB,EACrBC,SAAS,EACTC,cAAc,QACT;AACP,SAASC,UAAU,QAAQ;AAI3B,OAAOC,KAAA,MAAW;AAElB,MAAMC,SAAA,GAAY;AAElB,OAAO,MAAMC,iBAAA,GAAkDC,EAAA;EAAA,MAAAC,CAAA,GAAAV,EAAA;EAAC;IAAAW,eAAA,EAAAC,SAAA;IAAAC,KAAA;IAAAC,MAAA;IAAAC,YAAA;IAAAC,YAAA,EAAAC;EAAA,IAAAR,EAM/D;EACC;IAAAS;EAAA,IAAiBd,cAAA;EACjB;IAAAe,MAAA,EAAAC;EAAA,IAIIjB,SAAA;EAHM;IAAAkB,KAAA,EAAAC;EAAA,IAAAF,EAEP;EADQ;IAAAG;EAAA,IAAAD,EAAc;EAIzB,MAAAE,iBAAA,GAA0BZ,SAAA,GACtBP,UAAA;IAAAoB,IAAA,EACQ,OAAOb,SAAA,KAAc,eAAAc,IAAA,CAAoBd,SAAA,IAAcA,SAAA;IAAAM,IAAA;IAAAS,OAAA,EAEpDJ;EAAA,CACX,IACA;EAEJ,MAAAK,eAAA,GAAwBX,OAAA,GACpBZ,UAAA;IAAAoB,IAAA,EACQ,OAAOR,OAAA,KAAY,eAAAS,IAAA,CAAoBT,OAAA,IAAYA,OAAA;IAAAC,IAAA;IAAAS,OAAA,EAEhDJ;EAAA,CACX,IACA;EAIA,MAAAM,EAAA,kBAAAtB,SAAA,yCAAiEiB,iBAAA,OAAwB,GACzFA,iBAAA,GACA;EAEA,MAAAM,EAAA,kBAAAvB,SAAA,yCAAiEqB,eAAA,OAAsB,GACvFA,eAAA,GACA;EAAA,IAAAG,EAAA;EAAA,IAAArB,CAAA,QAAAG,KAAA,CAAAmB,KAAA,IAAAtB,CAAA,QAAAQ,IAAA,IAAAR,CAAA,QAAAI,MAAA,IAAAJ,CAAA,QAAAK,YAAA,IAAAL,CAAA,QAAAmB,EAAA,IAAAnB,CAAA,QAAAoB,EAAA;IARJ;MAAAG,IAAA;MAAAC;IAAA,IAAqBhC,qBAAA;MAAAiC,QAAA,EAEjBN,EAEA;MAAAO,MAAA,EAEAN,EAEA;MAAAO,mBAAA;IAAA,CAEJ;IAGEN,EAAA,GAAAO,IAAA,CAAArC,kBAAA;MAAAsC,SAAA,EAAAhC,SAAA;MAAA0B,IAAA;MAAAf,IAAA;MAAAc,KAAA;QAAAA,KAAA,EAKWnB,KAAA,CAAAmB,KAAA;QAAAlB;MAAA;MAAAC,YAAA;MAAAmB;IAAA,C;;;;;;;;;;;SALXH,E;CAYJ","ignoreList":[]}