{"version":3,"file":"index.js","names":["getTranslation","Button","ConfirmationModal","PopupList","toast","useConfig","useModal","useRouteTransition","useTranslation","requests","useRouter","formatAdminURL","React","Fragment","useCallback","useState","baseClass","modalSlug","Restore","className","collectionConfig","globalConfig","label","originalDocID","status","versionDateFormatted","versionID","config","routes","admin","adminRoute","api","apiRoute","serverURL","toggleModal","router","i18n","t","draft","setDraft","startRouteTransition","restoreMessage","versionDate","canRestoreAsDraft","versions","drafts","handleRestore","fetchURL","redirectURL","slug","path","res","post","headers","language","json","success","message","push","error","_jsxs","_jsx","filter","Boolean","join","buttonStyle","onClick","size","SubMenuPopupContent","ButtonGroup","body","confirmingLabel","heading","onConfirm"],"sources":["../../../../src/views/Version/Restore/index.tsx"],"sourcesContent":["'use client'\n\nimport type { ClientCollectionConfig, ClientGlobalConfig, SanitizedCollectionConfig } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport {\n  Button,\n  ConfirmationModal,\n  PopupList,\n  toast,\n  useConfig,\n  useModal,\n  useRouteTransition,\n  useTranslation,\n} from '@payloadcms/ui'\nimport { requests } from '@payloadcms/ui/shared'\nimport { useRouter } from 'next/navigation.js'\nimport { formatAdminURL } from 'payload/shared'\n\nimport './index.scss'\n\nimport React, { Fragment, useCallback, useState } from 'react'\n\nconst baseClass = 'restore-version'\nconst modalSlug = 'restore-version'\n\ntype Props = {\n  className?: string\n  collectionConfig?: ClientCollectionConfig\n  globalConfig?: ClientGlobalConfig\n  label: SanitizedCollectionConfig['labels']['singular']\n  originalDocID: number | string\n  status?: string\n  versionDateFormatted: string\n  versionID: string\n}\n\nexport const Restore: React.FC<Props> = ({\n  className,\n  collectionConfig,\n  globalConfig,\n  label,\n  originalDocID,\n  status,\n  versionDateFormatted,\n  versionID,\n}) => {\n  const {\n    config: {\n      routes: { admin: adminRoute, api: apiRoute },\n      serverURL,\n    },\n  } = useConfig()\n\n  const { toggleModal } = useModal()\n  const router = useRouter()\n  const { i18n, t } = useTranslation()\n  const [draft, setDraft] = useState(false)\n  const { startRouteTransition } = useRouteTransition()\n\n  const restoreMessage = t('version:aboutToRestoreGlobal', {\n    label: getTranslation(label, i18n),\n    versionDate: versionDateFormatted,\n  })\n\n  const canRestoreAsDraft = status !== 'draft' && collectionConfig?.versions?.drafts\n\n  const handleRestore = useCallback(async () => {\n    let fetchURL = `${serverURL}${apiRoute}`\n    let redirectURL: string\n\n    if (collectionConfig) {\n      fetchURL = `${fetchURL}/${collectionConfig.slug}/versions/${versionID}?draft=${draft}`\n      redirectURL = formatAdminURL({\n        adminRoute,\n        path: `/collections/${collectionConfig.slug}/${originalDocID}`,\n      })\n    }\n\n    if (globalConfig) {\n      fetchURL = `${fetchURL}/globals/${globalConfig.slug}/versions/${versionID}?draft=${draft}`\n      redirectURL = formatAdminURL({\n        adminRoute,\n        path: `/globals/${globalConfig.slug}`,\n      })\n    }\n\n    const res = await requests.post(fetchURL, {\n      headers: {\n        'Accept-Language': i18n.language,\n      },\n    })\n\n    if (res.status === 200) {\n      const json = await res.json()\n      toast.success(json.message)\n      return startRouteTransition(() => router.push(redirectURL))\n    } else {\n      toast.error(t('version:problemRestoringVersion'))\n    }\n  }, [\n    serverURL,\n    apiRoute,\n    collectionConfig,\n    globalConfig,\n    i18n.language,\n    versionID,\n    draft,\n    adminRoute,\n    originalDocID,\n    startRouteTransition,\n    router,\n    t,\n  ])\n\n  return (\n    <Fragment>\n      <div className={[baseClass, className].filter(Boolean).join(' ')}>\n        <Button\n          buttonStyle=\"primary\"\n          className={[canRestoreAsDraft && `${baseClass}__restore-as-draft-button`]\n            .filter(Boolean)\n            .join(' ')}\n          onClick={() => toggleModal(modalSlug)}\n          size=\"xsmall\"\n          SubMenuPopupContent={\n            canRestoreAsDraft\n              ? () => (\n                  <PopupList.ButtonGroup>\n                    <PopupList.Button onClick={() => [setDraft(true), toggleModal(modalSlug)]}>\n                      {t('version:restoreAsDraft')}\n                    </PopupList.Button>\n                  </PopupList.ButtonGroup>\n                )\n              : null\n          }\n        >\n          {t('version:restoreThisVersion')}\n        </Button>\n      </div>\n      <ConfirmationModal\n        body={restoreMessage}\n        confirmingLabel={t('version:restoring')}\n        heading={t('version:confirmVersionRestoration')}\n        modalSlug={modalSlug}\n        onConfirm={handleRestore}\n      />\n    </Fragment>\n  )\n}\n"],"mappings":"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","ignoreList":[]}