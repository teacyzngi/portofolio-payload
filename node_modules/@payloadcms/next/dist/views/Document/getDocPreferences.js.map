{"version":3,"file":"getDocPreferences.js","names":["sanitizeID","getDocPreferences","id","collectionSlug","globalSlug","payload","user","preferencesKey","preferencesResult","find","collection","depth","limit","where","and","key","equals","docs","value","fields"],"sources":["../../../src/views/Document/getDocPreferences.ts"],"sourcesContent":["import type { DocumentPreferences, Payload, TypedUser } from 'payload'\n\nimport { sanitizeID } from '@payloadcms/ui/shared'\n\ntype Args = {\n  collectionSlug?: string\n  globalSlug?: string\n  id?: number | string\n  payload: Payload\n  user: TypedUser\n}\n\nexport const getDocPreferences = async ({\n  id,\n  collectionSlug,\n  globalSlug,\n  payload,\n  user,\n}: Args): Promise<DocumentPreferences> => {\n  let preferencesKey\n\n  if (collectionSlug && id) {\n    preferencesKey = `collection-${collectionSlug}-${id}`\n  }\n\n  if (globalSlug) {\n    preferencesKey = `global-${globalSlug}`\n  }\n\n  if (preferencesKey) {\n    const preferencesResult = (await payload.find({\n      collection: 'payload-preferences',\n      depth: 0,\n      limit: 1,\n      where: {\n        and: [\n          {\n            key: {\n              equals: preferencesKey,\n            },\n          },\n          {\n            'user.relationTo': {\n              equals: user.collection,\n            },\n          },\n          {\n            'user.value': {\n              equals: sanitizeID(user.id),\n            },\n          },\n        ],\n      },\n    })) as unknown as { docs: { value: DocumentPreferences }[] }\n\n    if (preferencesResult?.docs?.[0]?.value) {\n      return preferencesResult.docs[0].value\n    }\n  }\n\n  return { fields: {} }\n}\n"],"mappings":"AAEA,SAASA,UAAU,QAAQ;AAU3B,OAAO,MAAMC,iBAAA,GAAoB,MAAAA,CAAO;EACtCC,EAAE;EACFC,cAAc;EACdC,UAAU;EACVC,OAAO;EACPC;AAAI,CACC;EACL,IAAIC,cAAA;EAEJ,IAAIJ,cAAA,IAAkBD,EAAA,EAAI;IACxBK,cAAA,GAAiB,cAAcJ,cAAA,IAAkBD,EAAA,EAAI;EACvD;EAEA,IAAIE,UAAA,EAAY;IACdG,cAAA,GAAiB,UAAUH,UAAA,EAAY;EACzC;EAEA,IAAIG,cAAA,EAAgB;IAClB,MAAMC,iBAAA,GAAqB,MAAMH,OAAA,CAAQI,IAAI,CAAC;MAC5CC,UAAA,EAAY;MACZC,KAAA,EAAO;MACPC,KAAA,EAAO;MACPC,KAAA,EAAO;QACLC,GAAA,EAAK,CACH;UACEC,GAAA,EAAK;YACHC,MAAA,EAAQT;UACV;QACF,GACA;UACE,mBAAmB;YACjBS,MAAA,EAAQV,IAAA,CAAKI;UACf;QACF,GACA;UACE,cAAc;YACZM,MAAA,EAAQhB,UAAA,CAAWM,IAAA,CAAKJ,EAAE;UAC5B;QACF;MAEJ;IACF;IAEA,IAAIM,iBAAA,EAAmBS,IAAA,GAAO,EAAE,EAAEC,KAAA,EAAO;MACvC,OAAOV,iBAAA,CAAkBS,IAAI,CAAC,EAAE,CAACC,KAAK;IACxC;EACF;EAEA,OAAO;IAAEC,MAAA,EAAQ,CAAC;EAAE;AACtB","ignoreList":[]}