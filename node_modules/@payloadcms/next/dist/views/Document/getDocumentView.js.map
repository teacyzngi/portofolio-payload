{"version":3,"file":"getDocumentView.js","names":["APIView","DefaultAPIView","EditView","DefaultEditView","UnauthorizedViewWithGutter","VersionView","DefaultVersionView","VersionsView","DefaultVersionsView","getCustomDocumentViewByKey","getCustomViewByRoute","getDocumentView","collectionConfig","config","docPermissions","globalConfig","routeSegments","View","viewKey","routes","admin","adminRoute","views","components","read","Error","collectionEntity","collectionSlug","segment3","segment4","segment5","remainingSegments","length","create","baseRoute","filter","Boolean","join","currentRoute","Component","CustomViewComponent","customViewKey","hideAPIURL","readVersions","isTrashedVersionView","globalEntity","globalSlug"],"sources":["../../../src/views/Document/getDocumentView.tsx"],"sourcesContent":["import type {\n  PayloadComponent,\n  SanitizedCollectionConfig,\n  SanitizedCollectionPermission,\n  SanitizedConfig,\n  SanitizedGlobalConfig,\n  SanitizedGlobalPermission,\n} from 'payload'\nimport type React from 'react'\n\nimport type { ViewToRender } from './index.js'\n\nimport { APIView as DefaultAPIView } from '../API/index.js'\nimport { EditView as DefaultEditView } from '../Edit/index.js'\nimport { UnauthorizedViewWithGutter } from '../Unauthorized/index.js'\nimport { VersionView as DefaultVersionView } from '../Version/index.js'\nimport { VersionsView as DefaultVersionsView } from '../Versions/index.js'\nimport { getCustomDocumentViewByKey } from './getCustomDocumentViewByKey.js'\nimport { getCustomViewByRoute } from './getCustomViewByRoute.js'\n\nexport type ViewFromConfig<TProps extends object> = {\n  Component?: React.FC<TProps>\n  ComponentConfig?: PayloadComponent<TProps>\n}\n\nexport const getDocumentView = ({\n  collectionConfig,\n  config,\n  docPermissions,\n  globalConfig,\n  routeSegments,\n}: {\n  collectionConfig?: SanitizedCollectionConfig\n  config: SanitizedConfig\n  docPermissions: SanitizedCollectionPermission | SanitizedGlobalPermission\n  globalConfig?: SanitizedGlobalConfig\n  routeSegments: string[]\n}): {\n  View: ViewToRender\n  viewKey: string\n} | null => {\n  // Conditionally import and lazy load the default view\n  let View: ViewToRender = null\n  let viewKey: string\n\n  const {\n    routes: { admin: adminRoute },\n  } = config\n\n  const views =\n    (collectionConfig && collectionConfig?.admin?.components?.views) ||\n    (globalConfig && globalConfig?.admin?.components?.views)\n\n  if (!docPermissions?.read) {\n    throw new Error('not-found')\n  }\n\n  if (collectionConfig) {\n    const [collectionEntity, collectionSlug, segment3, segment4, segment5, ...remainingSegments] =\n      routeSegments\n\n    // --> /collections/:collectionSlug/:id\n    // --> /collections/:collectionSlug/create\n    switch (routeSegments.length) {\n      case 3: {\n        switch (segment3) {\n          // --> /collections/:collectionSlug/create\n          case 'create': {\n            if ('create' in docPermissions && docPermissions.create) {\n              View = getCustomDocumentViewByKey(views, 'default') || DefaultEditView\n            } else {\n              View = UnauthorizedViewWithGutter\n            }\n            break\n          }\n\n          // --> /collections/:collectionSlug/:id\n          default: {\n            const baseRoute = [\n              adminRoute !== '/' && adminRoute,\n              'collections',\n              collectionSlug,\n              segment3,\n            ]\n              .filter(Boolean)\n              .join('/')\n\n            const currentRoute = [baseRoute, segment4, segment5, ...remainingSegments]\n              .filter(Boolean)\n              .join('/')\n\n            const { Component: CustomViewComponent, viewKey: customViewKey } = getCustomViewByRoute(\n              {\n                baseRoute,\n                currentRoute,\n                views,\n              },\n            )\n\n            if (customViewKey) {\n              viewKey = customViewKey\n              View = CustomViewComponent\n            } else {\n              View = getCustomDocumentViewByKey(views, 'default') || DefaultEditView\n            }\n\n            break\n          }\n        }\n        break\n      }\n\n      // --> /collections/:collectionSlug/:id/api\n      // --> /collections/:collectionSlug/:id/versions\n      // --> /collections/:collectionSlug/:id/<custom-segment>\n      // --> /collections/:collectionSlug/trash/:id\n      case 4: {\n        // --> /collections/:collectionSlug/trash/:id\n        if (segment3 === 'trash' && segment4) {\n          View = getCustomDocumentViewByKey(views, 'default') || DefaultEditView\n          break\n        }\n        switch (segment4) {\n          // --> /collections/:collectionSlug/:id/api\n          case 'api': {\n            if (collectionConfig?.admin?.hideAPIURL !== true) {\n              View = getCustomDocumentViewByKey(views, 'api') || DefaultAPIView\n            }\n            break\n          }\n\n          case 'versions': {\n            // --> /collections/:collectionSlug/:id/versions\n            if (docPermissions?.readVersions) {\n              View = getCustomDocumentViewByKey(views, 'versions') || DefaultVersionsView\n            } else {\n              View = UnauthorizedViewWithGutter\n            }\n            break\n          }\n\n          // --> /collections/:collectionSlug/:id/<custom-segment>\n          default: {\n            const baseRoute = [\n              adminRoute !== '/' && adminRoute,\n              'collections',\n              collectionSlug,\n              segment3,\n            ]\n              .filter(Boolean)\n              .join('/')\n\n            const currentRoute = [baseRoute, segment4, segment5, ...remainingSegments]\n              .filter(Boolean)\n              .join('/')\n\n            const { Component: CustomViewComponent, viewKey: customViewKey } = getCustomViewByRoute(\n              {\n                baseRoute,\n                currentRoute,\n                views,\n              },\n            )\n\n            if (customViewKey) {\n              viewKey = customViewKey\n              View = CustomViewComponent\n            }\n\n            break\n          }\n        }\n        break\n      }\n\n      // --> /collections/:collectionSlug/trash/:id/api\n      // --> /collections/:collectionSlug/trash/:id/versions\n      // --> /collections/:collectionSlug/trash/:id/<custom-segment>\n      // --> /collections/:collectionSlug/:id/versions/:version\n      case 5: {\n        // --> /collections/:slug/trash/:id/api\n        if (segment3 === 'trash') {\n          switch (segment5) {\n            case 'api': {\n              if (collectionConfig?.admin?.hideAPIURL !== true) {\n                View = getCustomDocumentViewByKey(views, 'api') || DefaultAPIView\n              }\n              break\n            }\n            // --> /collections/:slug/trash/:id/versions\n            case 'versions': {\n              if (docPermissions?.readVersions) {\n                View = getCustomDocumentViewByKey(views, 'versions') || DefaultVersionsView\n              } else {\n                View = UnauthorizedViewWithGutter\n              }\n              break\n            }\n\n            default: {\n              View = getCustomDocumentViewByKey(views, 'default') || DefaultEditView\n              break\n            }\n          }\n          // --> /collections/:collectionSlug/:id/versions/:version\n        } else if (segment4 === 'versions') {\n          if (docPermissions?.readVersions) {\n            View = getCustomDocumentViewByKey(views, 'version') || DefaultVersionView\n          } else {\n            View = UnauthorizedViewWithGutter\n          }\n        } else {\n          // --> /collections/:collectionSlug/:id/<custom>/<custom>\n          const baseRoute = [\n            adminRoute !== '/' && adminRoute,\n            collectionEntity,\n            collectionSlug,\n            segment3,\n          ]\n            .filter(Boolean)\n            .join('/')\n\n          const currentRoute = [baseRoute, segment4, segment5, ...remainingSegments]\n            .filter(Boolean)\n            .join('/')\n\n          const { Component: CustomViewComponent, viewKey: customViewKey } = getCustomViewByRoute({\n            baseRoute,\n            currentRoute,\n            views,\n          })\n\n          if (customViewKey) {\n            viewKey = customViewKey\n            View = CustomViewComponent\n          }\n        }\n\n        break\n      }\n\n      // --> /collections/:collectionSlug/trash/:id/versions/:version\n      // --> /collections/:collectionSlug/:id/<custom>/<custom>/<custom...>\n      default: {\n        // --> /collections/:collectionSlug/trash/:id/versions/:version\n        const isTrashedVersionView = segment3 === 'trash' && segment5 === 'versions'\n\n        if (isTrashedVersionView) {\n          if (docPermissions?.readVersions) {\n            View = getCustomDocumentViewByKey(views, 'version') || DefaultVersionView\n          } else {\n            View = UnauthorizedViewWithGutter\n          }\n        } else {\n          // --> /collections/:collectionSlug/:id/<custom>/<custom>/<custom...>\n          const baseRoute = [\n            adminRoute !== '/' && adminRoute,\n            collectionEntity,\n            collectionSlug,\n            segment3,\n          ]\n            .filter(Boolean)\n            .join('/')\n\n          const currentRoute = [baseRoute, segment4, segment5, ...remainingSegments]\n            .filter(Boolean)\n            .join('/')\n\n          const { Component: CustomViewComponent, viewKey: customViewKey } = getCustomViewByRoute({\n            baseRoute,\n            currentRoute,\n            views,\n          })\n\n          if (customViewKey) {\n            viewKey = customViewKey\n            View = CustomViewComponent\n          }\n        }\n\n        break\n      }\n    }\n  }\n\n  if (globalConfig) {\n    const [globalEntity, globalSlug, segment3, ...remainingSegments] = routeSegments\n\n    switch (routeSegments.length) {\n      // --> /globals/:globalSlug\n      case 2: {\n        View = getCustomDocumentViewByKey(views, 'default') || DefaultEditView\n        break\n      }\n\n      case 3: {\n        // --> /globals/:globalSlug/api\n        // --> /globals/:globalSlug/versions\n        // --> /globals/:globalSlug/<custom-segment>\n        switch (segment3) {\n          // --> /globals/:globalSlug/api\n          case 'api': {\n            if (globalConfig?.admin?.hideAPIURL !== true) {\n              View = getCustomDocumentViewByKey(views, 'api') || DefaultAPIView\n            }\n\n            break\n          }\n\n          case 'versions': {\n            // --> /globals/:globalSlug/versions\n            if (docPermissions?.readVersions) {\n              View = getCustomDocumentViewByKey(views, 'versions') || DefaultVersionsView\n            } else {\n              View = UnauthorizedViewWithGutter\n            }\n            break\n          }\n\n          // --> /globals/:globalSlug/<custom-segment>\n          default: {\n            if (docPermissions?.read) {\n              const baseRoute = [adminRoute, globalEntity, globalSlug, segment3]\n                .filter(Boolean)\n                .join('/')\n\n              const currentRoute = [baseRoute, segment3, ...remainingSegments]\n                .filter(Boolean)\n                .join('/')\n\n              const { Component: CustomViewComponent, viewKey: customViewKey } =\n                getCustomViewByRoute({\n                  baseRoute,\n                  currentRoute,\n                  views,\n                })\n\n              if (customViewKey) {\n                viewKey = customViewKey\n\n                View = CustomViewComponent\n              } else {\n                View = DefaultEditView\n              }\n            } else {\n              View = UnauthorizedViewWithGutter\n            }\n            break\n          }\n        }\n        break\n      }\n\n      // --> /globals/:globalSlug/versions/:version\n      // --> /globals/:globalSlug/<custom-segment>/<custom-segment>\n      default: {\n        // --> /globals/:globalSlug/versions/:version\n        if (segment3 === 'versions') {\n          if (docPermissions?.readVersions) {\n            View = getCustomDocumentViewByKey(views, 'version') || DefaultVersionView\n          } else {\n            View = UnauthorizedViewWithGutter\n          }\n        } else {\n          // --> /globals/:globalSlug/<custom-segment>/<custom-segment>\n          const baseRoute = [adminRoute !== '/' && adminRoute, 'globals', globalSlug]\n            .filter(Boolean)\n            .join('/')\n\n          const currentRoute = [baseRoute, segment3, ...remainingSegments].filter(Boolean).join('/')\n\n          const { Component: CustomViewComponent, viewKey: customViewKey } = getCustomViewByRoute({\n            baseRoute,\n            currentRoute,\n            views,\n          })\n\n          if (customViewKey) {\n            viewKey = customViewKey\n            View = CustomViewComponent\n          }\n        }\n\n        break\n      }\n    }\n  }\n\n  return {\n    View,\n    viewKey,\n  }\n}\n"],"mappings":"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","ignoreList":[]}