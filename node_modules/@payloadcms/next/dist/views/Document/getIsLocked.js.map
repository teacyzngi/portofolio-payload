{"version":3,"file":"getIsLocked.js","names":["sanitizeID","extractID","getIsLocked","id","collectionConfig","globalConfig","isEditing","req","entityConfig","entityHasLockingEnabled","lockDocuments","undefined","isLocked","where","lockDurationDefault","lockDuration","duration","lockDurationInMilliseconds","now","Date","getTime","and","globalSlug","equals","slug","updatedAt","greater_than","docs","payload","find","collection","depth","overrideAccess","length","currentEditor","user","value","lastUpdateTime"],"sources":["../../../src/views/Document/getIsLocked.ts"],"sourcesContent":["import type {\n  PayloadRequest,\n  SanitizedCollectionConfig,\n  SanitizedGlobalConfig,\n  TypedUser,\n  Where,\n} from 'payload'\n\nimport { sanitizeID } from '@payloadcms/ui/shared'\nimport { extractID } from 'payload/shared'\n\ntype Args = {\n  collectionConfig?: SanitizedCollectionConfig\n  globalConfig?: SanitizedGlobalConfig\n  id?: number | string\n  isEditing: boolean\n  req: PayloadRequest\n}\n\ntype Result = Promise<{\n  currentEditor?: TypedUser\n  isLocked: boolean\n  lastUpdateTime?: number\n}>\n\nexport const getIsLocked = async ({\n  id,\n  collectionConfig,\n  globalConfig,\n  isEditing,\n  req,\n}: Args): Result => {\n  const entityConfig = collectionConfig || globalConfig\n\n  const entityHasLockingEnabled =\n    entityConfig?.lockDocuments !== undefined ? entityConfig?.lockDocuments : true\n\n  if (!entityHasLockingEnabled || !isEditing) {\n    return {\n      isLocked: false,\n    }\n  }\n\n  const where: Where = {}\n\n  const lockDurationDefault = 300 // Default 5 minutes in seconds\n  const lockDuration =\n    typeof entityConfig.lockDocuments === 'object'\n      ? entityConfig.lockDocuments.duration\n      : lockDurationDefault\n  const lockDurationInMilliseconds = lockDuration * 1000\n\n  const now = new Date().getTime()\n\n  if (globalConfig) {\n    where.and = [\n      {\n        globalSlug: {\n          equals: globalConfig.slug,\n        },\n      },\n      {\n        updatedAt: {\n          greater_than: new Date(now - lockDurationInMilliseconds),\n        },\n      },\n    ]\n  } else {\n    where.and = [\n      {\n        'document.value': {\n          equals: sanitizeID(id),\n        },\n      },\n      {\n        'document.relationTo': {\n          equals: collectionConfig.slug,\n        },\n      },\n      {\n        updatedAt: {\n          greater_than: new Date(now - lockDurationInMilliseconds),\n        },\n      },\n    ]\n  }\n\n  const { docs } = await req.payload.find({\n    collection: 'payload-locked-documents',\n    depth: 1,\n    overrideAccess: false,\n    req,\n    where,\n  })\n\n  if (docs.length > 0) {\n    const currentEditor = docs[0].user?.value\n    const lastUpdateTime = new Date(docs[0].updatedAt).getTime()\n\n    if (extractID(currentEditor) !== req.user.id) {\n      return {\n        currentEditor,\n        isLocked: true,\n        lastUpdateTime,\n      }\n    }\n  }\n\n  return {\n    isLocked: false,\n  }\n}\n"],"mappings":"AAQA,SAASA,UAAU,QAAQ;AAC3B,SAASC,SAAS,QAAQ;AAgB1B,OAAO,MAAMC,WAAA,GAAc,MAAAA,CAAO;EAChCC,EAAE;EACFC,gBAAgB;EAChBC,YAAY;EACZC,SAAS;EACTC;AAAG,CACE;EACL,MAAMC,YAAA,GAAeJ,gBAAA,IAAoBC,YAAA;EAEzC,MAAMI,uBAAA,GACJD,YAAA,EAAcE,aAAA,KAAkBC,SAAA,GAAYH,YAAA,EAAcE,aAAA,GAAgB;EAE5E,IAAI,CAACD,uBAAA,IAA2B,CAACH,SAAA,EAAW;IAC1C,OAAO;MACLM,QAAA,EAAU;IACZ;EACF;EAEA,MAAMC,KAAA,GAAe,CAAC;EAEtB,MAAMC,mBAAA,GAAsB,IAAI;EAAA;EAChC,MAAMC,YAAA,GACJ,OAAOP,YAAA,CAAaE,aAAa,KAAK,WAClCF,YAAA,CAAaE,aAAa,CAACM,QAAQ,GACnCF,mBAAA;EACN,MAAMG,0BAAA,GAA6BF,YAAA,GAAe;EAElD,MAAMG,GAAA,GAAM,IAAIC,IAAA,GAAOC,OAAO;EAE9B,IAAIf,YAAA,EAAc;IAChBQ,KAAA,CAAMQ,GAAG,GAAG,CACV;MACEC,UAAA,EAAY;QACVC,MAAA,EAAQlB,YAAA,CAAamB;MACvB;IACF,GACA;MACEC,SAAA,EAAW;QACTC,YAAA,EAAc,IAAIP,IAAA,CAAKD,GAAA,GAAMD,0BAAA;MAC/B;IACF,EACD;EACH,OAAO;IACLJ,KAAA,CAAMQ,GAAG,GAAG,CACV;MACE,kBAAkB;QAChBE,MAAA,EAAQvB,UAAA,CAAWG,EAAA;MACrB;IACF,GACA;MACE,uBAAuB;QACrBoB,MAAA,EAAQnB,gBAAA,CAAiBoB;MAC3B;IACF,GACA;MACEC,SAAA,EAAW;QACTC,YAAA,EAAc,IAAIP,IAAA,CAAKD,GAAA,GAAMD,0BAAA;MAC/B;IACF,EACD;EACH;EAEA,MAAM;IAAEU;EAAI,CAAE,GAAG,MAAMpB,GAAA,CAAIqB,OAAO,CAACC,IAAI,CAAC;IACtCC,UAAA,EAAY;IACZC,KAAA,EAAO;IACPC,cAAA,EAAgB;IAChBzB,GAAA;IACAM;EACF;EAEA,IAAIc,IAAA,CAAKM,MAAM,GAAG,GAAG;IACnB,MAAMC,aAAA,GAAgBP,IAAI,CAAC,EAAE,CAACQ,IAAI,EAAEC,KAAA;IACpC,MAAMC,cAAA,GAAiB,IAAIlB,IAAA,CAAKQ,IAAI,CAAC,EAAE,CAACF,SAAS,EAAEL,OAAO;IAE1D,IAAInB,SAAA,CAAUiC,aAAA,MAAmB3B,GAAA,CAAI4B,IAAI,CAAChC,EAAE,EAAE;MAC5C,OAAO;QACL+B,aAAA;QACAtB,QAAA,EAAU;QACVyB;MACF;IACF;EACF;EAEA,OAAO;IACLzB,QAAA,EAAU;EACZ;AACF","ignoreList":[]}