{"version":3,"file":"index.js","names":["Link","useConfig","useTranslation","formatDate","formatAdminURL","React","CreatedAtCell","t0","collectionSlug","docID","globalSlug","isTrashed","rowData","t1","id","updatedAt","undefined","config","t2","admin","t3","routes","t4","dateFormat","adminRoute","i18n","trashedDocPrefix","to","_jsx","href","prefetch","children","date","pattern"],"sources":["../../../../../src/views/Versions/cells/CreatedAt/index.tsx"],"sourcesContent":["'use client'\nimport { Link, useConfig, useTranslation } from '@payloadcms/ui'\nimport { formatDate } from '@payloadcms/ui/shared'\nimport { formatAdminURL } from 'payload/shared'\nimport React from 'react'\n\nexport type CreatedAtCellProps = {\n  collectionSlug?: string\n  docID?: number | string\n  globalSlug?: string\n  isTrashed?: boolean\n  rowData?: {\n    id: number | string\n    updatedAt: Date | number | string\n  }\n}\n\nexport const CreatedAtCell: React.FC<CreatedAtCellProps> = ({\n  collectionSlug,\n  docID,\n  globalSlug,\n  isTrashed,\n  rowData: { id, updatedAt } = {},\n}) => {\n  const {\n    config: {\n      admin: { dateFormat },\n      routes: { admin: adminRoute },\n    },\n  } = useConfig()\n\n  const { i18n } = useTranslation()\n\n  const trashedDocPrefix = isTrashed ? 'trash/' : ''\n\n  let to: string\n\n  if (collectionSlug) {\n    to = formatAdminURL({\n      adminRoute,\n      path: `/collections/${collectionSlug}/${trashedDocPrefix}${docID}/versions/${id}`,\n    })\n  }\n\n  if (globalSlug) {\n    to = formatAdminURL({\n      adminRoute,\n      path: `/globals/${globalSlug}/versions/${id}`,\n    })\n  }\n\n  return (\n    <Link href={to} prefetch={false}>\n      {formatDate({ date: updatedAt, i18n, pattern: dateFormat })}\n    </Link>\n  )\n}\n"],"mappings":"AAAA;;;AACA,SAASA,IAAI,EAAEC,SAAS,EAAEC,cAAc,QAAQ;AAChD,SAASC,UAAU,QAAQ;AAC3B,SAASC,cAAc,QAAQ;AAC/B,OAAOC,KAAA,MAAW;AAalB,OAAO,MAAMC,aAAA,GAA8CC,EAAA;EAAC;IAAAC,cAAA;IAAAC,KAAA;IAAAC,UAAA;IAAAC,SAAA;IAAAC,OAAA,EAAAC;EAAA,IAAAN,EAM3D;EADU;IAAAO,EAAA;IAAAC;EAAA,IAAAF,EAAsB,KAAAG,SAAA,QAAtBH,EAAsB;EAE/B;IAAAI,MAAA,EAAAC;EAAA,IAKIjB,SAAA;EAJM;IAAAkB,KAAA,EAAAC,EAAA;IAAAC,MAAA,EAAAC;EAAA,IAAAJ,EAGP;EAFQ;IAAAK;EAAA,IAAAH,EAAc;EACb;IAAAD,KAAA,EAAAK;EAAA,IAAAF,EAAqB;EAIjC;IAAAG;EAAA,IAAiBvB,cAAA;EAEjB,MAAAwB,gBAAA,GAAyBf,SAAA,GAAY,WAAW;EAE5CgB,GAAA,CAAAA,EAAA;EAAA,IAEAnB,cAAA;IACFmB,EAAA,CAAAA,CAAA,CAAKA;MAAAA;MAAAA,KAAA,CAEGA,gBAAgBnB,cAAA,IAAkBkB,gBAAA,GAAmBjB,KAAA,aAAkBK,EAAA;IAAI,CACnF;EAHA;EAAA,IAMEJ,UAAA;IACFiB,EAAA,CAAAA,CAAA,CAAKA;MAAAA;MAAAA,KAAA,CAEGA,YAAYjB,UAAA,aAAuBI,EAAA;IAAI,CAC/C;EAHA;EAAA,OAOAc,IAAA,CAAA5B,IAAA;IAAA6B,IAAA,EAAYF,EAAA;IAAAG,QAAA;IAAAC,QAAA,EACT5B,UAAA;MAAA6B,IAAA,EAAmBjB,SAAA;MAAAU,IAAA;MAAAQ,OAAA,EAA0BV;IAAA,CAAW;EAAA,C;CAG/D","ignoreList":[]}