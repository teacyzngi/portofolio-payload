{"version":3,"file":"metadata.js","names":["getTranslation","generateMetadata","generateCollectionFolderMetadata","args","collectionConfig","config","i18n","title","description","keywords","labels","singular","t","admin","meta","serverURL"],"sources":["../../../src/views/CollectionFolders/metadata.ts"],"sourcesContent":["import type { Metadata } from 'next'\nimport type { SanitizedCollectionConfig } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\n\nimport type { GenerateViewMetadata } from '../Root/index.js'\n\nimport { generateMetadata } from '../../utilities/meta.js'\n\nexport const generateCollectionFolderMetadata = async (\n  args: {\n    collectionConfig: SanitizedCollectionConfig\n  } & Parameters<GenerateViewMetadata>[0],\n): Promise<Metadata> => {\n  const { collectionConfig, config, i18n } = args\n\n  let title: string = ''\n  const description: string = ''\n  const keywords: string = ''\n\n  if (collectionConfig) {\n    title = getTranslation(collectionConfig.labels.singular, i18n)\n  }\n\n  title = `${title ? `${title} ` : title}${i18n.t('folder:folders')}`\n\n  return generateMetadata({\n    ...(config.admin.meta || {}),\n    description,\n    keywords,\n    serverURL: config.serverURL,\n    title,\n    ...(collectionConfig?.admin?.meta || {}),\n  })\n}\n"],"mappings":"AAGA,SAASA,cAAc,QAAQ;AAI/B,SAASC,gBAAgB,QAAQ;AAEjC,OAAO,MAAMC,gCAAA,GAAmC,MAC9CC,IAAA;EAIA,MAAM;IAAEC,gBAAgB;IAAEC,MAAM;IAAEC;EAAI,CAAE,GAAGH,IAAA;EAE3C,IAAII,KAAA,GAAgB;EACpB,MAAMC,WAAA,GAAsB;EAC5B,MAAMC,QAAA,GAAmB;EAEzB,IAAIL,gBAAA,EAAkB;IACpBG,KAAA,GAAQP,cAAA,CAAeI,gBAAA,CAAiBM,MAAM,CAACC,QAAQ,EAAEL,IAAA;EAC3D;EAEAC,KAAA,GAAQ,GAAGA,KAAA,GAAQ,GAAGA,KAAA,GAAQ,GAAGA,KAAA,GAAQD,IAAA,CAAKM,CAAC,CAAC,mBAAmB;EAEnE,OAAOX,gBAAA,CAAiB;IACtB,IAAII,MAAA,CAAOQ,KAAK,CAACC,IAAI,IAAI,CAAC,CAAC;IAC3BN,WAAA;IACAC,QAAA;IACAM,SAAA,EAAWV,MAAA,CAAOU,SAAS;IAC3BR,KAAA;IACA,IAAIH,gBAAA,EAAkBS,KAAA,EAAOC,IAAA,IAAQ,CAAC,CAAC;EACzC;AACF","ignoreList":[]}