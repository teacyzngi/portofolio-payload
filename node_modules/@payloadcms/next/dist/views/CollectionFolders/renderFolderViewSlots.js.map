{"version":3,"file":"renderFolderViewSlots.js","names":["RenderServerComponent","renderFolderViewSlots","clientProps","collectionConfig","description","payload","serverProps","result","admin","components","afterList","AfterFolderList","Component","importMap","listMenuItems","Array","isArray","afterListTable","AfterFolderListTable","beforeList","BeforeFolderList","beforeListTable","BeforeFolderListTable","Description","collectionSlug","slug"],"sources":["../../../src/views/CollectionFolders/renderFolderViewSlots.tsx"],"sourcesContent":["import type {\n  AfterFolderListClientProps,\n  AfterFolderListTableClientProps,\n  AfterFolderListTableServerPropsOnly,\n  BeforeFolderListClientProps,\n  BeforeFolderListServerPropsOnly,\n  BeforeFolderListTableClientProps,\n  BeforeFolderListTableServerPropsOnly,\n  FolderListViewServerPropsOnly,\n  FolderListViewSlots,\n  ListViewSlotSharedClientProps,\n  Payload,\n  SanitizedCollectionConfig,\n  StaticDescription,\n  ViewDescriptionClientProps,\n  ViewDescriptionServerPropsOnly,\n} from 'payload'\n\nimport { RenderServerComponent } from '@payloadcms/ui/elements/RenderServerComponent'\n\ntype Args = {\n  clientProps: ListViewSlotSharedClientProps\n  collectionConfig: SanitizedCollectionConfig\n  description?: StaticDescription\n  payload: Payload\n  serverProps: FolderListViewServerPropsOnly\n}\n\nexport const renderFolderViewSlots = ({\n  clientProps,\n  collectionConfig,\n  description,\n  payload,\n  serverProps,\n}: Args): FolderListViewSlots => {\n  const result: FolderListViewSlots = {} as FolderListViewSlots\n\n  if (collectionConfig.admin.components?.afterList) {\n    result.AfterFolderList = RenderServerComponent({\n      clientProps: clientProps satisfies AfterFolderListClientProps,\n      Component: collectionConfig.admin.components.afterList,\n      importMap: payload.importMap,\n      serverProps: serverProps satisfies AfterFolderListTableServerPropsOnly,\n    })\n  }\n\n  const listMenuItems = collectionConfig.admin.components?.listMenuItems\n  if (Array.isArray(listMenuItems)) {\n    result.listMenuItems = [\n      RenderServerComponent({\n        clientProps,\n        Component: listMenuItems,\n        importMap: payload.importMap,\n        serverProps,\n      }),\n    ]\n  }\n\n  if (collectionConfig.admin.components?.afterListTable) {\n    result.AfterFolderListTable = RenderServerComponent({\n      clientProps: clientProps satisfies AfterFolderListTableClientProps,\n      Component: collectionConfig.admin.components.afterListTable,\n      importMap: payload.importMap,\n      serverProps: serverProps satisfies AfterFolderListTableServerPropsOnly,\n    })\n  }\n\n  if (collectionConfig.admin.components?.beforeList) {\n    result.BeforeFolderList = RenderServerComponent({\n      clientProps: clientProps satisfies BeforeFolderListClientProps,\n      Component: collectionConfig.admin.components.beforeList,\n      importMap: payload.importMap,\n      serverProps: serverProps satisfies BeforeFolderListServerPropsOnly,\n    })\n  }\n\n  if (collectionConfig.admin.components?.beforeListTable) {\n    result.BeforeFolderListTable = RenderServerComponent({\n      clientProps: clientProps satisfies BeforeFolderListTableClientProps,\n      Component: collectionConfig.admin.components.beforeListTable,\n      importMap: payload.importMap,\n      serverProps: serverProps satisfies BeforeFolderListTableServerPropsOnly,\n    })\n  }\n\n  if (collectionConfig.admin.components?.Description) {\n    result.Description = RenderServerComponent({\n      clientProps: {\n        collectionSlug: collectionConfig.slug,\n        description,\n      } satisfies ViewDescriptionClientProps,\n      Component: collectionConfig.admin.components.Description,\n      importMap: payload.importMap,\n      serverProps: serverProps satisfies ViewDescriptionServerPropsOnly,\n    })\n  }\n\n  return result\n}\n"],"mappings":"AAkBA,SAASA,qBAAqB,QAAQ;AAUtC,OAAO,MAAMC,qBAAA,GAAwBA,CAAC;EACpCC,WAAW;EACXC,gBAAgB;EAChBC,WAAW;EACXC,OAAO;EACPC;AAAW,CACN;EACL,MAAMC,MAAA,GAA8B,CAAC;EAErC,IAAIJ,gBAAA,CAAiBK,KAAK,CAACC,UAAU,EAAEC,SAAA,EAAW;IAChDH,MAAA,CAAOI,eAAe,GAAGX,qBAAA,CAAsB;MAC7CE,WAAA,EAAaA,WAAA;MACbU,SAAA,EAAWT,gBAAA,CAAiBK,KAAK,CAACC,UAAU,CAACC,SAAS;MACtDG,SAAA,EAAWR,OAAA,CAAQQ,SAAS;MAC5BP,WAAA,EAAaA;IACf;EACF;EAEA,MAAMQ,aAAA,GAAgBX,gBAAA,CAAiBK,KAAK,CAACC,UAAU,EAAEK,aAAA;EACzD,IAAIC,KAAA,CAAMC,OAAO,CAACF,aAAA,GAAgB;IAChCP,MAAA,CAAOO,aAAa,GAAG,CACrBd,qBAAA,CAAsB;MACpBE,WAAA;MACAU,SAAA,EAAWE,aAAA;MACXD,SAAA,EAAWR,OAAA,CAAQQ,SAAS;MAC5BP;IACF,GACD;EACH;EAEA,IAAIH,gBAAA,CAAiBK,KAAK,CAACC,UAAU,EAAEQ,cAAA,EAAgB;IACrDV,MAAA,CAAOW,oBAAoB,GAAGlB,qBAAA,CAAsB;MAClDE,WAAA,EAAaA,WAAA;MACbU,SAAA,EAAWT,gBAAA,CAAiBK,KAAK,CAACC,UAAU,CAACQ,cAAc;MAC3DJ,SAAA,EAAWR,OAAA,CAAQQ,SAAS;MAC5BP,WAAA,EAAaA;IACf;EACF;EAEA,IAAIH,gBAAA,CAAiBK,KAAK,CAACC,UAAU,EAAEU,UAAA,EAAY;IACjDZ,MAAA,CAAOa,gBAAgB,GAAGpB,qBAAA,CAAsB;MAC9CE,WAAA,EAAaA,WAAA;MACbU,SAAA,EAAWT,gBAAA,CAAiBK,KAAK,CAACC,UAAU,CAACU,UAAU;MACvDN,SAAA,EAAWR,OAAA,CAAQQ,SAAS;MAC5BP,WAAA,EAAaA;IACf;EACF;EAEA,IAAIH,gBAAA,CAAiBK,KAAK,CAACC,UAAU,EAAEY,eAAA,EAAiB;IACtDd,MAAA,CAAOe,qBAAqB,GAAGtB,qBAAA,CAAsB;MACnDE,WAAA,EAAaA,WAAA;MACbU,SAAA,EAAWT,gBAAA,CAAiBK,KAAK,CAACC,UAAU,CAACY,eAAe;MAC5DR,SAAA,EAAWR,OAAA,CAAQQ,SAAS;MAC5BP,WAAA,EAAaA;IACf;EACF;EAEA,IAAIH,gBAAA,CAAiBK,KAAK,CAACC,UAAU,EAAEc,WAAA,EAAa;IAClDhB,MAAA,CAAOgB,WAAW,GAAGvB,qBAAA,CAAsB;MACzCE,WAAA,EAAa;QACXsB,cAAA,EAAgBrB,gBAAA,CAAiBsB,IAAI;QACrCrB;MACF;MACAQ,SAAA,EAAWT,gBAAA,CAAiBK,KAAK,CAACC,UAAU,CAACc,WAAW;MACxDV,SAAA,EAAWR,OAAA,CAAQQ,SAAS;MAC5BP,WAAA,EAAaA;IACf;EACF;EAEA,OAAOC,MAAA;AACT","ignoreList":[]}