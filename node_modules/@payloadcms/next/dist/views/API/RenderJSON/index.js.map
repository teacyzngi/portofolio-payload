{"version":3,"file":"index.js","names":["c","_c","ChevronIcon","React","chars","leftCurlyBracket","leftSquareBracket","rightCurlyBracket","rightSquareBracket","baseClass","Bracket","type","comma","position","rightBracket","leftBracket","bracketToRender","_jsxs","className","RenderJSON","t0","$","isEmpty","t1","object","objectKey","parentType","t2","trailingComma","t3","undefined","objectKeys","Object","keys","objectLength","length","isOpen","setIsOpen","useState","isNested","t4","children","onClick","_jsx","map","key","keyIndex","value","isLastKey","Date","toISOString","Array","isArray","parentHasKey","Boolean","rowClasses","filter","join","JSON","stringify"],"sources":["../../../../src/views/API/RenderJSON/index.tsx"],"sourcesContent":["'use client'\nimport { ChevronIcon } from '@payloadcms/ui'\nimport * as React from 'react'\n\nimport './index.scss'\n\nconst chars = {\n  leftCurlyBracket: '\\u007B',\n  leftSquareBracket: '\\u005B',\n  rightCurlyBracket: '\\u007D',\n  rightSquareBracket: '\\u005D',\n}\n\nconst baseClass = 'query-inspector'\n\nconst Bracket = ({\n  type,\n  comma = false,\n  position,\n}: {\n  comma?: boolean\n  position: 'end' | 'start'\n  type: 'array' | 'object'\n}) => {\n  const rightBracket = type === 'object' ? chars.rightCurlyBracket : chars.rightSquareBracket\n  const leftBracket = type === 'object' ? chars.leftCurlyBracket : chars.leftSquareBracket\n  const bracketToRender = position === 'end' ? rightBracket : leftBracket\n\n  return (\n    <span className={`${baseClass}__bracket ${baseClass}__bracket--position-${position}`}>\n      {bracketToRender}\n      {position === 'end' && comma ? ',' : null}\n    </span>\n  )\n}\n\ntype Args = {\n  isEmpty?: boolean\n  object: any[] | Record<string, any>\n  objectKey?: string\n  parentType?: 'array' | 'object'\n  trailingComma?: boolean\n}\n\nexport const RenderJSON = ({\n  isEmpty = false,\n  object,\n  objectKey,\n  parentType = 'object',\n  trailingComma = false,\n}: Args) => {\n  const objectKeys = object ? Object.keys(object) : []\n  const objectLength = objectKeys.length\n  const [isOpen, setIsOpen] = React.useState<boolean>(true)\n  const isNested = parentType === 'object' || parentType === 'array'\n  return (\n    <li className={isNested ? `${baseClass}__row-line--nested` : ''}>\n      <button\n        aria-label=\"toggle\"\n        className={`${baseClass}__list-toggle ${isEmpty ? `${baseClass}__list-toggle--empty` : ''}`}\n        onClick={() => setIsOpen(!isOpen)}\n        type=\"button\"\n      >\n        {isEmpty ? null : (\n          <ChevronIcon\n            className={`${baseClass}__toggle-row-icon ${baseClass}__toggle-row-icon--${\n              isOpen ? 'open' : 'closed'\n            }`}\n          />\n        )}\n        <span>\n          {objectKey && `\"${objectKey}\": `}\n          <Bracket position=\"start\" type={parentType} />\n          {isEmpty ? <Bracket comma={trailingComma} position=\"end\" type={parentType} /> : null}\n        </span>\n      </button>\n\n      <ul\n        className={`${baseClass}__json-children ${isNested ? `${baseClass}__json-children--nested` : ''}`}\n      >\n        {isOpen &&\n          objectKeys.map((key, keyIndex) => {\n            let value = object[key]\n            let type = 'string'\n            const isLastKey = keyIndex === objectLength - 1\n\n            if (value === null) {\n              type = 'null'\n            } else if (value instanceof Date) {\n              type = 'date'\n              value = value.toISOString()\n            } else if (Array.isArray(value)) {\n              type = 'array'\n            } else if (typeof value === 'object') {\n              type = 'object'\n            } else if (typeof value === 'number') {\n              type = 'number'\n            } else if (typeof value === 'boolean') {\n              type = 'boolean'\n            } else {\n              type = 'string'\n            }\n\n            if (type === 'object' || type === 'array') {\n              return (\n                <RenderJSON\n                  isEmpty={value.length === 0 || Object.keys(value).length === 0}\n                  key={`${key}-${keyIndex}`}\n                  object={value}\n                  objectKey={parentType === 'object' ? key : undefined}\n                  parentType={type}\n                  trailingComma={!isLastKey}\n                />\n              )\n            }\n\n            if (\n              type === 'date' ||\n              type === 'string' ||\n              type === 'null' ||\n              type === 'number' ||\n              type === 'boolean'\n            ) {\n              const parentHasKey = Boolean(parentType === 'object' && key)\n\n              const rowClasses = [\n                `${baseClass}__row-line`,\n                `${baseClass}__value-type--${type}`,\n                `${baseClass}__row-line--${objectKey ? 'nested' : 'top'}`,\n              ]\n                .filter(Boolean)\n                .join(' ')\n\n              return (\n                <li className={rowClasses} key={`${key}-${keyIndex}`}>\n                  {parentHasKey ? <span>{`\"${key}\": `}</span> : null}\n\n                  <span className={`${baseClass}__value`}>{JSON.stringify(value)}</span>\n                  {isLastKey ? '' : ','}\n                </li>\n              )\n            }\n          })}\n      </ul>\n\n      {!isEmpty && (\n        <span className={isNested ? `${baseClass}__bracket--nested` : ''}>\n          <Bracket comma={trailingComma} position=\"end\" type={parentType} />\n        </span>\n      )}\n    </li>\n  )\n}\n"],"mappings":"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","ignoreList":[]}