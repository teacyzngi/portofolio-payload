{"version":3,"file":"index.js","names":["HydrateAuthProvider","SetStepNav","RenderServerComponent","EntityType","groupNavItems","React","Fragment","DefaultDashboard","globalLockDurationDefault","DashboardView","props","locale","permissions","req","i18n","payload","config","user","visibleEntities","initPageResult","collections","filter","collection","slug","read","includes","globals","global","globalData","length","lockedDocuments","find","depth","overrideAccess","pagination","select","globalSlug","updatedAt","where","exists","map","lockDuration","lockDocuments","duration","lockedDoc","docs","doc","data","_isLocked","_lastEditedAt","_userEditing","value","navGroups","entityToGroup","type","entity","_jsxs","_jsx","nav","clientProps","Component","admin","components","views","dashboard","Fallback","importMap","serverProps"],"sources":["../../../src/views/Dashboard/index.tsx"],"sourcesContent":["import type { EntityToGroup } from '@payloadcms/ui/shared'\nimport type { AdminViewServerProps, TypedUser } from 'payload'\n\nimport { HydrateAuthProvider, SetStepNav } from '@payloadcms/ui'\nimport { RenderServerComponent } from '@payloadcms/ui/elements/RenderServerComponent'\nimport { EntityType, groupNavItems } from '@payloadcms/ui/shared'\nimport React, { Fragment } from 'react'\n\nimport type { DashboardViewClientProps, DashboardViewServerPropsOnly } from './Default/index.js'\n\nimport { DefaultDashboard } from './Default/index.js'\n\nconst globalLockDurationDefault = 300\n\nexport async function DashboardView(props: AdminViewServerProps) {\n  const {\n    locale,\n    permissions,\n    req: {\n      i18n,\n      payload: { config },\n      payload,\n      user,\n    },\n    req,\n    visibleEntities,\n  } = props.initPageResult\n  const collections = config.collections.filter(\n    (collection) =>\n      permissions?.collections?.[collection.slug]?.read &&\n      visibleEntities.collections.includes(collection.slug),\n  )\n\n  const globals = config.globals.filter(\n    (global) =>\n      permissions?.globals?.[global.slug]?.read && visibleEntities.globals.includes(global.slug),\n  )\n\n  // Query locked global documents only if there are globals in the config\n  let globalData: DashboardViewServerPropsOnly['globalData'] = []\n\n  if (config.globals.length > 0) {\n    const lockedDocuments = await payload.find({\n      collection: 'payload-locked-documents',\n      depth: 1,\n      overrideAccess: false,\n      pagination: false,\n      req,\n      select: {\n        globalSlug: true,\n        updatedAt: true,\n        user: true,\n      },\n      where: {\n        globalSlug: {\n          exists: true,\n        },\n      },\n    })\n\n    // Map over globals to include `lockDuration` and lock data for each global slug\n    globalData = config.globals.map((global) => {\n      const lockDuration =\n        typeof global.lockDocuments === 'object'\n          ? global.lockDocuments.duration\n          : globalLockDurationDefault\n\n      const lockedDoc = lockedDocuments.docs.find((doc) => doc.globalSlug === global.slug)\n\n      return {\n        slug: global.slug,\n        data: {\n          _isLocked: !!lockedDoc,\n          _lastEditedAt: (lockedDoc?.updatedAt as string) ?? null,\n          _userEditing: (lockedDoc?.user as { value?: TypedUser })?.value ?? null,\n        },\n        lockDuration,\n      }\n    })\n  }\n\n  const navGroups = groupNavItems(\n    [\n      ...(collections.map((collection) => {\n        const entityToGroup: EntityToGroup = {\n          type: EntityType.collection,\n          entity: collection,\n        }\n\n        return entityToGroup\n      }) ?? []),\n      ...(globals.map((global) => {\n        const entityToGroup: EntityToGroup = {\n          type: EntityType.global,\n          entity: global,\n        }\n\n        return entityToGroup\n      }) ?? []),\n    ],\n    permissions,\n    i18n,\n  )\n\n  return (\n    <Fragment>\n      <HydrateAuthProvider permissions={permissions} />\n      <SetStepNav nav={[]} />\n      {RenderServerComponent({\n        clientProps: {\n          locale,\n        } satisfies DashboardViewClientProps,\n        Component: config.admin?.components?.views?.dashboard?.Component,\n        Fallback: DefaultDashboard,\n        importMap: payload.importMap,\n        serverProps: {\n          ...props,\n          globalData,\n          i18n,\n          locale,\n          navGroups,\n          payload,\n          permissions,\n          user,\n          visibleEntities,\n        } satisfies DashboardViewServerPropsOnly,\n      })}\n    </Fragment>\n  )\n}\n"],"mappings":"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","ignoreList":[]}