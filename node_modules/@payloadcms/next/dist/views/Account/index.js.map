{"version":3,"file":"index.js","names":["DocumentInfoProvider","EditDepthProvider","HydrateAuthProvider","RenderServerComponent","buildFormState","notFound","React","DocumentHeader","getDocPreferences","getDocumentData","getDocumentPermissions","getIsLocked","getVersions","EditView","AccountClient","Settings","AccountView","initPageResult","params","searchParams","languageOptions","locale","permissions","req","i18n","payload","config","user","admin","theme","userSlug","routes","api","serverURL","collectionConfig","collections","id","data","collectionSlug","slug","Error","docPreferences","docPermissions","hasPublishPermission","hasSavePermission","state","formState","code","operation","renderAllFields","schemaPath","skipValidation","currentEditor","isLocked","lastUpdateTime","isEditing","hasPublishedDoc","mostRecentVersionIsAutosaved","unpublishedVersionCount","versionCount","doc","_jsx","AfterFields","apiURL","initialData","initialState","_jsxs","hideTabs","Component","components","views","account","Fallback","importMap","serverProps","routeSegments"],"sources":["../../../src/views/Account/index.tsx"],"sourcesContent":["import type { AdminViewServerProps, DocumentViewServerPropsOnly } from 'payload'\n\nimport { DocumentInfoProvider, EditDepthProvider, HydrateAuthProvider } from '@payloadcms/ui'\nimport { RenderServerComponent } from '@payloadcms/ui/elements/RenderServerComponent'\nimport { buildFormState } from '@payloadcms/ui/utilities/buildFormState'\nimport { notFound } from 'next/navigation.js'\nimport React from 'react'\n\nimport { DocumentHeader } from '../../elements/DocumentHeader/index.js'\nimport { getDocPreferences } from '../Document/getDocPreferences.js'\nimport { getDocumentData } from '../Document/getDocumentData.js'\nimport { getDocumentPermissions } from '../Document/getDocumentPermissions.js'\nimport { getIsLocked } from '../Document/getIsLocked.js'\nimport { getVersions } from '../Document/getVersions.js'\nimport { EditView } from '../Edit/index.js'\nimport { AccountClient } from './index.client.js'\nimport { Settings } from './Settings/index.js'\n\nexport async function AccountView({ initPageResult, params, searchParams }: AdminViewServerProps) {\n  const {\n    languageOptions,\n    locale,\n    permissions,\n    req,\n    req: {\n      i18n,\n      payload,\n      payload: { config },\n      user,\n    },\n  } = initPageResult\n\n  const {\n    admin: { theme, user: userSlug },\n    routes: { api },\n    serverURL,\n  } = config\n\n  const collectionConfig = payload?.collections?.[userSlug]?.config\n\n  if (collectionConfig && user?.id) {\n    // Fetch the data required for the view\n    const data = await getDocumentData({\n      id: user.id,\n      collectionSlug: collectionConfig.slug,\n      locale,\n      payload,\n      req,\n      user,\n    })\n\n    if (!data) {\n      throw new Error('not-found')\n    }\n\n    // Get document preferences\n    const docPreferences = await getDocPreferences({\n      id: user.id,\n      collectionSlug: collectionConfig.slug,\n      payload,\n      user,\n    })\n\n    // Get permissions\n    const { docPermissions, hasPublishPermission, hasSavePermission } =\n      await getDocumentPermissions({\n        id: user.id,\n        collectionConfig,\n        data,\n        req,\n      })\n\n    // Build initial form state from data\n    const { state: formState } = await buildFormState({\n      id: user.id,\n      collectionSlug: collectionConfig.slug,\n      data,\n      docPermissions,\n      docPreferences,\n      locale: locale?.code,\n      operation: 'update',\n      renderAllFields: true,\n      req,\n      schemaPath: collectionConfig.slug,\n      skipValidation: true,\n    })\n\n    // Fetch document lock state\n    const { currentEditor, isLocked, lastUpdateTime } = await getIsLocked({\n      id: user.id,\n      collectionConfig,\n      isEditing: true,\n      req,\n    })\n\n    // Get all versions required for UI\n    const { hasPublishedDoc, mostRecentVersionIsAutosaved, unpublishedVersionCount, versionCount } =\n      await getVersions({\n        id: user.id,\n        collectionConfig,\n        doc: data,\n        docPermissions,\n        locale: locale?.code,\n        payload,\n        user,\n      })\n\n    return (\n      <DocumentInfoProvider\n        AfterFields={\n          <Settings\n            i18n={i18n}\n            languageOptions={languageOptions}\n            payload={payload}\n            theme={theme}\n            user={user}\n          />\n        }\n        apiURL={`${serverURL}${api}/${userSlug}${user?.id ? `/${user.id}` : ''}`}\n        collectionSlug={userSlug}\n        currentEditor={currentEditor}\n        docPermissions={docPermissions}\n        hasPublishedDoc={hasPublishedDoc}\n        hasPublishPermission={hasPublishPermission}\n        hasSavePermission={hasSavePermission}\n        id={user?.id}\n        initialData={data}\n        initialState={formState}\n        isEditing\n        isLocked={isLocked}\n        lastUpdateTime={lastUpdateTime}\n        mostRecentVersionIsAutosaved={mostRecentVersionIsAutosaved}\n        unpublishedVersionCount={unpublishedVersionCount}\n        versionCount={versionCount}\n      >\n        <EditDepthProvider>\n          <DocumentHeader\n            collectionConfig={collectionConfig}\n            hideTabs\n            permissions={permissions}\n            req={req}\n          />\n          <HydrateAuthProvider permissions={permissions} />\n          {RenderServerComponent({\n            Component: config.admin?.components?.views?.account?.Component,\n            Fallback: EditView,\n            importMap: payload.importMap,\n            serverProps: {\n              doc: data,\n              hasPublishedDoc,\n              i18n,\n              initPageResult,\n              locale,\n              params,\n              payload,\n              permissions,\n              routeSegments: [],\n              searchParams,\n              user,\n            } satisfies DocumentViewServerPropsOnly,\n          })}\n          <AccountClient />\n        </EditDepthProvider>\n      </DocumentInfoProvider>\n    )\n  }\n\n  return notFound()\n}\n"],"mappings":"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","ignoreList":[]}