{"version":3,"file":"index.js","names":["c","_c","Button","ConfirmationModal","toast","useModal","useTranslation","qs","Fragment","useCallback","confirmResetModalSlug","ResetPreferences","t0","$","apiRoute","user","openModal","t","t1","stringifiedQuery","stringify","depth","where","id","equals","addQueryPrefix","res","fetch","credentials","headers","method","json","message","ok","success","error","t2","_err","handleResetPreferences","t3","_jsxs","children","_jsx","buttonStyle","onClick","body","confirmingLabel","heading","modalSlug","onConfirm"],"sources":["../../../../src/views/Account/ResetPreferences/index.tsx"],"sourcesContent":["'use client'\nimport type { TypedUser } from 'payload'\n\nimport { Button, ConfirmationModal, toast, useModal, useTranslation } from '@payloadcms/ui'\nimport * as qs from 'qs-esm'\nimport { Fragment, useCallback } from 'react'\n\nconst confirmResetModalSlug = 'confirm-reset-modal'\n\nexport const ResetPreferences: React.FC<{\n  readonly apiRoute: string\n  readonly user?: TypedUser\n}> = ({ apiRoute, user }) => {\n  const { openModal } = useModal()\n  const { t } = useTranslation()\n\n  const handleResetPreferences = useCallback(async () => {\n    if (!user) {\n      return\n    }\n\n    const stringifiedQuery = qs.stringify(\n      {\n        depth: 0,\n        where: {\n          user: {\n            id: {\n              equals: user.id,\n            },\n          },\n        },\n      },\n      { addQueryPrefix: true },\n    )\n\n    try {\n      const res = await fetch(`${apiRoute}/payload-preferences${stringifiedQuery}`, {\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        method: 'DELETE',\n      })\n\n      const json = await res.json()\n      const message = json.message\n\n      if (res.ok) {\n        toast.success(message)\n      } else {\n        toast.error(message)\n      }\n    } catch (_err) {\n      // swallow error\n    }\n  }, [apiRoute, user])\n\n  return (\n    <Fragment>\n      <div>\n        <Button buttonStyle=\"secondary\" onClick={() => openModal(confirmResetModalSlug)}>\n          {t('general:resetPreferences')}\n        </Button>\n      </div>\n      <ConfirmationModal\n        body={t('general:resetPreferencesDescription')}\n        confirmingLabel={t('general:resettingPreferences')}\n        heading={t('general:resetPreferences')}\n        modalSlug={confirmResetModalSlug}\n        onConfirm={handleResetPreferences}\n      />\n    </Fragment>\n  )\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AAGA,SAASC,MAAM,EAAEC,iBAAiB,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,cAAc,QAAQ;AAC3E,YAAYC,EAAA,MAAQ;AACpB,SAASC,QAAQ,EAAEC,WAAW,QAAQ;AAEtC,MAAMC,qBAAA,GAAwB;AAE9B,OAAO,MAAMC,gBAAA,GAGRC,EAAA;EAAA,MAAAC,CAAA,GAAAZ,EAAA;EAAC;IAAAa,QAAA;IAAAC;EAAA,IAAAH,EAAkB;EACtB;IAAAI;EAAA,IAAsBX,QAAA;EACtB;IAAAY;EAAA,IAAcX,cAAA;EAAA,IAAAY,EAAA;EAAA,IAAAL,CAAA,QAAAC,QAAA,IAAAD,CAAA,QAAAE,IAAA;IAE6BG,EAAA,SAAAA,CAAA;MAAA,KACpCH,IAAA;QAAA;MAAA;MAIL,MAAAI,gBAAA,GAAyBZ,EAAA,CAAAa,SAAA;QAAAC,KAAA;QAAAC,KAAA;UAAAP,IAAA;YAAAQ,EAAA;cAAAC,MAAA,EAMPT,IAAA,CAAAQ;YAAA;UAAA;QAAA;MAAA;QAAAE,cAAA;MAAA,CAKO;MAAA;MAAA;QAIvB,MAAAC,GAAA,SAAkBC,KAAA,CAAM,GAAGb,QAAA,uBAA+BK,gBAAA,EAAkB;UAAAS,WAAA,EAC7D;UAAAC,OAAA;YAAA,gBAEK;UAAA;UAAAC,MAAA,EAEV;QAAA,CACV;QAEA,MAAAC,IAAA,SAAmBL,GAAA,CAAAK,IAAA,CAAQ;QAC3B,MAAAC,OAAA,GAAgBD,IAAA,CAAAC,OAAA;QAAY,IAExBN,GAAA,CAAAO,EAAA;UACF7B,KAAA,CAAA8B,OAAA,CAAcF,OAAA;QAAA;UAEd5B,KAAA,CAAA+B,KAAA,CAAYH,OAAA;QAAA;MAAA,SAAAI,EAAA;QAEPC,KAAA,CAAAA,IAAA,CAAAA,CAAA,CAAAA,EAAA;MAAA;IAAA;IAGXxB,CAAA,MAAAC,QAAA;IAAAD,CAAA,MAAAE,IAAA;IAAAF,CAAA,MAAAK,EAAA;EAAA;IAAAA,EAAA,GAAAL,CAAA;EAAA;EAvCA,MAAAyB,sBAAA,GAA+BpB,EAuCZ;EAAA,IAAAkB,EAAA;EAAA,IAAAvB,CAAA,QAAAG,SAAA;IAK4BoB,EAAA,GAAAA,CAAA,KAAMpB,SAAA,CAAAN,qBAAU;IAAAG,CAAA,MAAAG,SAAA;IAAAH,CAAA,MAAAuB,EAAA;EAAA;IAAAA,EAAA,GAAAvB,CAAA;EAAA;EAAA,IAAA0B,EAAA;EAAA,IAAA1B,CAAA,QAAAyB,sBAAA,IAAAzB,CAAA,QAAAI,CAAA,IAAAJ,CAAA,QAAAuB,EAAA;IAF7DG,EAAA,GAAAC,KAAA,CAAAhC,QAAA;MAAAiC,QAAA,GACEC,IAAA,CAAC;QAAAD,QAAA,EACCC,IAAA,CAAAxC,MAAA;UAAAyC,WAAA,EAAoB;UAAAC,OAAA,EAAqBR,EAAgB;UAAAK,QAAA,EACtDxB,CAAA,CAAE;QAAA,C;UAGPyB,IAAA,CAAAvC,iBAAA;QAAA0C,IAAA,EACQ5B,CAAA,CAAE;QAAA6B,eAAA,EACS7B,CAAA,CAAE;QAAA8B,OAAA,EACV9B,CAAA,CAAE;QAAA+B,SAAA,EAAAtC,qBAAA;QAAAuC,SAAA,EAEAX;MAAA,C;;;;;;;;;SAXfC,E;CAeJ","ignoreList":[]}