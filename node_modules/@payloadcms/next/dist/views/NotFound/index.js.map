{"version":3,"file":"index.js","names":["formatAdminURL","qs","React","DefaultTemplate","getNextRequestI18n","getVisibleEntities","initReq","NotFoundClient","generateNotFoundViewMetadata","config","configPromise","i18n","title","t","NotFoundPage","importMap","params","paramsPromise","searchParams","searchParamsPromise","routes","admin","adminRoute","queryString","stringify","addQueryPrefix","locale","permissions","req","payload","key","overrides","fallbackLocale","query","parse","depth","ignoreQueryPrefix","urlSuffix","path","user","canAccessAdmin","_jsx","visibleEntities","NotFoundView","props","marginTop"],"sources":["../../../src/views/NotFound/index.tsx"],"sourcesContent":["import type { Metadata } from 'next'\nimport type { AdminViewServerProps, ImportMap, SanitizedConfig } from 'payload'\n\nimport { formatAdminURL } from 'payload/shared'\nimport * as qs from 'qs-esm'\nimport React from 'react'\n\nimport { DefaultTemplate } from '../../templates/Default/index.js'\nimport { getNextRequestI18n } from '../../utilities/getNextRequestI18n.js'\nimport { getVisibleEntities } from '../../utilities/getVisibleEntities.js'\nimport { initReq } from '../../utilities/initReq.js'\nimport { NotFoundClient } from './index.client.js'\n\nexport const generateNotFoundViewMetadata = async ({\n  config: configPromise,\n}: {\n  config: Promise<SanitizedConfig> | SanitizedConfig\n  params?: { [key: string]: string | string[] }\n}): Promise<Metadata> => {\n  const config = await configPromise\n\n  const i18n = await getNextRequestI18n({\n    config,\n  })\n\n  return {\n    title: i18n.t('general:notFound'),\n  }\n}\n\nexport const NotFoundPage = async ({\n  config: configPromise,\n  importMap,\n  params: paramsPromise,\n  searchParams: searchParamsPromise,\n}: {\n  config: Promise<SanitizedConfig>\n  importMap: ImportMap\n  params: Promise<{\n    segments: string[]\n  }>\n  searchParams: Promise<{\n    [key: string]: string | string[]\n  }>\n}) => {\n  const config = await configPromise\n  const { routes: { admin: adminRoute } = {} } = config\n\n  const searchParams = await searchParamsPromise\n  const queryString = `${qs.stringify(searchParams ?? {}, { addQueryPrefix: true })}`\n  const {\n    locale,\n    permissions,\n    req,\n    req: { payload },\n  } = await initReq({\n    configPromise: config,\n    importMap,\n    key: 'RootLayout',\n    overrides: {\n      fallbackLocale: false,\n      req: {\n        query: qs.parse(queryString, {\n          depth: 10,\n          ignoreQueryPrefix: true,\n        }),\n      },\n      urlSuffix: `${formatAdminURL({ adminRoute, path: '/not-found' })}${searchParams ? queryString : ''}`,\n    },\n  })\n\n  if (!req.user || !permissions.canAccessAdmin) {\n    return <NotFoundClient />\n  }\n\n  const params = await paramsPromise\n  const visibleEntities = getVisibleEntities({ req })\n\n  return (\n    <DefaultTemplate\n      i18n={req.i18n}\n      locale={locale}\n      params={params}\n      payload={payload}\n      permissions={permissions}\n      searchParams={searchParams}\n      user={req.user}\n      visibleEntities={visibleEntities}\n    >\n      <NotFoundClient />\n    </DefaultTemplate>\n  )\n}\n\nexport function NotFoundView(props: AdminViewServerProps) {\n  return <NotFoundClient marginTop=\"large\" />\n}\n"],"mappings":";AAGA,SAASA,cAAc,QAAQ;AAC/B,YAAYC,EAAA,MAAQ;AACpB,OAAOC,KAAA,MAAW;AAElB,SAASC,eAAe,QAAQ;AAChC,SAASC,kBAAkB,QAAQ;AACnC,SAASC,kBAAkB,QAAQ;AACnC,SAASC,OAAO,QAAQ;AACxB,SAASC,cAAc,QAAQ;AAE/B,OAAO,MAAMC,4BAAA,GAA+B,MAAAA,CAAO;EACjDC,MAAA,EAAQC;AAAa,CAItB;EACC,MAAMD,MAAA,GAAS,MAAMC,aAAA;EAErB,MAAMC,IAAA,GAAO,MAAMP,kBAAA,CAAmB;IACpCK;EACF;EAEA,OAAO;IACLG,KAAA,EAAOD,IAAA,CAAKE,CAAC,CAAC;EAChB;AACF;AAEA,OAAO,MAAMC,YAAA,GAAe,MAAAA,CAAO;EACjCL,MAAA,EAAQC,aAAa;EACrBK,SAAS;EACTC,MAAA,EAAQC,aAAa;EACrBC,YAAA,EAAcC;AAAmB,CAUlC;EACC,MAAMV,MAAA,GAAS,MAAMC,aAAA;EACrB,MAAM;IAAEU,MAAA,EAAQ;MAAEC,KAAA,EAAOC;IAAU,CAAE,GAAG,CAAC;EAAC,CAAE,GAAGb,MAAA;EAE/C,MAAMS,YAAA,GAAe,MAAMC,mBAAA;EAC3B,MAAMI,WAAA,GAAc,GAAGtB,EAAA,CAAGuB,SAAS,CAACN,YAAA,IAAgB,CAAC,GAAG;IAAEO,cAAA,EAAgB;EAAK,IAAI;EACnF,MAAM;IACJC,MAAM;IACNC,WAAW;IACXC,GAAG;IACHA,GAAA,EAAK;MAAEC;IAAO;EAAE,CACjB,GAAG,MAAMvB,OAAA,CAAQ;IAChBI,aAAA,EAAeD,MAAA;IACfM,SAAA;IACAe,GAAA,EAAK;IACLC,SAAA,EAAW;MACTC,cAAA,EAAgB;MAChBJ,GAAA,EAAK;QACHK,KAAA,EAAOhC,EAAA,CAAGiC,KAAK,CAACX,WAAA,EAAa;UAC3BY,KAAA,EAAO;UACPC,iBAAA,EAAmB;QACrB;MACF;MACAC,SAAA,EAAW,GAAGrC,cAAA,CAAe;QAAEsB,UAAA;QAAYgB,IAAA,EAAM;MAAa,KAAKpB,YAAA,GAAeK,WAAA,GAAc;IAClG;EACF;EAEA,IAAI,CAACK,GAAA,CAAIW,IAAI,IAAI,CAACZ,WAAA,CAAYa,cAAc,EAAE;IAC5C,oBAAOC,IAAA,CAAClC,cAAA;EACV;EAEA,MAAMS,MAAA,GAAS,MAAMC,aAAA;EACrB,MAAMyB,eAAA,GAAkBrC,kBAAA,CAAmB;IAAEuB;EAAI;EAEjD,oBACEa,IAAA,CAACtC,eAAA;IACCQ,IAAA,EAAMiB,GAAA,CAAIjB,IAAI;IACde,MAAA,EAAQA,MAAA;IACRV,MAAA,EAAQA,MAAA;IACRa,OAAA,EAASA,OAAA;IACTF,WAAA,EAAaA,WAAA;IACbT,YAAA,EAAcA,YAAA;IACdqB,IAAA,EAAMX,GAAA,CAAIW,IAAI;IACdG,eAAA,EAAiBA,eAAA;cAEjB,aAAAD,IAAA,CAAClC,cAAA;;AAGP;AAEA,OAAO,SAASoC,aAAaC,KAA2B;EACtD,oBAAOH,IAAA,CAAClC,cAAA;IAAesC,SAAA,EAAU;;AACnC","ignoreList":[]}