{"version":3,"file":"index.js","names":["Button","Link","Translation","formatAdminURL","React","FormHeader","ResetPasswordForm","resetPasswordBaseClass","ResetPassword","initPageResult","params","req","segments","_","token","i18n","payload","config","user","admin","routes","account","accountRoute","login","loginRoute","adminRoute","_jsxs","className","_jsx","description","elements","0","children","href","path","prefetch","i18nKey","t","heading","buttonStyle","el","size","to"],"sources":["../../../src/views/ResetPassword/index.tsx"],"sourcesContent":["import type { AdminViewServerProps } from 'payload'\n\nimport { Button, Link } from '@payloadcms/ui'\nimport { Translation } from '@payloadcms/ui/shared'\nimport { formatAdminURL } from 'payload/shared'\nimport React from 'react'\n\nimport { FormHeader } from '../../elements/FormHeader/index.js'\nimport { ResetPasswordForm } from './ResetPasswordForm/index.js'\nimport './index.scss'\n\nexport const resetPasswordBaseClass = 'reset-password'\n\nexport function ResetPassword({ initPageResult, params }: AdminViewServerProps) {\n  const { req } = initPageResult\n\n  const {\n    segments: [_, token],\n  } = params\n\n  const {\n    i18n,\n    payload: { config },\n    user,\n  } = req\n\n  const {\n    admin: {\n      routes: { account: accountRoute, login: loginRoute },\n    },\n    routes: { admin: adminRoute },\n  } = config\n\n  if (user) {\n    return (\n      <div className={`${resetPasswordBaseClass}__wrap`}>\n        <FormHeader\n          description={\n            <Translation\n              elements={{\n                '0': ({ children }) => (\n                  <Link\n                    href={formatAdminURL({\n                      adminRoute,\n                      path: accountRoute,\n                    })}\n                    prefetch={false}\n                  >\n                    {children}\n                  </Link>\n                ),\n              }}\n              i18nKey=\"authentication:loggedInChangePassword\"\n              t={i18n.t}\n            />\n          }\n          heading={i18n.t('authentication:alreadyLoggedIn')}\n        />\n        <Button buttonStyle=\"secondary\" el=\"link\" size=\"large\" to={adminRoute}>\n          {i18n.t('general:backToDashboard')}\n        </Button>\n      </div>\n    )\n  }\n\n  return (\n    <div className={`${resetPasswordBaseClass}__wrap`}>\n      <FormHeader heading={i18n.t('authentication:resetPassword')} />\n      <ResetPasswordForm token={token} />\n      <Link\n        href={formatAdminURL({\n          adminRoute,\n          path: loginRoute,\n        })}\n        prefetch={false}\n      >\n        {i18n.t('authentication:backToLogin')}\n      </Link>\n    </div>\n  )\n}\n"],"mappings":";AAEA,SAASA,MAAM,EAAEC,IAAI,QAAQ;AAC7B,SAASC,WAAW,QAAQ;AAC5B,SAASC,cAAc,QAAQ;AAC/B,OAAOC,KAAA,MAAW;AAElB,SAASC,UAAU,QAAQ;AAC3B,SAASC,iBAAiB,QAAQ;AAGlC,OAAO,MAAMC,sBAAA,GAAyB;AAEtC,OAAO,SAASC,cAAc;EAAEC,cAAc;EAAEC;AAAM,CAAwB;EAC5E,MAAM;IAAEC;EAAG,CAAE,GAAGF,cAAA;EAEhB,MAAM;IACJG,QAAA,EAAU,CAACC,CAAA,EAAGC,KAAA;EAAM,CACrB,GAAGJ,MAAA;EAEJ,MAAM;IACJK,IAAI;IACJC,OAAA,EAAS;MAAEC;IAAM,CAAE;IACnBC;EAAI,CACL,GAAGP,GAAA;EAEJ,MAAM;IACJQ,KAAA,EAAO;MACLC,MAAA,EAAQ;QAAEC,OAAA,EAASC,YAAY;QAAEC,KAAA,EAAOC;MAAU;IAAE,CACrD;IACDJ,MAAA,EAAQ;MAAED,KAAA,EAAOM;IAAU;EAAE,CAC9B,GAAGR,MAAA;EAEJ,IAAIC,IAAA,EAAM;IACR,oBACEQ,KAAA,CAAC;MAAIC,SAAA,EAAW,GAAGpB,sBAAA,QAA8B;8BAC/CqB,IAAA,CAACvB,UAAA;QACCwB,WAAA,eACED,IAAA,CAAC1B,WAAA;UACC4B,QAAA,EAAU;YACR,KAAKC,CAAC;cAAEC;YAAQ,CAAE,kBAChBJ,IAAA,CAAC3B,IAAA;cACCgC,IAAA,EAAM9B,cAAA,CAAe;gBACnBsB,UAAA;gBACAS,IAAA,EAAMZ;cACR;cACAa,QAAA,EAAU;wBAETH;;UAGP;UACAI,OAAA,EAAQ;UACRC,CAAA,EAAGtB,IAAA,CAAKsB;;QAGZC,OAAA,EAASvB,IAAA,CAAKsB,CAAC,CAAC;uBAElBT,IAAA,CAAC5B,MAAA;QAAOuC,WAAA,EAAY;QAAYC,EAAA,EAAG;QAAOC,IAAA,EAAK;QAAQC,EAAA,EAAIjB,UAAA;kBACxDV,IAAA,CAAKsB,CAAC,CAAC;;;EAIhB;EAEA,oBACEX,KAAA,CAAC;IAAIC,SAAA,EAAW,GAAGpB,sBAAA,QAA8B;4BAC/CqB,IAAA,CAACvB,UAAA;MAAWiC,OAAA,EAASvB,IAAA,CAAKsB,CAAC,CAAC;qBAC5BT,IAAA,CAACtB,iBAAA;MAAkBQ,KAAA,EAAOA;qBAC1Bc,IAAA,CAAC3B,IAAA;MACCgC,IAAA,EAAM9B,cAAA,CAAe;QACnBsB,UAAA;QACAS,IAAA,EAAMV;MACR;MACAW,QAAA,EAAU;gBAETpB,IAAA,CAAKsB,CAAC,CAAC;;;AAIhB","ignoreList":[]}