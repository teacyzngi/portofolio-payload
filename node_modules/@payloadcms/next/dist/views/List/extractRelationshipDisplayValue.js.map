{"version":3,"file":"extractRelationshipDisplayValue.js","names":["extractRelationshipDisplayValue","relationship","clientConfig","relationshipConfig","relationTo","value","config","collections","find","c","slug","admin","useAsTitle","id","String"],"sources":["../../../src/views/List/extractRelationshipDisplayValue.ts"],"sourcesContent":["import type { ClientCollectionConfig, ClientConfig } from 'payload'\n\n// Helper function to extract display value from relationship\nexport const extractRelationshipDisplayValue = (\n  relationship: any,\n  clientConfig: ClientConfig,\n  relationshipConfig?: ClientCollectionConfig,\n): string => {\n  if (!relationship) {\n    return ''\n  }\n\n  // Handle polymorphic relationships\n  if (typeof relationship === 'object' && relationship?.relationTo && relationship?.value) {\n    const config = clientConfig.collections.find((c) => c.slug === relationship.relationTo)\n    return relationship.value?.[config?.admin?.useAsTitle || 'id'] || ''\n  }\n\n  // Handle regular relationships\n  if (typeof relationship === 'object' && relationship?.id) {\n    return relationship[relationshipConfig?.admin?.useAsTitle || 'id'] || ''\n  }\n\n  return String(relationship)\n}\n"],"mappings":"AAEA;AACA,OAAO,MAAMA,+BAAA,GAAkCA,CAC7CC,YAAA,EACAC,YAAA,EACAC,kBAAA;EAEA,IAAI,CAACF,YAAA,EAAc;IACjB,OAAO;EACT;EAEA;EACA,IAAI,OAAOA,YAAA,KAAiB,YAAYA,YAAA,EAAcG,UAAA,IAAcH,YAAA,EAAcI,KAAA,EAAO;IACvF,MAAMC,MAAA,GAASJ,YAAA,CAAaK,WAAW,CAACC,IAAI,CAAEC,CAAA,IAAMA,CAAA,CAAEC,IAAI,KAAKT,YAAA,CAAaG,UAAU;IACtF,OAAOH,YAAA,CAAaI,KAAK,GAAGC,MAAA,EAAQK,KAAA,EAAOC,UAAA,IAAc,KAAK,IAAI;EACpE;EAEA;EACA,IAAI,OAAOX,YAAA,KAAiB,YAAYA,YAAA,EAAcY,EAAA,EAAI;IACxD,OAAOZ,YAAY,CAACE,kBAAA,EAAoBQ,KAAA,EAAOC,UAAA,IAAc,KAAK,IAAI;EACxE;EAEA,OAAOE,MAAA,CAAOb,YAAA;AAChB","ignoreList":[]}