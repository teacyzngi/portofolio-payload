{"version":3,"file":"isPathMatchingRoute.js","names":["pathToRegexp","isPathMatchingRoute","currentRoute","exact","path","viewPath","sensitive","strict","keys","regex","match","exec","viewRoute","startsWith"],"sources":["../../../src/views/Root/isPathMatchingRoute.ts"],"sourcesContent":["import { pathToRegexp } from 'path-to-regexp'\n\nexport const isPathMatchingRoute = ({\n  currentRoute,\n  exact,\n  path: viewPath,\n  sensitive,\n  strict,\n}: {\n  currentRoute: string\n  exact?: boolean\n  path?: string\n  sensitive?: boolean\n  strict?: boolean\n}) => {\n  const keys = []\n\n  // run the view path through `pathToRegexp` to resolve any dynamic segments\n  // i.e. `/admin/custom-view/:id` -> `/admin/custom-view/123`\n  const regex = pathToRegexp(viewPath, keys, {\n    sensitive,\n    strict,\n  })\n\n  const match = regex.exec(currentRoute)\n  const viewRoute = match?.[0] || viewPath\n\n  if (exact) {\n    return currentRoute === viewRoute\n  }\n  if (!exact) {\n    return viewRoute.startsWith(currentRoute)\n  }\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ;AAE7B,OAAO,MAAMC,mBAAA,GAAsBA,CAAC;EAClCC,YAAY;EACZC,KAAK;EACLC,IAAA,EAAMC,QAAQ;EACdC,SAAS;EACTC;AAAM,CAOP;EACC,MAAMC,IAAA,GAAO,EAAE;EAEf;EACA;EACA,MAAMC,KAAA,GAAQT,YAAA,CAAaK,QAAA,EAAUG,IAAA,EAAM;IACzCF,SAAA;IACAC;EACF;EAEA,MAAMG,KAAA,GAAQD,KAAA,CAAME,IAAI,CAACT,YAAA;EACzB,MAAMU,SAAA,GAAYF,KAAA,GAAQ,EAAE,IAAIL,QAAA;EAEhC,IAAIF,KAAA,EAAO;IACT,OAAOD,YAAA,KAAiBU,SAAA;EAC1B;EACA,IAAI,CAACT,KAAA,EAAO;IACV,OAAOS,SAAA,CAAUC,UAAU,CAACX,YAAA;EAC9B;AACF","ignoreList":[]}