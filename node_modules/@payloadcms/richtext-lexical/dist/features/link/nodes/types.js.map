{"version":3,"file":"types.js","names":[],"sources":["../../../../src/features/link/nodes/types.ts"],"sourcesContent":["import type { SerializedElementNode, SerializedLexicalNode } from 'lexical'\nimport type { DefaultDocumentIDType, JsonValue } from 'payload'\n\nimport type { StronglyTypedElementNode } from '../../../nodeTypes.js'\n\nexport type LinkFields = {\n  [key: string]: JsonValue\n  doc?: {\n    relationTo: string\n    value:\n      | {\n          // Actual doc data, populated in afterRead hook\n          [key: string]: JsonValue\n          id: DefaultDocumentIDType\n        }\n      | DefaultDocumentIDType\n  } | null\n  linkType: 'custom' | 'internal'\n  newTab: boolean\n  url?: string\n}\n\nexport type SerializedLinkNode<T extends SerializedLexicalNode = SerializedLexicalNode> = {\n  fields: LinkFields\n  /**\n   * @todo make required in 4.0 and type AutoLinkNode differently\n   */\n  id?: string // optional if AutoLinkNode\n} & StronglyTypedElementNode<SerializedElementNode, 'link', T>\n\nexport type SerializedAutoLinkNode<T extends SerializedLexicalNode = SerializedLexicalNode> = {\n  fields: LinkFields\n} & StronglyTypedElementNode<SerializedElementNode, 'autolink', T>\n"],"mappings":"AA8BA","ignoreList":[]}