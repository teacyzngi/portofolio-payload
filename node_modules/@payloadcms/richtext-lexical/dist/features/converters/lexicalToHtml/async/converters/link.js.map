{"version":3,"file":"link.js","names":["LinkHTMLConverterAsync","internalDocToHref","autolink","node","nodesToHTML","providedStyleTag","children","nodes","join","fields","url","newTab","link","populate","href","linkType","linkNode","console","error"],"sources":["../../../../../../src/features/converters/lexicalToHtml/async/converters/link.ts"],"sourcesContent":["import type { SerializedAutoLinkNode, SerializedLinkNode } from '../../../../../nodeTypes.js'\nimport type { HTMLConvertersAsync, HTMLPopulateFn } from '../types.js'\n\nexport const LinkHTMLConverterAsync: (args: {\n  internalDocToHref?: (args: {\n    linkNode: SerializedLinkNode\n    populate?: HTMLPopulateFn\n  }) => Promise<string> | string\n}) => HTMLConvertersAsync<SerializedAutoLinkNode | SerializedLinkNode> = ({\n  internalDocToHref,\n}) => ({\n  autolink: async ({ node, nodesToHTML, providedStyleTag }) => {\n    const children = (\n      await nodesToHTML({\n        nodes: node.children,\n      })\n    ).join('')\n\n    return `<a${providedStyleTag} href=\"${node.fields.url}\"${node.fields.newTab ? ' rel=\"noopener noreferrer\" target=\"_blank\"' : ''}>${children}</a>`\n  },\n  link: async ({ node, nodesToHTML, populate, providedStyleTag }) => {\n    const children = (\n      await nodesToHTML({\n        nodes: node.children,\n      })\n    ).join('')\n\n    let href: string = node.fields.url ?? ''\n    if (node.fields.linkType === 'internal') {\n      if (internalDocToHref) {\n        href = await internalDocToHref({ linkNode: node, populate })\n      } else {\n        console.error(\n          'Lexical => HTML converter: Link converter: found internal link, but internalDocToHref is not provided',\n        )\n        href = '#' // fallback\n      }\n    }\n\n    return `<a${providedStyleTag} href=\"${href}\"${node.fields.newTab ? ' rel=\"noopener noreferrer\" target=\"_blank\"' : ''}>${children}</a>`\n  },\n})\n"],"mappings":"AAGA,OAAO,MAAMA,sBAAA,GAK4DA,CAAC;EACxEC;AAAiB,CAClB,MAAM;EACLC,QAAA,EAAU,MAAAA,CAAO;IAAEC,IAAI;IAAEC,WAAW;IAAEC;EAAgB,CAAE;IACtD,MAAMC,QAAA,GAAW,CACf,MAAMF,WAAA,CAAY;MAChBG,KAAA,EAAOJ,IAAA,CAAKG;IACd,EAAC,EACDE,IAAI,CAAC;IAEP,OAAO,KAAKH,gBAAA,UAA0BF,IAAA,CAAKM,MAAM,CAACC,GAAG,IAAIP,IAAA,CAAKM,MAAM,CAACE,MAAM,GAAG,+CAA+C,MAAML,QAAA,MAAc;EACnJ;EACAM,IAAA,EAAM,MAAAA,CAAO;IAAET,IAAI;IAAEC,WAAW;IAAES,QAAQ;IAAER;EAAgB,CAAE;IAC5D,MAAMC,QAAA,GAAW,CACf,MAAMF,WAAA,CAAY;MAChBG,KAAA,EAAOJ,IAAA,CAAKG;IACd,EAAC,EACDE,IAAI,CAAC;IAEP,IAAIM,IAAA,GAAeX,IAAA,CAAKM,MAAM,CAACC,GAAG,IAAI;IACtC,IAAIP,IAAA,CAAKM,MAAM,CAACM,QAAQ,KAAK,YAAY;MACvC,IAAId,iBAAA,EAAmB;QACrBa,IAAA,GAAO,MAAMb,iBAAA,CAAkB;UAAEe,QAAA,EAAUb,IAAA;UAAMU;QAAS;MAC5D,OAAO;QACLI,OAAA,CAAQC,KAAK,CACX;QAEFJ,IAAA,GAAO,IAAI;QAAA;MACb;IACF;IAEA,OAAO,KAAKT,gBAAA,UAA0BS,IAAA,IAAQX,IAAA,CAAKM,MAAM,CAACE,MAAM,GAAG,+CAA+C,MAAML,QAAA,MAAc;EACxI;AACF","ignoreList":[]}