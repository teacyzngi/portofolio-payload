{"version":3,"file":"index.js","names":["getPayloadPopulateFn","convertLexicalToHTMLAsync","lexicalHTMLField","args","converters","hidden","htmlFieldName","lexicalFieldName","storeInDB","field","name","type","admin","editorOptions","language","hooks","afterRead","currentDepth","depth","draft","overrideAccess","req","showHiddenFields","siblingData","lexicalFieldData","htmlPopulateFn","payload","config","defaultDepth","data","populate","beforeChange"],"sources":["../../../../../../src/features/converters/lexicalToHtml/async/field/index.ts"],"sourcesContent":["import type { SerializedEditorState } from 'lexical'\nimport type { Field } from 'payload'\n\nimport type { HTMLConvertersAsync, HTMLConvertersFunctionAsync } from '../types.js'\n\nimport { getPayloadPopulateFn } from '../../../utilities/payloadPopulateFn.js'\nimport { convertLexicalToHTMLAsync } from '../index.js'\n\ntype Args = {\n  converters?: HTMLConvertersAsync | HTMLConvertersFunctionAsync\n  /**\n   * Whether the lexicalHTML field should be hidden in the admin panel\n   *\n   * @default true\n   */\n  hidden?: boolean\n  htmlFieldName: string\n  /**\n   * A string which matches the lexical field name you want to convert to HTML.\n   *\n   * This has to be a sibling field of this lexicalHTML field - otherwise, it won't be able to find the lexical field.\n   **/\n  lexicalFieldName: string\n  /**\n   * Whether the HTML should be stored in the database\n   *\n   * @default false\n   */\n  storeInDB?: boolean\n}\n\n/**\n *\n * Field that converts a sibling lexical field to HTML\n *\n * @todo will be renamed to lexicalHTML in 4.0, replacing the deprecated `lexicalHTML` converter\n */\nexport const lexicalHTMLField: (args: Args) => Field = (args) => {\n  const { converters, hidden = true, htmlFieldName, lexicalFieldName, storeInDB = false } = args\n  const field: Field = {\n    name: htmlFieldName,\n    type: 'code',\n    admin: {\n      editorOptions: {\n        language: 'html',\n      },\n      hidden,\n    },\n    hooks: {\n      afterRead: [\n        async ({\n          currentDepth,\n          depth,\n          draft,\n          overrideAccess,\n          req,\n          showHiddenFields,\n          siblingData,\n        }) => {\n          const lexicalFieldData: SerializedEditorState = siblingData[lexicalFieldName]\n\n          if (!lexicalFieldData) {\n            return ''\n          }\n\n          const htmlPopulateFn = await getPayloadPopulateFn({\n            currentDepth: currentDepth ?? 0,\n            depth: depth ?? req.payload.config.defaultDepth,\n            draft: draft ?? false,\n            overrideAccess: overrideAccess ?? false,\n            req,\n            showHiddenFields: showHiddenFields ?? false,\n          })\n\n          return await convertLexicalToHTMLAsync({\n            converters,\n            data: lexicalFieldData,\n            populate: htmlPopulateFn,\n          })\n        },\n      ],\n    },\n  }\n\n  if (!storeInDB) {\n    field.hooks = field.hooks ?? {}\n    field.hooks.beforeChange = [\n      ({ siblingData }) => {\n        delete siblingData[htmlFieldName]\n        return null\n      },\n    ]\n  }\n\n  return field\n}\n"],"mappings":"AAKA,SAASA,oBAAoB,QAAQ;AACrC,SAASC,yBAAyB,QAAQ;AAyB1C;;;;;;AAMA,OAAO,MAAMC,gBAAA,GAA2CC,IAAA;EACtD,MAAM;IAAEC,UAAU;IAAEC,MAAA,GAAS,IAAI;IAAEC,aAAa;IAAEC,gBAAgB;IAAEC,SAAA,GAAY;EAAK,CAAE,GAAGL,IAAA;EAC1F,MAAMM,KAAA,GAAe;IACnBC,IAAA,EAAMJ,aAAA;IACNK,IAAA,EAAM;IACNC,KAAA,EAAO;MACLC,aAAA,EAAe;QACbC,QAAA,EAAU;MACZ;MACAT;IACF;IACAU,KAAA,EAAO;MACLC,SAAA,EAAW,CACT,OAAO;QACLC,YAAY;QACZC,KAAK;QACLC,KAAK;QACLC,cAAc;QACdC,GAAG;QACHC,gBAAgB;QAChBC;MAAW,CACZ;QACC,MAAMC,gBAAA,GAA0CD,WAAW,CAAChB,gBAAA,CAAiB;QAE7E,IAAI,CAACiB,gBAAA,EAAkB;UACrB,OAAO;QACT;QAEA,MAAMC,cAAA,GAAiB,MAAMzB,oBAAA,CAAqB;UAChDiB,YAAA,EAAcA,YAAA,IAAgB;UAC9BC,KAAA,EAAOA,KAAA,IAASG,GAAA,CAAIK,OAAO,CAACC,MAAM,CAACC,YAAY;UAC/CT,KAAA,EAAOA,KAAA,IAAS;UAChBC,cAAA,EAAgBA,cAAA,IAAkB;UAClCC,GAAA;UACAC,gBAAA,EAAkBA,gBAAA,IAAoB;QACxC;QAEA,OAAO,MAAMrB,yBAAA,CAA0B;UACrCG,UAAA;UACAyB,IAAA,EAAML,gBAAA;UACNM,QAAA,EAAUL;QACZ;MACF;IAEJ;EACF;EAEA,IAAI,CAACjB,SAAA,EAAW;IACdC,KAAA,CAAMM,KAAK,GAAGN,KAAA,CAAMM,KAAK,IAAI,CAAC;IAC9BN,KAAA,CAAMM,KAAK,CAACgB,YAAY,GAAG,CACzB,CAAC;MAAER;IAAW,CAAE;MACd,OAAOA,WAAW,CAACjB,aAAA,CAAc;MACjC,OAAO;IACT,EACD;EACH;EAEA,OAAOG,KAAA;AACT","ignoreList":[]}