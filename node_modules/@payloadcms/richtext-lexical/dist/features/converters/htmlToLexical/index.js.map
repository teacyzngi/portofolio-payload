{"version":3,"file":"index.js","names":["createHeadlessEditor","$getRoot","$getSelection","getEnabledNodes","$generateNodesFromDOM","convertHTMLToLexical","editorConfig","html","JSDOM","headlessEditor","nodes","update","dom","window","document","select","selection","Error","insertNodes","discrete","editorJSON","getEditorState","toJSON"],"sources":["../../../../src/features/converters/htmlToLexical/index.ts"],"sourcesContent":["import { createHeadlessEditor } from '@lexical/headless'\nimport { $getRoot, $getSelection, type SerializedLexicalNode } from 'lexical'\n\nimport type { SanitizedServerEditorConfig } from '../../../lexical/config/types.js'\nimport type { DefaultNodeTypes, TypedEditorState } from '../../../nodeTypes.js'\n\nimport { getEnabledNodes } from '../../../lexical/nodes/index.js'\nimport { $generateNodesFromDOM } from '../../../lexical-proxy/@lexical-html.js'\n\nexport const convertHTMLToLexical = <TNodeTypes extends SerializedLexicalNode = DefaultNodeTypes>({\n  editorConfig,\n  html,\n  JSDOM,\n}: {\n  editorConfig: SanitizedServerEditorConfig\n  html: string\n  JSDOM: new (html: string) => {\n    window: {\n      document: Document\n    }\n  }\n}): TypedEditorState<TNodeTypes> => {\n  const headlessEditor = createHeadlessEditor({\n    nodes: getEnabledNodes({\n      editorConfig,\n    }),\n  })\n\n  headlessEditor.update(\n    () => {\n      const dom = new JSDOM(html)\n\n      const nodes = $generateNodesFromDOM(headlessEditor, dom.window.document)\n\n      $getRoot().select()\n\n      const selection = $getSelection()\n      if (selection === null) {\n        throw new Error('Selection is null')\n      }\n      selection.insertNodes(nodes)\n    },\n    { discrete: true },\n  )\n\n  const editorJSON = headlessEditor.getEditorState().toJSON()\n\n  return editorJSON as TypedEditorState<TNodeTypes>\n}\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ;AACrC,SAASC,QAAQ,EAAEC,aAAa,QAAoC;AAKpE,SAASC,eAAe,QAAQ;AAChC,SAASC,qBAAqB,QAAQ;AAEtC,OAAO,MAAMC,oBAAA,GAAuBA,CAA8D;EAChGC,YAAY;EACZC,IAAI;EACJC;AAAK,CASN;EACC,MAAMC,cAAA,GAAiBT,oBAAA,CAAqB;IAC1CU,KAAA,EAAOP,eAAA,CAAgB;MACrBG;IACF;EACF;EAEAG,cAAA,CAAeE,MAAM,CACnB;IACE,MAAMC,GAAA,GAAM,IAAIJ,KAAA,CAAMD,IAAA;IAEtB,MAAMG,KAAA,GAAQN,qBAAA,CAAsBK,cAAA,EAAgBG,GAAA,CAAIC,MAAM,CAACC,QAAQ;IAEvEb,QAAA,GAAWc,MAAM;IAEjB,MAAMC,SAAA,GAAYd,aAAA;IAClB,IAAIc,SAAA,KAAc,MAAM;MACtB,MAAM,IAAIC,KAAA,CAAM;IAClB;IACAD,SAAA,CAAUE,WAAW,CAACR,KAAA;EACxB,GACA;IAAES,QAAA,EAAU;EAAK;EAGnB,MAAMC,UAAA,GAAaX,cAAA,CAAeY,cAAc,GAAGC,MAAM;EAEzD,OAAOF,UAAA;AACT","ignoreList":[]}