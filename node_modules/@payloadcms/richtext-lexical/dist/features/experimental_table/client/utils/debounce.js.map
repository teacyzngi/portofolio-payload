{"version":3,"file":"debounce.js","names":["FUNC_ERROR_TEXT","nativeMax","Math","max","nativeMin","min","debounce","func","wait","options","lastArgs","lastCallTime","lastInvokeTime","lastThis","leading","maxing","maxWait","result","timerID","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","shouldInvoke","Date","now","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","arguments"],"sources":["../../../../../src/features/experimental_table/client/utils/debounce.ts"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck - not worth it migrate jsdoc to tsdoc\n'use client'\n// Copied & modified from https://github.com/lodash/lodash/blob/main/src/debounce.ts\n/*\nThe MIT License\n\nCopyright JS Foundation and other contributors <https://js.foundation/>\n\nBased on Underscore.js, copyright Jeremy Ashkenas,\nDocumentCloud and Investigative Reporters & Editors <http://underscorejs.org/>\n\nThis software consists of voluntary contributions made by many\nindividuals. For exact contribution history, see the revision history\navailable at https://github.com/lodash/lodash\n\nThe following license applies to all parts of this software except as\ndocumented below:\n\n====\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n====\n\nCopyright and related rights for sample code are waived via CC0. Sample\ncode is defined as all source code displayed within the prose of the\ndocumentation.\n\nCC0: http://creativecommons.org/publicdomain/zero/1.0/\n\n====\n\nFiles located in the node_modules and vendor directories are externally\nmaintained libraries used by this software which have their own\nlicenses; we recommend you read them, as their terms may differ from the\nterms above.\n */\n\n/** Error message constants. */\nconst FUNC_ERROR_TEXT = 'Expected a function'\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nconst nativeMax = Math.max,\n  nativeMin = Math.min\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [sortOnOptions={}] The options object.\n * @param {boolean} [sortOnOptions.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [sortOnOptions.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [sortOnOptions.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  let lastArgs,\n    lastCallTime,\n    lastInvokeTime = 0,\n    lastThis,\n    leading = false,\n    maxing = false,\n    maxWait,\n    result,\n    timerID,\n    trailing = true\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT)\n  }\n  wait = wait || 0\n  if (typeof options === 'object') {\n    leading = !!options.leading\n    maxing = 'maxWait' in options\n    maxWait = maxing ? nativeMax(options.maxWait || 0, wait) : maxWait\n    trailing = 'trailing' in options ? !!options.trailing : trailing\n  }\n\n  function invokeFunc(time) {\n    const args = lastArgs,\n      thisArg = lastThis\n\n    lastArgs = lastThis = undefined\n    lastInvokeTime = time\n    result = func.apply(thisArg, args)\n    return result\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time\n    // Start the timer for the trailing edge.\n    timerID = setTimeout(timerExpired, wait)\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result\n  }\n\n  function remainingWait(time) {\n    const timeSinceLastCall = time - lastCallTime,\n      timeSinceLastInvoke = time - lastInvokeTime,\n      timeWaiting = wait - timeSinceLastCall\n\n    return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting\n  }\n\n  function shouldInvoke(time) {\n    const timeSinceLastCall = time - lastCallTime,\n      timeSinceLastInvoke = time - lastInvokeTime\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (\n      lastCallTime === undefined ||\n      timeSinceLastCall >= wait ||\n      timeSinceLastCall < 0 ||\n      (maxing && timeSinceLastInvoke >= maxWait)\n    )\n  }\n\n  function timerExpired() {\n    const time = Date.now()\n    if (shouldInvoke(time)) {\n      return trailingEdge(time)\n    }\n    // Restart the timer.\n    timerID = setTimeout(timerExpired, remainingWait(time))\n  }\n\n  function trailingEdge(time) {\n    timerID = undefined\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time)\n    }\n    lastArgs = lastThis = undefined\n    return result\n  }\n\n  function cancel() {\n    if (timerID !== undefined) {\n      clearTimeout(timerID)\n    }\n    lastInvokeTime = 0\n    lastArgs = lastCallTime = lastThis = timerID = undefined\n  }\n\n  function flush() {\n    return timerID === undefined ? result : trailingEdge(Date.now())\n  }\n\n  function debounced() {\n    const time = Date.now(),\n      isInvoking = shouldInvoke(time)\n\n    // eslint-disable-next-line prefer-rest-params\n    lastArgs = arguments\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    lastThis = this\n    lastCallTime = time\n\n    if (isInvoking) {\n      if (timerID === undefined) {\n        return leadingEdge(lastCallTime)\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerID)\n        timerID = setTimeout(timerExpired, wait)\n        return invokeFunc(lastCallTime)\n      }\n    }\n    if (timerID === undefined) {\n      timerID = setTimeout(timerExpired, wait)\n    }\n    return result\n  }\n  debounced.cancel = cancel\n  debounced.flush = flush\n  return debounced\n}\n\n// eslint-disable-next-line no-restricted-exports\nexport default debounce\n"],"mappings":"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","ignoreList":[]}