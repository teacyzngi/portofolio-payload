{"version":3,"file":"converter.js","names":["convertLexicalPluginNodesToLexical","ListItemConverter","converter","childIndex","converters","lexicalPluginNode","quiet","type","checked","undefined","children","lexicalPluginNodes","parentNodeType","value","version","nodeTypes"],"sources":["../../../../../../../src/features/migrations/lexicalPluginToLexical/converter/converters/listItem/converter.ts"],"sourcesContent":["import type { SerializedListItemNode } from '../../../../../lists/plugin/index.js'\nimport type { LexicalPluginNodeConverter } from '../../types.js'\n\nimport { convertLexicalPluginNodesToLexical } from '../../index.js'\n\nexport const ListItemConverter: LexicalPluginNodeConverter = {\n  converter({ childIndex, converters, lexicalPluginNode, quiet }) {\n    return {\n      ...lexicalPluginNode,\n      type: 'listitem',\n      checked: undefined,\n      children: convertLexicalPluginNodesToLexical({\n        converters,\n        lexicalPluginNodes: lexicalPluginNode.children,\n        parentNodeType: 'listitem',\n        quiet,\n      }),\n      value: childIndex + 1,\n      version: 1,\n    } as const as SerializedListItemNode\n  },\n  nodeTypes: ['listitem'],\n}\n"],"mappings":"AAGA,SAASA,kCAAkC,QAAQ;AAEnD,OAAO,MAAMC,iBAAA,GAAgD;EAC3DC,UAAU;IAAEC,UAAU;IAAEC,UAAU;IAAEC,iBAAiB;IAAEC;EAAK,CAAE;IAC5D,OAAO;MACL,GAAGD,iBAAiB;MACpBE,IAAA,EAAM;MACNC,OAAA,EAASC,SAAA;MACTC,QAAA,EAAUV,kCAAA,CAAmC;QAC3CI,UAAA;QACAO,kBAAA,EAAoBN,iBAAA,CAAkBK,QAAQ;QAC9CE,cAAA,EAAgB;QAChBN;MACF;MACAO,KAAA,EAAOV,UAAA,GAAa;MACpBW,OAAA,EAAS;IACX;EACF;EACAC,SAAA,EAAW,CAAC;AACd","ignoreList":[]}