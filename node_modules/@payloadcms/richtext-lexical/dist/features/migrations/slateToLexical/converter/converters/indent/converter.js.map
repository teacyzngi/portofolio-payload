{"version":3,"file":"converter.js","names":["convertSlateNodesToLexical","SlateIndentConverter","converter","converters","slateNode","convertChildren","node","indentLevel","type","children","text","canContainParagraphs","parentNodeType","slateNodes","indent","map","child","direction","format","version","nodeTypes"],"sources":["../../../../../../../src/features/migrations/slateToLexical/converter/converters/indent/converter.ts"],"sourcesContent":["import type { SerializedLexicalNode, SerializedParagraphNode } from 'lexical'\n\nimport type { SlateNodeConverter } from '../../types.js'\n\nimport { convertSlateNodesToLexical } from '../../index.js'\n\nexport const SlateIndentConverter: SlateNodeConverter = {\n  converter({ converters, slateNode }) {\n    const convertChildren = (node: any, indentLevel: number = 0): SerializedLexicalNode => {\n      if (\n        (node?.type && (!node.children || node.type !== 'indent')) ||\n        (!node?.type && node?.text)\n      ) {\n        return {\n          ...convertSlateNodesToLexical({\n            canContainParagraphs: false,\n            converters,\n            parentNodeType: 'indent',\n            slateNodes: [node],\n          })[0],\n          indent: indentLevel,\n        } as const as SerializedLexicalNode\n      }\n\n      const children = node.children.map((child: any) => convertChildren(child, indentLevel + 1))\n      return {\n        type: 'paragraph',\n        children,\n        direction: 'ltr',\n        format: '',\n        indent: indentLevel,\n        version: 1,\n      } as const as SerializedParagraphNode\n    }\n\n    return convertChildren(slateNode)\n  },\n  nodeTypes: ['indent'],\n}\n"],"mappings":"AAIA,SAASA,0BAA0B,QAAQ;AAE3C,OAAO,MAAMC,oBAAA,GAA2C;EACtDC,UAAU;IAAEC,UAAU;IAAEC;EAAS,CAAE;IACjC,MAAMC,eAAA,GAAkBA,CAACC,IAAA,EAAWC,WAAA,GAAsB,CAAC;MACzD,IACED,IAAC,EAAME,IAAA,KAAS,CAACF,IAAA,CAAKG,QAAQ,IAAIH,IAAA,CAAKE,IAAI,KAAK,QAAO,KACtD,CAACF,IAAA,EAAME,IAAA,IAAQF,IAAA,EAAMI,IAAA,EACtB;QACA,OAAO;UACL,GAAGV,0BAAA,CAA2B;YAC5BW,oBAAA,EAAsB;YACtBR,UAAA;YACAS,cAAA,EAAgB;YAChBC,UAAA,EAAY,CAACP,IAAA;UACf,EAAE,CAAC,EAAE;UACLQ,MAAA,EAAQP;QACV;MACF;MAEA,MAAME,QAAA,GAAWH,IAAA,CAAKG,QAAQ,CAACM,GAAG,CAAEC,KAAA,IAAeX,eAAA,CAAgBW,KAAA,EAAOT,WAAA,GAAc;MACxF,OAAO;QACLC,IAAA,EAAM;QACNC,QAAA;QACAQ,SAAA,EAAW;QACXC,MAAA,EAAQ;QACRJ,MAAA,EAAQP,WAAA;QACRY,OAAA,EAAS;MACX;IACF;IAEA,OAAOd,eAAA,CAAgBD,SAAA;EACzB;EACAgB,SAAA,EAAW,CAAC;AACd","ignoreList":[]}