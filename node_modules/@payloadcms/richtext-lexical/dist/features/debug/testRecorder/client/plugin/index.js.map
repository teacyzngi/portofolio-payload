{"version":3,"file":"index.js","names":["c","_c","useLexicalComposerContext","$createParagraphNode","$createTextNode","$getRoot","getDOMSelection","React","useCallback","useEffect","useLayoutEffect","useRef","useState","IS_APPLE","copy","text","textArea","document","createElement","value","style","position","opacity","body","appendChild","focus","select","result","execCommand","console","log","error","removeChild","download","filename","a","setAttribute","encodeURIComponent","display","click","formatStep","step","formatOneStep","name","x","y","anchorPath","toString","anchorOffset","focusPath","focusOffset","formattedStep","count","join","isSelectAll","event","key","toLowerCase","metaKey","ctrlKey","sanitizeSelection","selection","anchorNode","focusNode","getPathFromNodeToEditor","node","rootElement","currentNode","path","undefined","unshift","Array","from","parentNode","childNodes","indexOf","keyPresses","Set","useTestRecorder","editor","steps","setSteps","isRecording","setIsRecording","setCurrentInnerHTML","templatedTest","setTemplatedTest","previousSelectionRef","skipNextSelectionChangeRef","preRef","getCurrentEditor","generateTestContent","getRootElement","browserSelection","_window","contains","map","pushStep","currentSteps","currentIndex","length","lastStep","slice","onKeyDown","has","onKeyUp","registerRootListener","prevRootElement","removeEventListener","addEventListener","current","scrollTo","scrollHeight","testContent","removeUpdateListener","registerUpdateListener","dirtyElements","dirtyLeaves","editorState","currentSelection","_selection","previousSelection","skipNextSelectionChange","size","innerHTML","toggleEditorSelection","currentEditor","update","root","clear","append","currentIsRecording","onSnapshotClick","onCopyClick","onDownloadClick","button","_jsx","className","id","onClick","e","preventDefault","title","type","output","_jsxs","ref","TestRecorderPlugin","$","testRecorderButton","testRecorderOutput","t0","Fragment","children"],"sources":["../../../../../../src/features/debug/testRecorder/client/plugin/index.tsx"],"sourcesContent":["'use client'\nimport type { BaseSelection, LexicalEditor } from 'lexical'\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext.js'\nimport { $createParagraphNode, $createTextNode, $getRoot, getDOMSelection } from 'lexical'\nimport * as React from 'react'\nimport { type JSX, useCallback, useEffect, useLayoutEffect, useRef, useState } from 'react'\n\nimport type { PluginComponent } from '../../../../typesClient.js'\n\nimport { IS_APPLE } from '../../../../../lexical/utils/environment.js'\nimport './index.scss'\n\nconst copy = (text: null | string) => {\n  const textArea = document.createElement('textarea')\n  textArea.value = text || ''\n  textArea.style.position = 'absolute'\n  textArea.style.opacity = '0'\n  document.body?.appendChild(textArea)\n  textArea.focus()\n  textArea.select()\n  try {\n    const result = document.execCommand('copy')\n    // eslint-disable-next-line no-console\n    console.log(result)\n  } catch (error) {\n    console.error(error)\n  }\n  document.body?.removeChild(textArea)\n}\n\nconst download = (filename: string, text: null | string) => {\n  const a = document.createElement('a')\n  a.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text || ''))\n  a.setAttribute('download', filename)\n  a.style.display = 'none'\n  document.body?.appendChild(a)\n  a.click()\n  document.body?.removeChild(a)\n}\n\nconst formatStep = (step: Step) => {\n  const formatOneStep = (name: string, value: Step['value']) => {\n    switch (name) {\n      case 'click': {\n        return `      await page.mouse.click(${value.x}, ${value.y});`\n      }\n      case 'keydown': {\n        return `      await page.keyboard.keydown('${value}');`\n      }\n      case 'keyup': {\n        return `      await page.keyboard.keyup('${value}');`\n      }\n      case 'press': {\n        return `      await page.keyboard.press('${value}');`\n      }\n      case 'selectAll': {\n        return `      await selectAll(page);`\n      }\n      case 'snapshot': {\n        return `      await assertHTMLSnapshot(page);\n      await assertSelection(page, {\n        anchorPath: [${value.anchorPath.toString()}],\n        anchorOffset: ${value.anchorOffset},\n        focusPath: [${value.focusPath.toString()}],\n        focusOffset: ${value.focusOffset},\n      });\n`\n      }\n      case 'type': {\n        return `      await page.keyboard.type('${value}');`\n      }\n      default:\n        return ``\n    }\n  }\n  const formattedStep = formatOneStep(step.name, step.value)\n  switch (step.count) {\n    case 1:\n      return formattedStep\n    case 2:\n      return [formattedStep, formattedStep].join(`\\n`)\n    default:\n      return `      await repeat(${step.count}, async () => {\n  ${formattedStep}\n      );`\n  }\n}\n\nexport function isSelectAll(event: KeyboardEvent): boolean {\n  return event.key.toLowerCase() === 'a' && (IS_APPLE ? event.metaKey : event.ctrlKey)\n}\n\n// stolen from LexicalSelection-test\nfunction sanitizeSelection(selection: Selection) {\n  const { anchorNode, focusNode } = selection\n  let { anchorOffset, focusOffset } = selection\n  if (anchorOffset !== 0) {\n    anchorOffset--\n  }\n  if (focusOffset !== 0) {\n    focusOffset--\n  }\n  return { anchorNode, anchorOffset, focusNode, focusOffset }\n}\n\nfunction getPathFromNodeToEditor(node: Node, rootElement: HTMLElement | null) {\n  let currentNode: Node | null | undefined = node\n  const path: number[] = []\n  while (currentNode !== rootElement) {\n    if (currentNode !== null && currentNode !== undefined) {\n      path.unshift(\n        Array.from(currentNode?.parentNode?.childNodes ?? []).indexOf(currentNode as ChildNode),\n      )\n    }\n    currentNode = currentNode?.parentNode\n  }\n  return path\n}\n\nconst keyPresses = new Set([\n  'ArrowDown',\n  'ArrowLeft',\n  'ArrowRight',\n  'ArrowUp',\n  'Backspace',\n  'Delete',\n  'Enter',\n  'Escape',\n])\n\ntype Step = {\n  count: number\n  name: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value: any\n}\n\ntype Steps = Step[]\n\nfunction useTestRecorder(editor: LexicalEditor): [JSX.Element, JSX.Element | null] {\n  const [steps, setSteps] = useState<Steps>([])\n  const [isRecording, setIsRecording] = useState(false)\n  const [, setCurrentInnerHTML] = useState('')\n  const [templatedTest, setTemplatedTest] = useState('')\n  const previousSelectionRef = useRef<BaseSelection | null>(null)\n  const skipNextSelectionChangeRef = useRef(false)\n  const preRef = useRef<HTMLPreElement>(null)\n\n  const getCurrentEditor = useCallback(() => {\n    return editor\n  }, [editor])\n\n  const generateTestContent = useCallback(() => {\n    const rootElement = editor.getRootElement()\n    const browserSelection = getDOMSelection(editor._window)\n\n    if (\n      rootElement == null ||\n      browserSelection == null ||\n      browserSelection.anchorNode == null ||\n      browserSelection.focusNode == null ||\n      !rootElement.contains(browserSelection.anchorNode) ||\n      !rootElement.contains(browserSelection.focusNode)\n    ) {\n      return null\n    }\n\n    return `\nimport {\n  initializeE2E,\n  assertHTMLSnapshot,\n  assertSelection,\n  repeat,\n} from '../utils';\nimport {selectAll} from '../keyboardShortcuts';\nimport { RangeSelection } from 'lexical';\nimport { NodeSelection } from 'lexical';\n\ndescribe('Test case', () => {\n  initializeE2E((e2e) => {\n    it('Should pass this test', async () => {\n      const {page} = e2e;\n\n      await page.focus('div[contenteditable=\"true\"]');\n${steps.map(formatStep).join(`\\n`)}\n    });\n});\n    `\n  }, [editor, steps])\n\n  // just a wrapper around inserting new actions so that we can\n  // coalesce some actions like insertText/moveNativeSelection\n  const pushStep = useCallback(\n    (name: string, value: Step['value']) => {\n      setSteps((currentSteps) => {\n        // trying to group steps\n        const currentIndex = steps.length - 1\n        const lastStep = steps[currentIndex]\n        if (lastStep) {\n          if (lastStep.name === name) {\n            if (name === 'type') {\n              // for typing events we just append the text\n              return [\n                ...steps.slice(0, currentIndex),\n                { ...lastStep, value: lastStep.value + value },\n              ]\n            } else {\n              // for other events we bump the counter if their values are the same\n              if (lastStep.value === value) {\n                return [...steps.slice(0, currentIndex), { ...lastStep, count: lastStep.count + 1 }]\n              }\n            }\n          }\n        }\n        // could not group, just append a new one\n        return [...currentSteps, { name, count: 1, value }]\n      })\n    },\n    [steps, setSteps],\n  )\n\n  useLayoutEffect(() => {\n    const onKeyDown = (event: KeyboardEvent) => {\n      if (!isRecording) {\n        return\n      }\n      const key = event.key\n      if (isSelectAll(event)) {\n        pushStep('selectAll', '')\n      } else if (keyPresses.has(key)) {\n        pushStep('press', event.key)\n      } else if ([...key].length > 1) {\n        pushStep('keydown', event.key)\n      } else {\n        pushStep('type', event.key)\n      }\n    }\n\n    const onKeyUp = (event: KeyboardEvent) => {\n      if (!isRecording) {\n        return\n      }\n      const key = event.key\n      if (!keyPresses.has(key) && [...key].length > 1) {\n        pushStep('keyup', event.key)\n      }\n    }\n\n    return editor.registerRootListener(\n      (rootElement: HTMLElement | null, prevRootElement: HTMLElement | null) => {\n        if (prevRootElement !== null) {\n          prevRootElement.removeEventListener('keydown', onKeyDown)\n          prevRootElement.removeEventListener('keyup', onKeyUp)\n        }\n        if (rootElement !== null) {\n          rootElement.addEventListener('keydown', onKeyDown)\n          rootElement.addEventListener('keyup', onKeyUp)\n        }\n      },\n    )\n  }, [editor, isRecording, pushStep])\n\n  useLayoutEffect(() => {\n    if (preRef.current) {\n      preRef.current.scrollTo(0, preRef.current.scrollHeight)\n    }\n  }, [generateTestContent])\n\n  useEffect(() => {\n    if (steps) {\n      const testContent = generateTestContent()\n      if (testContent !== null) {\n        setTemplatedTest(testContent)\n      }\n      if (preRef.current) {\n        preRef.current.scrollTo(0, preRef.current.scrollHeight)\n      }\n    }\n  }, [generateTestContent, steps])\n\n  useEffect(() => {\n    const removeUpdateListener = editor.registerUpdateListener(\n      ({ dirtyElements, dirtyLeaves, editorState }) => {\n        if (!isRecording) {\n          return\n        }\n        const currentSelection = editorState._selection\n        const previousSelection = previousSelectionRef.current\n        const skipNextSelectionChange = skipNextSelectionChangeRef.current\n        if (previousSelection !== currentSelection) {\n          if (dirtyLeaves.size === 0 && dirtyElements.size === 0 && !skipNextSelectionChange) {\n            const browserSelection = getDOMSelection(editor._window)\n            if (\n              browserSelection &&\n              (browserSelection.anchorNode == null || browserSelection.focusNode == null)\n            ) {\n              return\n            }\n          }\n          previousSelectionRef.current = currentSelection\n        }\n        skipNextSelectionChangeRef.current = false\n        const testContent = generateTestContent()\n        if (testContent !== null) {\n          setTemplatedTest(testContent)\n        }\n      },\n    )\n    return removeUpdateListener\n  }, [editor, generateTestContent, isRecording, pushStep])\n\n  // save innerHTML\n  useEffect(() => {\n    if (!isRecording) {\n      return\n    }\n    const removeUpdateListener = editor.registerUpdateListener(() => {\n      const rootElement = editor.getRootElement()\n      if (rootElement !== null) {\n        setCurrentInnerHTML(rootElement?.innerHTML)\n      }\n    })\n    return removeUpdateListener\n  }, [editor, isRecording])\n\n  // clear editor and start recording\n  const toggleEditorSelection = useCallback(\n    (currentEditor: LexicalEditor) => {\n      if (!isRecording) {\n        currentEditor.update(() => {\n          const root = $getRoot()\n          root.clear()\n          const text = $createTextNode()\n          root.append($createParagraphNode().append(text))\n          text.select()\n        })\n        setSteps([])\n      }\n      setIsRecording((currentIsRecording) => !currentIsRecording)\n    },\n    [isRecording],\n  )\n\n  const onSnapshotClick = useCallback(() => {\n    if (!isRecording) {\n      return\n    }\n    const browserSelection = getDOMSelection(editor._window)\n    if (\n      browserSelection === null ||\n      browserSelection.anchorNode == null ||\n      browserSelection.focusNode == null\n    ) {\n      return\n    }\n    const { anchorNode, anchorOffset, focusNode, focusOffset } = sanitizeSelection(browserSelection)\n    const rootElement = getCurrentEditor().getRootElement()\n    let anchorPath\n    if (anchorNode !== null) {\n      anchorPath = getPathFromNodeToEditor(anchorNode, rootElement)\n    }\n    let focusPath\n    if (focusNode !== null) {\n      focusPath = getPathFromNodeToEditor(focusNode, rootElement)\n    }\n    pushStep('snapshot', {\n      anchorNode,\n      anchorOffset,\n      anchorPath,\n      focusNode,\n      focusOffset,\n      focusPath,\n    })\n  }, [pushStep, isRecording, getCurrentEditor])\n\n  const onCopyClick = useCallback(() => {\n    copy(generateTestContent())\n  }, [generateTestContent])\n\n  const onDownloadClick = useCallback(() => {\n    download('test.js', generateTestContent())\n  }, [generateTestContent])\n\n  const button = (\n    <button\n      className={`editor-dev-button ${isRecording ? 'active' : ''}`}\n      id=\"test-recorder-button\"\n      onClick={(e) => {\n        toggleEditorSelection(getCurrentEditor())\n        e.preventDefault()\n      }}\n      title={isRecording ? 'Disable test recorder' : 'Enable test recorder'}\n      type=\"button\"\n    >\n      {isRecording ? 'Disable test recorder' : 'Enable test recorder'}\n    </button>\n  )\n  const output = isRecording ? (\n    <div className=\"test-recorder-output\">\n      <div className=\"test-recorder-toolbar\">\n        <button\n          className=\"test-recorder-button\"\n          id=\"test-recorder-button-snapshot\"\n          onClick={(e) => {\n            onSnapshotClick()\n            e.preventDefault()\n          }}\n          title=\"Insert snapshot\"\n          type=\"button\"\n        >\n          Insert Snapshot\n        </button>\n        <button\n          className=\"test-recorder-button\"\n          id=\"test-recorder-button-copy\"\n          onClick={(e) => {\n            onCopyClick()\n            e.preventDefault()\n          }}\n          title=\"Copy to clipboard\"\n          type=\"button\"\n        >\n          Copy\n        </button>\n        <button\n          className=\"test-recorder-button\"\n          id=\"test-recorder-button-download\"\n          onClick={(e) => {\n            onDownloadClick()\n            e.preventDefault()\n          }}\n          title=\"Download as a file\"\n          type=\"button\"\n        >\n          Download\n        </button>\n      </div>\n      <pre id=\"test-recorder\" ref={preRef}>\n        {templatedTest}\n      </pre>\n    </div>\n  ) : null\n\n  return [button, output]\n}\nexport const TestRecorderPlugin: PluginComponent<undefined> = () => {\n  const [editor] = useLexicalComposerContext()\n  const [testRecorderButton, testRecorderOutput] = useTestRecorder(editor)\n\n  return (\n    <React.Fragment>\n      <p>HI</p>\n      {testRecorderButton}\n      {testRecorderOutput}\n      <p>DONE</p>\n    </React.Fragment>\n  )\n}\n"],"mappings":"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","ignoreList":[]}