{"version":3,"file":"index.js","names":["$isElementNode","$isRangeSelection","FORMAT_ELEMENT_COMMAND","AlignCenterIcon","AlignJustifyIcon","AlignLeftIcon","AlignRightIcon","createClientFeature","toolbarAlignGroupWithItems","toolbarGroups","ChildComponent","isActive","selection","node","getNodes","getFormatType","parent","getParent","key","label","i18n","t","onSelect","editor","dispatchCommand","order","AlignFeatureClient","toolbarFixed","groups","toolbarInline"],"sources":["../../../../src/features/align/client/index.tsx"],"sourcesContent":["'use client'\n\nimport { $isElementNode, $isRangeSelection, FORMAT_ELEMENT_COMMAND } from 'lexical'\n\nimport type { ToolbarGroup } from '../../toolbars/types.js'\n\nimport { AlignCenterIcon } from '../../../lexical/ui/icons/AlignCenter/index.js'\nimport { AlignJustifyIcon } from '../../../lexical/ui/icons/AlignJustify/index.js'\nimport { AlignLeftIcon } from '../../../lexical/ui/icons/AlignLeft/index.js'\nimport { AlignRightIcon } from '../../../lexical/ui/icons/AlignRight/index.js'\nimport { createClientFeature } from '../../../utilities/createClientFeature.js'\nimport { toolbarAlignGroupWithItems } from './toolbarAlignGroup.js'\n\nconst toolbarGroups: ToolbarGroup[] = [\n  toolbarAlignGroupWithItems([\n    {\n      ChildComponent: AlignLeftIcon,\n      isActive: ({ selection }) => {\n        if (!$isRangeSelection(selection)) {\n          return false\n        }\n        for (const node of selection.getNodes()) {\n          if ($isElementNode(node)) {\n            if (node.getFormatType() === 'left') {\n              continue\n            }\n          }\n\n          const parent = node.getParent()\n          if ($isElementNode(parent)) {\n            if (parent.getFormatType() === 'left') {\n              continue\n            }\n          }\n\n          return false\n        }\n        return true\n      },\n      key: 'alignLeft',\n      label: ({ i18n }) => {\n        return i18n.t('lexical:align:alignLeftLabel')\n      },\n      onSelect: ({ editor }) => {\n        editor.dispatchCommand(FORMAT_ELEMENT_COMMAND, 'left')\n      },\n      order: 1,\n    },\n    {\n      ChildComponent: AlignCenterIcon,\n      isActive: ({ selection }) => {\n        if (!$isRangeSelection(selection)) {\n          return false\n        }\n        for (const node of selection.getNodes()) {\n          if ($isElementNode(node)) {\n            if (node.getFormatType() === 'center') {\n              continue\n            }\n          }\n\n          const parent = node.getParent()\n          if ($isElementNode(parent)) {\n            if (parent.getFormatType() === 'center') {\n              continue\n            }\n          }\n\n          return false\n        }\n        return true\n      },\n      key: 'alignCenter',\n      label: ({ i18n }) => {\n        return i18n.t('lexical:align:alignCenterLabel')\n      },\n      onSelect: ({ editor }) => {\n        editor.dispatchCommand(FORMAT_ELEMENT_COMMAND, 'center')\n      },\n      order: 2,\n    },\n    {\n      ChildComponent: AlignRightIcon,\n      isActive: ({ selection }) => {\n        if (!$isRangeSelection(selection)) {\n          return false\n        }\n        for (const node of selection.getNodes()) {\n          if ($isElementNode(node)) {\n            if (node.getFormatType() === 'right') {\n              continue\n            }\n          }\n\n          const parent = node.getParent()\n          if ($isElementNode(parent)) {\n            if (parent.getFormatType() === 'right') {\n              continue\n            }\n          }\n\n          return false\n        }\n        return true\n      },\n      key: 'alignRight',\n      label: ({ i18n }) => {\n        return i18n.t('lexical:align:alignRightLabel')\n      },\n      onSelect: ({ editor }) => {\n        editor.dispatchCommand(FORMAT_ELEMENT_COMMAND, 'right')\n      },\n      order: 3,\n    },\n    {\n      ChildComponent: AlignJustifyIcon,\n      isActive: ({ selection }) => {\n        if (!$isRangeSelection(selection)) {\n          return false\n        }\n        for (const node of selection.getNodes()) {\n          if ($isElementNode(node)) {\n            if (node.getFormatType() === 'justify') {\n              continue\n            }\n          }\n\n          const parent = node.getParent()\n          if ($isElementNode(parent)) {\n            if (parent.getFormatType() === 'justify') {\n              continue\n            }\n          }\n\n          return false\n        }\n        return true\n      },\n      key: 'alignJustify',\n      label: ({ i18n }) => {\n        return i18n.t('lexical:align:alignJustifyLabel')\n      },\n      onSelect: ({ editor }) => {\n        editor.dispatchCommand(FORMAT_ELEMENT_COMMAND, 'justify')\n      },\n      order: 4,\n    },\n  ]),\n]\n\nexport const AlignFeatureClient = createClientFeature({\n  toolbarFixed: {\n    groups: toolbarGroups,\n  },\n  toolbarInline: {\n    groups: toolbarGroups,\n  },\n})\n"],"mappings":"AAAA;;AAEA,SAASA,cAAc,EAAEC,iBAAiB,EAAEC,sBAAsB,QAAQ;AAI1E,SAASC,eAAe,QAAQ;AAChC,SAASC,gBAAgB,QAAQ;AACjC,SAASC,aAAa,QAAQ;AAC9B,SAASC,cAAc,QAAQ;AAC/B,SAASC,mBAAmB,QAAQ;AACpC,SAASC,0BAA0B,QAAQ;AAE3C,MAAMC,aAAA,GAAgC,CACpCD,0BAAA,CAA2B,CACzB;EACEE,cAAA,EAAgBL,aAAA;EAChBM,QAAA,EAAUA,CAAC;IAAEC;EAAS,CAAE;IACtB,IAAI,CAACX,iBAAA,CAAkBW,SAAA,GAAY;MACjC,OAAO;IACT;IACA,KAAK,MAAMC,IAAA,IAAQD,SAAA,CAAUE,QAAQ,IAAI;MACvC,IAAId,cAAA,CAAea,IAAA,GAAO;QACxB,IAAIA,IAAA,CAAKE,aAAa,OAAO,QAAQ;UACnC;QACF;MACF;MAEA,MAAMC,MAAA,GAASH,IAAA,CAAKI,SAAS;MAC7B,IAAIjB,cAAA,CAAegB,MAAA,GAAS;QAC1B,IAAIA,MAAA,CAAOD,aAAa,OAAO,QAAQ;UACrC;QACF;MACF;MAEA,OAAO;IACT;IACA,OAAO;EACT;EACAG,GAAA,EAAK;EACLC,KAAA,EAAOA,CAAC;IAAEC;EAAI,CAAE;IACd,OAAOA,IAAA,CAAKC,CAAC,CAAC;EAChB;EACAC,QAAA,EAAUA,CAAC;IAAEC;EAAM,CAAE;IACnBA,MAAA,CAAOC,eAAe,CAACtB,sBAAA,EAAwB;EACjD;EACAuB,KAAA,EAAO;AACT,GACA;EACEf,cAAA,EAAgBP,eAAA;EAChBQ,QAAA,EAAUA,CAAC;IAAEC;EAAS,CAAE;IACtB,IAAI,CAACX,iBAAA,CAAkBW,SAAA,GAAY;MACjC,OAAO;IACT;IACA,KAAK,MAAMC,IAAA,IAAQD,SAAA,CAAUE,QAAQ,IAAI;MACvC,IAAId,cAAA,CAAea,IAAA,GAAO;QACxB,IAAIA,IAAA,CAAKE,aAAa,OAAO,UAAU;UACrC;QACF;MACF;MAEA,MAAMC,MAAA,GAASH,IAAA,CAAKI,SAAS;MAC7B,IAAIjB,cAAA,CAAegB,MAAA,GAAS;QAC1B,IAAIA,MAAA,CAAOD,aAAa,OAAO,UAAU;UACvC;QACF;MACF;MAEA,OAAO;IACT;IACA,OAAO;EACT;EACAG,GAAA,EAAK;EACLC,KAAA,EAAOA,CAAC;IAAEC;EAAI,CAAE;IACd,OAAOA,IAAA,CAAKC,CAAC,CAAC;EAChB;EACAC,QAAA,EAAUA,CAAC;IAAEC;EAAM,CAAE;IACnBA,MAAA,CAAOC,eAAe,CAACtB,sBAAA,EAAwB;EACjD;EACAuB,KAAA,EAAO;AACT,GACA;EACEf,cAAA,EAAgBJ,cAAA;EAChBK,QAAA,EAAUA,CAAC;IAAEC;EAAS,CAAE;IACtB,IAAI,CAACX,iBAAA,CAAkBW,SAAA,GAAY;MACjC,OAAO;IACT;IACA,KAAK,MAAMC,IAAA,IAAQD,SAAA,CAAUE,QAAQ,IAAI;MACvC,IAAId,cAAA,CAAea,IAAA,GAAO;QACxB,IAAIA,IAAA,CAAKE,aAAa,OAAO,SAAS;UACpC;QACF;MACF;MAEA,MAAMC,MAAA,GAASH,IAAA,CAAKI,SAAS;MAC7B,IAAIjB,cAAA,CAAegB,MAAA,GAAS;QAC1B,IAAIA,MAAA,CAAOD,aAAa,OAAO,SAAS;UACtC;QACF;MACF;MAEA,OAAO;IACT;IACA,OAAO;EACT;EACAG,GAAA,EAAK;EACLC,KAAA,EAAOA,CAAC;IAAEC;EAAI,CAAE;IACd,OAAOA,IAAA,CAAKC,CAAC,CAAC;EAChB;EACAC,QAAA,EAAUA,CAAC;IAAEC;EAAM,CAAE;IACnBA,MAAA,CAAOC,eAAe,CAACtB,sBAAA,EAAwB;EACjD;EACAuB,KAAA,EAAO;AACT,GACA;EACEf,cAAA,EAAgBN,gBAAA;EAChBO,QAAA,EAAUA,CAAC;IAAEC;EAAS,CAAE;IACtB,IAAI,CAACX,iBAAA,CAAkBW,SAAA,GAAY;MACjC,OAAO;IACT;IACA,KAAK,MAAMC,IAAA,IAAQD,SAAA,CAAUE,QAAQ,IAAI;MACvC,IAAId,cAAA,CAAea,IAAA,GAAO;QACxB,IAAIA,IAAA,CAAKE,aAAa,OAAO,WAAW;UACtC;QACF;MACF;MAEA,MAAMC,MAAA,GAASH,IAAA,CAAKI,SAAS;MAC7B,IAAIjB,cAAA,CAAegB,MAAA,GAAS;QAC1B,IAAIA,MAAA,CAAOD,aAAa,OAAO,WAAW;UACxC;QACF;MACF;MAEA,OAAO;IACT;IACA,OAAO;EACT;EACAG,GAAA,EAAK;EACLC,KAAA,EAAOA,CAAC;IAAEC;EAAI,CAAE;IACd,OAAOA,IAAA,CAAKC,CAAC,CAAC;EAChB;EACAC,QAAA,EAAUA,CAAC;IAAEC;EAAM,CAAE;IACnBA,MAAA,CAAOC,eAAe,CAACtB,sBAAA,EAAwB;EACjD;EACAuB,KAAA,EAAO;AACT,EACD,EACF;AAED,OAAO,MAAMC,kBAAA,GAAqBnB,mBAAA,CAAoB;EACpDoB,YAAA,EAAc;IACZC,MAAA,EAAQnB;EACV;EACAoB,aAAA,EAAe;IACbD,MAAA,EAAQnB;EACV;AACF","ignoreList":[]}