{"version":3,"file":"index.js","names":["$createQuoteNode","$isQuoteNode","QuoteNode","$setBlocksType","$getSelection","$isRangeSelection","BlockquoteIcon","createClientFeature","slashMenuBasicGroupWithItems","toolbarTextDropdownGroupWithItems","MarkdownTransformer","toolbarGroups","ChildComponent","isActive","selection","node","getNodes","getParent","key","label","i18n","t","onSelect","editor","update","order","BlockquoteFeatureClient","markdownTransformers","nodes","slashMenu","groups","Icon","keywords","toolbarFixed","toolbarInline"],"sources":["../../../../src/features/blockquote/client/index.tsx"],"sourcesContent":["'use client'\n\nimport { $createQuoteNode, $isQuoteNode, QuoteNode } from '@lexical/rich-text'\nimport { $setBlocksType } from '@lexical/selection'\nimport { $getSelection, $isRangeSelection } from 'lexical'\n\nimport type { ToolbarGroup } from '../../toolbars/types.js'\n\nimport { BlockquoteIcon } from '../../../lexical/ui/icons/Blockquote/index.js'\nimport { createClientFeature } from '../../../utilities/createClientFeature.js'\nimport { slashMenuBasicGroupWithItems } from '../../shared/slashMenu/basicGroup.js'\nimport { toolbarTextDropdownGroupWithItems } from '../../shared/toolbar/textDropdownGroup.js'\nimport { MarkdownTransformer } from '../markdownTransformer.js'\n\nconst toolbarGroups: ToolbarGroup[] = [\n  toolbarTextDropdownGroupWithItems([\n    {\n      ChildComponent: BlockquoteIcon,\n      isActive: ({ selection }) => {\n        if (!$isRangeSelection(selection)) {\n          return false\n        }\n        for (const node of selection.getNodes()) {\n          if (!$isQuoteNode(node) && !$isQuoteNode(node.getParent())) {\n            return false\n          }\n        }\n        return true\n      },\n      key: 'blockquote',\n      label: ({ i18n }) => {\n        return i18n.t('lexical:blockquote:label')\n      },\n      onSelect: ({ editor }) => {\n        editor.update(() => {\n          const selection = $getSelection()\n          $setBlocksType(selection, () => $createQuoteNode())\n        })\n      },\n      order: 20,\n    },\n  ]),\n]\n\nexport const BlockquoteFeatureClient = createClientFeature({\n  markdownTransformers: [MarkdownTransformer],\n  nodes: [QuoteNode],\n\n  slashMenu: {\n    groups: [\n      slashMenuBasicGroupWithItems([\n        {\n          Icon: BlockquoteIcon,\n          key: 'blockquote',\n          keywords: ['quote', 'blockquote'],\n          label: ({ i18n }) => {\n            return i18n.t('lexical:blockquote:label')\n          },\n          onSelect: ({ editor }) => {\n            editor.update(() => {\n              const selection = $getSelection()\n              $setBlocksType(selection, () => $createQuoteNode())\n            })\n          },\n        },\n      ]),\n    ],\n  },\n  toolbarFixed: {\n    groups: toolbarGroups,\n  },\n  toolbarInline: {\n    groups: toolbarGroups,\n  },\n})\n"],"mappings":"AAAA;;AAEA,SAASA,gBAAgB,EAAEC,YAAY,EAAEC,SAAS,QAAQ;AAC1D,SAASC,cAAc,QAAQ;AAC/B,SAASC,aAAa,EAAEC,iBAAiB,QAAQ;AAIjD,SAASC,cAAc,QAAQ;AAC/B,SAASC,mBAAmB,QAAQ;AACpC,SAASC,4BAA4B,QAAQ;AAC7C,SAASC,iCAAiC,QAAQ;AAClD,SAASC,mBAAmB,QAAQ;AAEpC,MAAMC,aAAA,GAAgC,CACpCF,iCAAA,CAAkC,CAChC;EACEG,cAAA,EAAgBN,cAAA;EAChBO,QAAA,EAAUA,CAAC;IAAEC;EAAS,CAAE;IACtB,IAAI,CAACT,iBAAA,CAAkBS,SAAA,GAAY;MACjC,OAAO;IACT;IACA,KAAK,MAAMC,IAAA,IAAQD,SAAA,CAAUE,QAAQ,IAAI;MACvC,IAAI,CAACf,YAAA,CAAac,IAAA,KAAS,CAACd,YAAA,CAAac,IAAA,CAAKE,SAAS,KAAK;QAC1D,OAAO;MACT;IACF;IACA,OAAO;EACT;EACAC,GAAA,EAAK;EACLC,KAAA,EAAOA,CAAC;IAAEC;EAAI,CAAE;IACd,OAAOA,IAAA,CAAKC,CAAC,CAAC;EAChB;EACAC,QAAA,EAAUA,CAAC;IAAEC;EAAM,CAAE;IACnBA,MAAA,CAAOC,MAAM,CAAC;MACZ,MAAMV,SAAA,GAAYV,aAAA;MAClBD,cAAA,CAAeW,SAAA,EAAW,MAAMd,gBAAA;IAClC;EACF;EACAyB,KAAA,EAAO;AACT,EACD,EACF;AAED,OAAO,MAAMC,uBAAA,GAA0BnB,mBAAA,CAAoB;EACzDoB,oBAAA,EAAsB,CAACjB,mBAAA,CAAoB;EAC3CkB,KAAA,EAAO,CAAC1B,SAAA,CAAU;EAElB2B,SAAA,EAAW;IACTC,MAAA,EAAQ,CACNtB,4BAAA,CAA6B,CAC3B;MACEuB,IAAA,EAAMzB,cAAA;MACNY,GAAA,EAAK;MACLc,QAAA,EAAU,CAAC,SAAS,aAAa;MACjCb,KAAA,EAAOA,CAAC;QAAEC;MAAI,CAAE;QACd,OAAOA,IAAA,CAAKC,CAAC,CAAC;MAChB;MACAC,QAAA,EAAUA,CAAC;QAAEC;MAAM,CAAE;QACnBA,MAAA,CAAOC,MAAM,CAAC;UACZ,MAAMV,SAAA,GAAYV,aAAA;UAClBD,cAAA,CAAeW,SAAA,EAAW,MAAMd,gBAAA;QAClC;MACF;IACF,EACD;EAEL;EACAiC,YAAA,EAAc;IACZH,MAAA,EAAQnB;EACV;EACAuB,aAAA,EAAe;IACbJ,MAAA,EAAQnB;EACV;AACF","ignoreList":[]}