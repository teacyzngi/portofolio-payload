{"version":3,"file":"index.js","names":["createServerFeature","FixedToolbarFeature","feature","props","sanitizedProps","applyToFocusedEditor","undefined","customGroups","disableIfParentHasFixedToolbar","ClientFeature","clientFeatureProps","sanitizedServerFeatureProps","key"],"sources":["../../../../../src/features/toolbars/fixed/server/index.ts"],"sourcesContent":["import type { CustomGroups } from '../../types.js'\n\nimport { createServerFeature } from '../../../../utilities/createServerFeature.js'\n\nexport type FixedToolbarFeatureProps = {\n  /**\n   * @default false\n   *\n   * If this is enabled, the toolbar will apply to the focused editor, not the editor with the FixedToolbarFeature.\n   *\n   * This means that if the editor has a child-editor, and the child-editor is focused, the toolbar will apply to the child-editor, not the parent editor with this feature added.\n   */\n  applyToFocusedEditor?: boolean\n  /**\n   * Custom configurations for toolbar groups\n   * Key is the group key (e.g. 'format', 'indent', 'align')\n   * Value is a partial ToolbarGroup object that will be merged with the default configuration\n   *\n   * @note Props passed via customGroups must be serializable. Avoid using functions or dynamic components.\n   * ChildComponent, if provided, must be a serializable server component.\n   */\n  customGroups?: CustomGroups\n  /**\n   * @default false\n   *\n   * If there is a parent editor with a fixed toolbar, this will disable the toolbar for this editor.\n   */\n  disableIfParentHasFixedToolbar?: boolean\n}\n\nexport const FixedToolbarFeature = createServerFeature<\n  FixedToolbarFeatureProps,\n  FixedToolbarFeatureProps,\n  FixedToolbarFeatureProps\n>({\n  feature: ({ props }) => {\n    const sanitizedProps: FixedToolbarFeatureProps = {\n      applyToFocusedEditor:\n        props?.applyToFocusedEditor === undefined ? false : props.applyToFocusedEditor,\n      customGroups: props?.customGroups,\n      disableIfParentHasFixedToolbar:\n        props?.disableIfParentHasFixedToolbar === undefined\n          ? false\n          : props.disableIfParentHasFixedToolbar,\n    }\n\n    return {\n      ClientFeature: '@payloadcms/richtext-lexical/client#FixedToolbarFeatureClient',\n      clientFeatureProps: sanitizedProps,\n      sanitizedServerFeatureProps: sanitizedProps,\n    }\n  },\n  key: 'toolbarFixed',\n})\n"],"mappings":"AAEA,SAASA,mBAAmB,QAAQ;AA4BpC,OAAO,MAAMC,mBAAA,GAAsBD,mBAAA,CAIjC;EACAE,OAAA,EAASA,CAAC;IAAEC;EAAK,CAAE;IACjB,MAAMC,cAAA,GAA2C;MAC/CC,oBAAA,EACEF,KAAA,EAAOE,oBAAA,KAAyBC,SAAA,GAAY,QAAQH,KAAA,CAAME,oBAAoB;MAChFE,YAAA,EAAcJ,KAAA,EAAOI,YAAA;MACrBC,8BAAA,EACEL,KAAA,EAAOK,8BAAA,KAAmCF,SAAA,GACtC,QACAH,KAAA,CAAMK;IACd;IAEA,OAAO;MACLC,aAAA,EAAe;MACfC,kBAAA,EAAoBN,cAAA;MACpBO,2BAAA,EAA6BP;IAC/B;EACF;EACAQ,GAAA,EAAK;AACP","ignoreList":[]}