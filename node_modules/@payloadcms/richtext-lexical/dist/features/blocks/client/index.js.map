{"version":3,"file":"index.js","names":["getTranslation","BlockIcon","InlineBlocksIcon","createClientFeature","getBlockImageComponent","getBlockMarkdownTransformers","BlockNode","InlineBlockNode","INSERT_BLOCK_COMMAND","INSERT_INLINE_BLOCK_COMMAND","BlocksPlugin","BlocksFeatureClient","config","featureClientSchemaMap","props","schemaPath","schemaMapRenderedBlockPathPrefix","schemaMapRenderedInlineBlockPathPrefix","clientSchema","blocksFields","Object","entries","filter","key","startsWith","replace","includes","map","value","inlineBlocksFields","clientBlocks","field","blockReferences","blocksMap","blocks","block","undefined","clientInlineBlocks","markdownTransformers","inlineBlocks","nodes","plugins","Component","position","sanitizedClientFeatureProps","slashMenu","groups","length","items","Icon","imageURL","imageAltText","slug","keywords","label","i18n","blockDisplayName","labels","singular","onSelect","editor","dispatchCommand","blockName","blockType","t","inlineBlock","Boolean","toolbarFixed","type","ChildComponent","index","isActive","order"],"sources":["../../../../src/features/blocks/client/index.tsx"],"sourcesContent":["'use client'\n\nimport type { I18nClient } from '@payloadcms/translations'\nimport type { BlocksFieldClient, ClientBlock } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\n\nimport type {\n  SlashMenuGroup,\n  SlashMenuItem,\n} from '../../../lexical/plugins/SlashMenu/LexicalTypeaheadMenuPlugin/types.js'\nimport type { ToolbarGroup, ToolbarGroupItem } from '../../toolbars/types.js'\n\nimport { BlockIcon } from '../../../lexical/ui/icons/Block/index.js'\nimport { InlineBlocksIcon } from '../../../lexical/ui/icons/InlineBlocks/index.js'\nimport { createClientFeature } from '../../../utilities/createClientFeature.js'\nimport { getBlockImageComponent } from './getBlockImageComponent.js'\nimport { getBlockMarkdownTransformers } from './markdown/markdownTransformer.js'\nimport { BlockNode } from './nodes/BlocksNode.js'\nimport { InlineBlockNode } from './nodes/InlineBlocksNode.js'\nimport { INSERT_BLOCK_COMMAND, INSERT_INLINE_BLOCK_COMMAND } from './plugin/commands.js'\nimport { BlocksPlugin } from './plugin/index.js'\nexport const BlocksFeatureClient = createClientFeature(\n  ({ config, featureClientSchemaMap, props, schemaPath }) => {\n    const schemaMapRenderedBlockPathPrefix = `${schemaPath}.lexical_internal_feature.blocks.lexical_blocks`\n    const schemaMapRenderedInlineBlockPathPrefix = `${schemaPath}.lexical_internal_feature.blocks.lexical_inline_blocks`\n    const clientSchema = featureClientSchemaMap['blocks']\n\n    if (!clientSchema) {\n      return {}\n    }\n\n    const blocksFields: BlocksFieldClient[] = Object.entries(clientSchema)\n      .filter(\n        ([key]) =>\n          key.startsWith(schemaMapRenderedBlockPathPrefix + '.') &&\n          !key.replace(schemaMapRenderedBlockPathPrefix + '.', '').includes('.'),\n      )\n      .map(([, value]) => value[0] as BlocksFieldClient)\n\n    const inlineBlocksFields: BlocksFieldClient[] = Object.entries(clientSchema)\n      .filter(\n        ([key]) =>\n          key.startsWith(schemaMapRenderedInlineBlockPathPrefix + '.') &&\n          !key.replace(schemaMapRenderedInlineBlockPathPrefix + '.', '').includes('.'),\n      )\n      .map(([, value]) => value[0] as BlocksFieldClient)\n\n    const clientBlocks: ClientBlock[] = blocksFields\n      .map((field) => {\n        return field.blockReferences\n          ? typeof field.blockReferences[0] === 'string'\n            ? config.blocksMap[field.blockReferences[0]]\n            : field.blockReferences[0]\n          : field.blocks[0]\n      })\n      .filter((block) => block !== undefined)\n\n    const clientInlineBlocks: ClientBlock[] = inlineBlocksFields\n      .map((field) => {\n        return field.blockReferences\n          ? typeof field.blockReferences[0] === 'string'\n            ? config.blocksMap[field.blockReferences[0]]\n            : field.blockReferences[0]\n          : field.blocks[0]\n      })\n      .filter((block) => block !== undefined)\n\n    return {\n      markdownTransformers: getBlockMarkdownTransformers({\n        blocks: clientBlocks,\n        inlineBlocks: clientInlineBlocks,\n      }),\n      nodes: [BlockNode, InlineBlockNode],\n      plugins: [\n        {\n          Component: BlocksPlugin,\n          position: 'normal',\n        },\n      ],\n      sanitizedClientFeatureProps: props,\n      slashMenu: {\n        groups: [\n          clientBlocks?.length\n            ? {\n                items: clientBlocks.map((block) => {\n                  return {\n                    Icon: getBlockImageComponent(block.imageURL, block.imageAltText),\n                    key: 'block-' + block.slug,\n                    keywords: ['block', 'blocks', block.slug],\n                    label: ({ i18n }) => {\n                      const blockDisplayName = block?.labels?.singular\n                        ? getTranslation(block.labels.singular, i18n)\n                        : block?.slug\n\n                      return blockDisplayName\n                    },\n                    onSelect: ({ editor }) => {\n                      editor.dispatchCommand(INSERT_BLOCK_COMMAND, {\n                        blockName: '',\n                        blockType: block.slug,\n                      })\n                    },\n                  } as SlashMenuItem\n                }),\n                key: 'blocks',\n                label: ({ i18n }: { i18n: I18nClient<object, 'lexical:blocks:label'> }) => {\n                  return i18n.t('lexical:blocks:label')\n                },\n              }\n            : null,\n          clientInlineBlocks?.length\n            ? {\n                items: clientInlineBlocks.map((inlineBlock) => {\n                  return {\n                    Icon: InlineBlocksIcon,\n                    key: 'inlineBlocks-' + inlineBlock.slug,\n                    keywords: ['inlineBlock', 'inline block', inlineBlock.slug],\n                    label: ({ i18n }) => {\n                      const blockDisplayName = inlineBlock?.labels?.singular\n                        ? getTranslation(inlineBlock.labels.singular, i18n)\n                        : inlineBlock?.slug\n\n                      return blockDisplayName\n                    },\n                    onSelect: ({ editor }) => {\n                      editor.dispatchCommand(INSERT_INLINE_BLOCK_COMMAND, {\n                        blockName: '',\n                        blockType: inlineBlock.slug,\n                      })\n                    },\n                  } as SlashMenuItem\n                }),\n                key: 'inlineBlocks',\n                label: ({\n                  i18n,\n                }: {\n                  i18n: I18nClient<object, 'lexical:blocks:inlineBlocks:label'>\n                }) => {\n                  return i18n.t('lexical:blocks:inlineBlocks:label')\n                },\n              }\n            : null,\n        ].filter(Boolean) as SlashMenuGroup[],\n      },\n      toolbarFixed: {\n        groups: [\n          clientBlocks.length\n            ? {\n                type: 'dropdown',\n                ChildComponent: BlockIcon,\n                items: clientBlocks.map((block, index) => {\n                  return {\n                    ChildComponent: getBlockImageComponent(block.imageURL, block.imageAltText),\n                    isActive: undefined, // At this point, we would be inside a sub-richtext-editor. And at this point this will be run against the focused sub-editor, not the parent editor which has the actual block. Thus, no point in running this\n                    key: 'block-' + block.slug,\n                    label: ({ i18n }) => {\n                      const blockDisplayName = block?.labels?.singular\n                        ? getTranslation(block.labels.singular, i18n)\n                        : block?.slug\n\n                      return blockDisplayName\n                    },\n                    onSelect: ({ editor }) => {\n                      editor.dispatchCommand(INSERT_BLOCK_COMMAND, {\n                        blockName: '',\n                        blockType: block.slug,\n                      })\n                    },\n                    order: index,\n                  } as ToolbarGroupItem\n                }),\n                key: 'blocks',\n                order: 20,\n              }\n            : null,\n          clientInlineBlocks?.length\n            ? {\n                type: 'dropdown',\n                ChildComponent: InlineBlocksIcon,\n                items: clientInlineBlocks.map((inlineBlock, index) => {\n                  return {\n                    ChildComponent: inlineBlock.imageURL\n                      ? getBlockImageComponent(inlineBlock.imageURL, inlineBlock.imageAltText)\n                      : InlineBlocksIcon,\n                    isActive: undefined,\n                    key: 'inlineBlock-' + inlineBlock.slug,\n                    label: ({ i18n }) => {\n                      const blockDisplayName = inlineBlock?.labels?.singular\n                        ? getTranslation(inlineBlock.labels.singular, i18n)\n                        : inlineBlock?.slug\n\n                      return blockDisplayName\n                    },\n                    onSelect: ({ editor }) => {\n                      editor.dispatchCommand(INSERT_INLINE_BLOCK_COMMAND, {\n                        blockName: '',\n                        blockType: inlineBlock.slug,\n                      })\n                    },\n                    order: index,\n                  } as ToolbarGroupItem\n                }),\n                key: 'inlineBlocks',\n                order: 25,\n              }\n            : null,\n        ].filter(Boolean) as ToolbarGroup[],\n      },\n    }\n  },\n)\n"],"mappings":"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","ignoreList":[]}