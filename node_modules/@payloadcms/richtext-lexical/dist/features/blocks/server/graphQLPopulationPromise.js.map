{"version":3,"file":"graphQLPopulationPromise.js","names":["recursivelyPopulateFieldsForGraphQL","blockPopulationPromiseHOC","blocks","blockPopulationPromise","context","currentDepth","depth","draft","editorPopulationPromises","field","fieldPromises","findMany","flattenLocales","node","overrideAccess","parentIsLocalized","populationPromises","req","showHiddenFields","blockFieldData","fields","block","find","slug","blockType","length","data","localized","siblingDoc"],"sources":["../../../../src/features/blocks/server/graphQLPopulationPromise.ts"],"sourcesContent":["import type { Block } from 'payload'\n\nimport type { PopulationPromise } from '../../typesServer.js'\nimport type { SerializedInlineBlockNode } from '../server/nodes/InlineBlocksNode.js'\nimport type { SerializedBlockNode } from './nodes/BlocksNode.js'\n\nimport { recursivelyPopulateFieldsForGraphQL } from '../../../populateGraphQL/recursivelyPopulateFieldsForGraphQL.js'\n\nexport const blockPopulationPromiseHOC = (\n  blocks: Block[],\n): PopulationPromise<SerializedBlockNode | SerializedInlineBlockNode> => {\n  const blockPopulationPromise: PopulationPromise<\n    SerializedBlockNode | SerializedInlineBlockNode\n  > = ({\n    context,\n    currentDepth,\n    depth,\n    draft,\n    editorPopulationPromises,\n    field,\n    fieldPromises,\n    findMany,\n    flattenLocales,\n    node,\n    overrideAccess,\n    parentIsLocalized,\n    populationPromises,\n    req,\n    showHiddenFields,\n  }) => {\n    const blockFieldData = node.fields\n\n    // find block used in this node\n    const block = blocks.find((block) => block.slug === blockFieldData.blockType)\n    if (!block || !block?.fields?.length || !blockFieldData) {\n      return\n    }\n\n    recursivelyPopulateFieldsForGraphQL({\n      context,\n      currentDepth,\n      data: blockFieldData,\n      depth,\n      draft,\n      editorPopulationPromises,\n      fieldPromises,\n      fields: block.fields,\n      findMany,\n      flattenLocales,\n      overrideAccess,\n      parentIsLocalized: parentIsLocalized || field.localized || false,\n      populationPromises,\n      req,\n      showHiddenFields,\n      siblingDoc: blockFieldData,\n    })\n  }\n\n  return blockPopulationPromise\n}\n"],"mappings":"AAMA,SAASA,mCAAmC,QAAQ;AAEpD,OAAO,MAAMC,yBAAA,GACXC,MAAA;EAEA,MAAMC,sBAAA,GAEFA,CAAC;IACHC,OAAO;IACPC,YAAY;IACZC,KAAK;IACLC,KAAK;IACLC,wBAAwB;IACxBC,KAAK;IACLC,aAAa;IACbC,QAAQ;IACRC,cAAc;IACdC,IAAI;IACJC,cAAc;IACdC,iBAAiB;IACjBC,kBAAkB;IAClBC,GAAG;IACHC;EAAgB,CACjB;IACC,MAAMC,cAAA,GAAiBN,IAAA,CAAKO,MAAM;IAElC;IACA,MAAMC,KAAA,GAAQnB,MAAA,CAAOoB,IAAI,CAAED,KAAA,IAAUA,KAAA,CAAME,IAAI,KAAKJ,cAAA,CAAeK,SAAS;IAC5E,IAAI,CAACH,KAAA,IAAS,CAACA,KAAA,EAAOD,MAAA,EAAQK,MAAA,IAAU,CAACN,cAAA,EAAgB;MACvD;IACF;IAEAnB,mCAAA,CAAoC;MAClCI,OAAA;MACAC,YAAA;MACAqB,IAAA,EAAMP,cAAA;MACNb,KAAA;MACAC,KAAA;MACAC,wBAAA;MACAE,aAAA;MACAU,MAAA,EAAQC,KAAA,CAAMD,MAAM;MACpBT,QAAA;MACAC,cAAA;MACAE,cAAA;MACAC,iBAAA,EAAmBA,iBAAA,IAAqBN,KAAA,CAAMkB,SAAS,IAAI;MAC3DX,kBAAA;MACAC,GAAA;MACAC,gBAAA;MACAU,UAAA,EAAYT;IACd;EACF;EAEA,OAAOhB,sBAAA;AACT","ignoreList":[]}