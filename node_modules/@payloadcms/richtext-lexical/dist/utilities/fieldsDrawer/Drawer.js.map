{"version":3,"file":"Drawer.js","names":["c","_c","Drawer","EditDepthProvider","useModal","React","DrawerContent","FieldsDrawer","t0","$","className","data","drawerSlug","drawerTitle","featureKey","fieldMapOverride","handleDrawerSubmit","schemaFieldsPathOverride","schemaPath","schemaPathSuffix","closeModal","t1","t2","args","args2","setTimeout","t3","_jsx","children","slug","title"],"sources":["../../../src/utilities/fieldsDrawer/Drawer.tsx"],"sourcesContent":["'use client'\nimport type { ClientField, Data, FormState, JsonObject } from 'payload'\n\nimport { Drawer, EditDepthProvider, useModal } from '@payloadcms/ui'\nimport React from 'react'\n\nimport { DrawerContent } from './DrawerContent.js'\n\nexport type FieldsDrawerProps = {\n  readonly className?: string\n  readonly data?: Data\n  readonly drawerSlug: string\n  readonly drawerTitle?: string\n  readonly featureKey: string\n  readonly fieldMapOverride?: ClientField[]\n  readonly handleDrawerSubmit: (fields: FormState, data: JsonObject) => void\n  readonly schemaFieldsPathOverride?: string\n  readonly schemaPath: string\n  readonly schemaPathSuffix?: string\n}\n\n/**\n * This FieldsDrawer component can be used to easily create a Drawer that contains a form with fields within your feature.\n * The fields are taken directly from the schema map based on your `featureKey` and `schemaPathSuffix`. Thus, this can only\n * be used if you provide your field schema inside the `generateSchemaMap` prop of your feature.server.ts.\n */\nexport const FieldsDrawer: React.FC<FieldsDrawerProps> = ({\n  className,\n  data,\n  drawerSlug,\n  drawerTitle,\n  featureKey,\n  fieldMapOverride,\n  handleDrawerSubmit,\n  schemaFieldsPathOverride,\n  schemaPath,\n  schemaPathSuffix,\n}) => {\n  const { closeModal } = useModal()\n  // The Drawer only renders its children (and itself) if it's open. Thus, by extracting the main content\n  // to DrawerContent, this should be faster\n  return (\n    <EditDepthProvider>\n      <Drawer className={className} slug={drawerSlug} title={drawerTitle ?? ''}>\n        <DrawerContent\n          data={data}\n          featureKey={featureKey}\n          fieldMapOverride={fieldMapOverride}\n          handleDrawerSubmit={(args, args2) => {\n            // Simply close drawer - no need for useLexicalDrawer here as at this point,\n            // we don't need to restore the cursor position. This is handled by the useEffect in useLexicalDrawer.\n            closeModal(drawerSlug)\n\n            // Actual drawer submit logic needs to be triggered after the drawer is closed.\n            // That's because the lexical selection / cursor restore logic that is striggerer by\n            // `useLexicalDrawer` neeeds to be triggered before any editor.update calls that may happen\n            // in the `handleDrawerSubmit` function.\n            setTimeout(() => {\n              handleDrawerSubmit(args, args2)\n            }, 1)\n          }}\n          schemaFieldsPathOverride={schemaFieldsPathOverride}\n          schemaPath={schemaPath}\n          schemaPathSuffix={schemaPathSuffix}\n        />\n      </Drawer>\n    </EditDepthProvider>\n  )\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AAGA,SAASC,MAAM,EAAEC,iBAAiB,EAAEC,QAAQ,QAAQ;AACpD,OAAOC,KAAA,MAAW;AAElB,SAASC,aAAa,QAAQ;AAe9B;;;;;AAKA,OAAO,MAAMC,YAAA,GAA4CC,EAAA;EAAA,MAAAC,CAAA,GAAAR,EAAA;EAAC;IAAAS,SAAA;IAAAC,IAAA;IAAAC,UAAA;IAAAC,WAAA;IAAAC,UAAA;IAAAC,gBAAA;IAAAC,kBAAA;IAAAC,wBAAA;IAAAC,UAAA;IAAAC;EAAA,IAAAX,EAWzD;EACC;IAAAY;EAAA,IAAuBhB,QAAA;EAKoC,MAAAiB,EAAA,GAAAR,WAAA,IAAe;EAAA,IAAAS,EAAA;EAAA,IAAAb,CAAA,QAAAW,UAAA,IAAAX,CAAA,QAAAG,UAAA,IAAAH,CAAA,QAAAO,kBAAA;IAK9CM,EAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA;MAGlBJ,UAAA,CAAWR,UAAA;MAMXa,UAAA;QACET,kBAAA,CAAmBO,IAAA,EAAMC,KAAA;MAAA,IACxB;IAAA;IACLf,CAAA,MAAAW,UAAA;IAAAX,CAAA,MAAAG,UAAA;IAAAH,CAAA,MAAAO,kBAAA;IAAAP,CAAA,MAAAa,EAAA;EAAA;IAAAA,EAAA,GAAAb,CAAA;EAAA;EAAA,IAAAiB,EAAA;EAAA,IAAAjB,CAAA,QAAAC,SAAA,IAAAD,CAAA,QAAAE,IAAA,IAAAF,CAAA,QAAAG,UAAA,IAAAH,CAAA,QAAAK,UAAA,IAAAL,CAAA,QAAAM,gBAAA,IAAAN,CAAA,QAAAQ,wBAAA,IAAAR,CAAA,SAAAS,UAAA,IAAAT,CAAA,SAAAU,gBAAA,IAAAV,CAAA,SAAAY,EAAA,IAAAZ,CAAA,SAAAa,EAAA;IAlBNI,EAAA,GAAAC,IAAA,CAAAxB,iBAAA;MAAAyB,QAAA,EACED,IAAA,CAAAzB,MAAA;QAAAQ,SAAA;QAAAmB,IAAA,EAAoCjB,UAAA;QAAAkB,KAAA,EAAmBT,EAAe;QAAAO,QAAA,EACpED,IAAA,CAAArB,aAAA;UAAAK,IAAA;UAAAG,UAAA;UAAAC,gBAAA;UAAAC,kBAAA,EAIsBM,EAYpB;UAAAL,wBAAA;UAAAC,UAAA;UAAAC;QAAA,C;;;;;;;;;;;;;;;;;SAlBNO,E;CA0BJ","ignoreList":[]}