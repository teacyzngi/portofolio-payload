{"version":3,"file":"jsx.spec.js","names":["extractPropsFromJSXPropsString","propsToJSXString","describe","INPUT_AND_OUTPUT","input","output","key","inputFromOutput","object","test","global","packageId","uniqueId","update","hello","something","nested","it","replace","propsObject","propsString","console","log","expect","toStrictEqual","originalInput","props","replaceAll","toBe"],"sources":["../../../src/utilities/jsx/jsx.spec.ts"],"sourcesContent":["import { extractPropsFromJSXPropsString } from './extractPropsFromJSXPropsString.js'\nimport { propsToJSXString } from './jsx.js'\n\ndescribe('jsx', () => {\n  describe('prop string to object', () => {\n    const INPUT_AND_OUTPUT: {\n      input: string\n      inputFromOutput?: string\n      output: Record<string, any>\n    }[] = [\n      {\n        input: 'key=\"value\"',\n        output: {\n          key: 'value',\n        },\n      },\n      {\n        input: \"key='value'\",\n        output: {\n          key: 'value',\n        },\n        inputFromOutput: 'key=\"value\"',\n      },\n      {\n        input: 'key={[1, 2, 3]}',\n        output: {\n          key: [1, 2, 3],\n        },\n      },\n      {\n        input: 'key={[1, 2, 3, [1, 2]]}',\n        output: {\n          key: [1, 2, 3, [1, 2]],\n        },\n      },\n      {\n        input: 'object={4}',\n        output: {\n          object: 4,\n        },\n      },\n      {\n        input: 'object={{\"test\": 1}}',\n        output: {\n          object: { test: 1 },\n        },\n      },\n      {\n        input: 'object={[1, 2, 3, [1, 2]]}',\n        output: {\n          object: [1, 2, 3, [1, 2]],\n        },\n      },\n      {\n        input: 'object={[1, 2]}',\n        output: {\n          object: [1, 2],\n        },\n      },\n      {\n        input: 'key=\"value\" object={{key: \"value\"}}',\n        inputFromOutput: 'key=\"value\" object={{\"key\": \"value\"}}',\n        output: {\n          key: 'value',\n          object: { key: 'value' },\n        },\n      },\n      {\n        input: 'global packageId=\"myId\" uniqueId=\"some unique id!\" update',\n        output: {\n          global: true,\n          packageId: 'myId',\n          uniqueId: 'some unique id!',\n          update: true,\n        },\n      },\n      {\n        input:\n          'global key=\"value\" object={{key: \"value\", something: \"test\", hello: 1}} packageId=\"myId\" uniqueId=\"some unique id!\" update',\n        inputFromOutput:\n          'global key=\"value\" object={{\"hello\": 1, \"key\": \"value\", \"something\": \"test\"}} packageId=\"myId\" uniqueId=\"some unique id!\" update',\n        output: {\n          global: true,\n          key: 'value',\n          object: { hello: 1, key: 'value', something: 'test' },\n          packageId: 'myId',\n          uniqueId: 'some unique id!',\n          update: true,\n        },\n      },\n      {\n        input:\n          'object={{hello: 1, key: \"value\", nested: { key: \"value\" }, something: \"test\", test: [1, 2, 3]}}',\n        inputFromOutput:\n          'object={{\"hello\": 1, \"key\": \"value\", \"nested\": {\"key\": \"value\"}, \"something\": \"test\", \"test\": [1, 2, 3]}}',\n        output: {\n          object: {\n            hello: 1,\n            key: 'value',\n            nested: { key: 'value' },\n            something: 'test',\n            test: [1, 2, 3],\n          },\n        },\n      },\n      {\n        input:\n          'global key=\"value\" object={{hello: 1, key: \"value\", nested: { key: \"value\" }, something: \"test\", test: [1, 2, 3]}} packageId=\"myId\" uniqueId=\"some unique id!\" update',\n        inputFromOutput:\n          'global key=\"value\" object={{\"hello\": 1, \"key\": \"value\", \"nested\": { \"key\": \"value\" }, \"something\": \"test\", \"test\": [1, 2, 3]}} packageId=\"myId\" uniqueId=\"some unique id!\" update',\n        output: {\n          global: true,\n          key: 'value',\n          object: {\n            hello: 1,\n            key: 'value',\n            nested: { key: 'value' },\n            something: 'test',\n            test: [1, 2, 3],\n          },\n          packageId: 'myId',\n          uniqueId: 'some unique id!',\n          update: true,\n        },\n      },\n      {\n        // Test if unquoted property keys in objects within arrays are supprted. This is\n        // supported through the more lenient JSOX parser, instead of using JSON.parse()\n        input: 'key={[1, 2, { hello: \"there\" }]}',\n        inputFromOutput: 'key={[1, 2, { \"hello\": \"there\" }]}',\n        output: {\n          key: [1, 2, { hello: 'there' }],\n        },\n      },\n      {\n        // Test if ` strings work\n        input: `key={[1, 2, { hello: \\`there\\` }]}`,\n        inputFromOutput: 'key={[1, 2, { \"hello\": \"there\" }]}',\n        output: {\n          key: [1, 2, { hello: 'there' }],\n        },\n      },\n      {\n        // Test if multiline ` strings work\n        input: `key={[1, 2, { hello: \\`Hello\nthere\\` }]}`,\n        inputFromOutput: 'key={[1, 2, { \"hello\": \"Hello\\\\nthere\" }]}',\n        output: {\n          key: [1, 2, { hello: 'Hello\\nthere' }],\n        },\n      },\n    ]\n\n    for (const { input, output } of INPUT_AND_OUTPUT) {\n      it(`can correctly convert to object: \"${input.replace(/\\n/g, '\\\\n')}\"`, () => {\n        const propsObject = extractPropsFromJSXPropsString({ propsString: input })\n        console.log({ output, propsObject })\n\n        expect(propsObject).toStrictEqual(output)\n      })\n    }\n\n    for (const { input: originalInput, inputFromOutput, output } of INPUT_AND_OUTPUT) {\n      const input = inputFromOutput || originalInput\n      it(`can correctly convert from object: \"${input.replace(/\\n/g, '\\\\n')}\"`, () => {\n        const propsString = propsToJSXString({ props: output })\n        console.log({ input, propsString })\n\n        expect(propsString.replaceAll(' ', '')).toBe(input.replaceAll(' ', ''))\n      })\n    }\n  })\n})\n"],"mappings":"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","ignoreList":[]}