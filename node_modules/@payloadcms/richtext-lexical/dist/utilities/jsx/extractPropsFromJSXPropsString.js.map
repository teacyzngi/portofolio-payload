{"version":3,"file":"extractPropsFromJSXPropsString.js","names":["JSOX","extractPropsFromJSXPropsString","propsString","props","key","collectingKey","i","length","char","result","handleValue","value","newIndex","startIndex","handleQuotedString","handleObject","handleArray","handleUnquotedString","bracketCount","parse","isSingleQuoted","parseObject","objString","replace"],"sources":["../../../src/utilities/jsx/extractPropsFromJSXPropsString.ts"],"sourcesContent":["import { JSOX } from 'jsox'\n\n/**\n * Turns a JSX props string into an object.\n *\n * @example\n *\n * Input: type=\"info\" hello={{heyyy: 'test', someNumber: 2}}\n * Output: { type: 'info', hello: { heyyy: 'test', someNumber: 2 } }\n */\nexport function extractPropsFromJSXPropsString({\n  propsString,\n}: {\n  propsString: string\n}): Record<string, any> {\n  const props: Record<string, any> = {}\n  let key = ''\n  let collectingKey = true\n\n  for (let i = 0; i < propsString.length; i++) {\n    const char = propsString[i]\n\n    if (collectingKey) {\n      if (char === '=' || char === ' ') {\n        if (key) {\n          if (char === ' ') {\n            props[key] = true\n            key = ''\n          } else {\n            collectingKey = false\n          }\n        }\n      } else {\n        key += char\n      }\n    } else {\n      const result = handleValue(propsString, i)\n      props[key] = result.value\n      i = result.newIndex\n      key = ''\n      collectingKey = true\n    }\n  }\n\n  if (key) {\n    props[key] = true\n  }\n\n  return props\n}\n\nfunction handleValue(propsString: string, startIndex: number): { newIndex: number; value: any } {\n  const char = propsString[startIndex]\n\n  if (char === '\"') {\n    return handleQuotedString(propsString, startIndex)\n  } else if (char === \"'\") {\n    return handleQuotedString(propsString, startIndex, true)\n  } else if (char === '{') {\n    return handleObject(propsString, startIndex)\n  } else if (char === '[') {\n    return handleArray(propsString, startIndex)\n  } else {\n    return handleUnquotedString(propsString, startIndex)\n  }\n}\n\nfunction handleArray(propsString: string, startIndex: number): { newIndex: number; value: any } {\n  let bracketCount = 1\n  let value = ''\n  let i = startIndex + 1\n\n  while (i < propsString.length && bracketCount > 0) {\n    if (propsString[i] === '[') {\n      bracketCount++\n    } else if (propsString[i] === ']') {\n      bracketCount--\n    }\n    if (bracketCount > 0) {\n      value += propsString[i]\n    }\n    i++\n  }\n\n  return { newIndex: i, value: JSOX.parse(`[${value}]`) }\n}\n\nfunction handleQuotedString(\n  propsString: string,\n  startIndex: number,\n  isSingleQuoted = false,\n): { newIndex: number; value: string } {\n  let value = ''\n  let i = startIndex + 1\n  while (\n    i < propsString.length &&\n    (propsString[i] !== (isSingleQuoted ? \"'\" : '\"') || propsString[i - 1] === '\\\\')\n  ) {\n    value += propsString[i]\n    i++\n  }\n  return { newIndex: i, value }\n}\n\nfunction handleObject(propsString: string, startIndex: number): { newIndex: number; value: any } {\n  let bracketCount = 1\n  let value = ''\n  let i = startIndex + 1\n\n  while (i < propsString.length && bracketCount > 0) {\n    if (propsString[i] === '{') {\n      bracketCount++\n    } else if (propsString[i] === '}') {\n      bracketCount--\n    }\n    if (bracketCount > 0) {\n      value += propsString[i]\n    }\n    i++\n  }\n\n  return { newIndex: i, value: parseObject(value) }\n}\n\nfunction parseObject(objString: string): Record<string, any> {\n  if (objString[0] !== '{') {\n    return JSOX.parse(objString)\n  }\n\n  const result = JSOX.parse(objString.replace(/(\\w+):/g, '\"$1\":'))\n\n  return result\n}\n\nfunction handleUnquotedString(\n  propsString: string,\n  startIndex: number,\n): { newIndex: number; value: string } {\n  let value = ''\n  let i = startIndex\n  while (i < propsString.length && propsString[i] !== ' ') {\n    value += propsString[i]\n    i++\n  }\n  return { newIndex: i - 1, value }\n}\n"],"mappings":"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","ignoreList":[]}