{"version":3,"file":"mdx.js","names":["acorn","fromMarkdown","mdxJsxFromMarkdown","mdxJsx","parseJSXToAST","jsxString","keepPositions","treeComplex","extensions","addResult","mdastExtensions","parseTree","tree","key","start","end","Array","isArray","item"],"sources":["../../../../src/exports/server/ast/mdx.ts"],"sourcesContent":["import * as acorn from 'acorn'\nimport { fromMarkdown } from 'mdast-util-from-markdown'\nimport { mdxJsxFromMarkdown } from 'mdast-util-mdx-jsx'\nimport { mdxJsx } from 'micromark-extension-mdx-jsx'\n\nexport type AST = ReturnType<typeof fromMarkdown>\n\nexport function parseJSXToAST({\n  jsxString,\n  keepPositions,\n}: {\n  jsxString: string\n  keepPositions?: boolean\n}): AST {\n  const treeComplex: AST = fromMarkdown(jsxString, {\n    // @ts-expect-error\n    extensions: [mdxJsx({ acorn, addResult: false })],\n    mdastExtensions: [mdxJsxFromMarkdown()],\n  })\n\n  // Remove \"position\" keys\n  const parseTree = (tree: object) => {\n    for (const key in tree) {\n      // @ts-expect-error - vestiges of when tsconfig was not strict. Feel free to improve\n      if (key === 'position' && tree[key].start && tree[key].end) {\n        // @ts-expect-error - vestiges of when tsconfig was not strict. Feel free to improve\n        delete tree[key]\n        // @ts-expect-error - vestiges of when tsconfig was not strict. Feel free to improve\n      } else if (typeof tree[key] === 'object') {\n        // @ts-expect-error - vestiges of when tsconfig was not strict. Feel free to improve\n        parseTree(tree[key])\n        // @ts-expect-error - vestiges of when tsconfig was not strict. Feel free to improve\n      } else if (Array.isArray(tree[key])) {\n        // @ts-expect-error - vestiges of when tsconfig was not strict. Feel free to improve\n        for (const item of tree[key]) {\n          parseTree(item)\n        }\n      }\n    }\n  }\n\n  const tree: AST = treeComplex\n\n  if (keepPositions !== true) {\n    parseTree(tree)\n  }\n\n  return tree\n}\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,YAAY,QAAQ;AAC7B,SAASC,kBAAkB,QAAQ;AACnC,SAASC,MAAM,QAAQ;AAIvB,OAAO,SAASC,cAAc;EAC5BC,SAAS;EACTC;AAAa,CAId;EACC,MAAMC,WAAA,GAAmBN,YAAA,CAAaI,SAAA,EAAW;IAC/C;IACAG,UAAA,EAAY,CAACL,MAAA,CAAO;MAAEH,KAAA;MAAOS,SAAA,EAAW;IAAM,GAAG;IACjDC,eAAA,EAAiB,CAACR,kBAAA;EACpB;EAEA;EACA,MAAMS,SAAA,GAAaC,IAAA;IACjB,KAAK,MAAMC,GAAA,IAAOD,IAAA,EAAM;MACtB;MACA,IAAIC,GAAA,KAAQ,cAAcD,IAAI,CAACC,GAAA,CAAI,CAACC,KAAK,IAAIF,IAAI,CAACC,GAAA,CAAI,CAACE,GAAG,EAAE;QAC1D;QACA,OAAOH,IAAI,CAACC,GAAA,CAAI;QAChB;MACF,OAAO,IAAI,OAAOD,IAAI,CAACC,GAAA,CAAI,KAAK,UAAU;QACxC;QACAF,SAAA,CAAUC,IAAI,CAACC,GAAA,CAAI;QACnB;MACF,OAAO,IAAIG,KAAA,CAAMC,OAAO,CAACL,IAAI,CAACC,GAAA,CAAI,GAAG;QACnC;QACA,KAAK,MAAMK,IAAA,IAAQN,IAAI,CAACC,GAAA,CAAI,EAAE;UAC5BF,SAAA,CAAUO,IAAA;QACZ;MACF;IACF;EACF;EAEA,MAAMN,IAAA,GAAYL,WAAA;EAElB,IAAID,aAAA,KAAkB,MAAM;IAC1BK,SAAA,CAAUC,IAAA;EACZ;EAEA,OAAOA,IAAA;AACT","ignoreList":[]}