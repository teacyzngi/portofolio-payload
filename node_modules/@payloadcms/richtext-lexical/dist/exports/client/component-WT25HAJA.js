"use client";import{a as C,b as N}from"./chunk-O6XRT2H3.js";import{a as x}from"./chunk-INBEEENE.js";import{a as S}from"./chunk-F26IQ5RE.js";import{b as m}from"./chunk-BZZVLW4U.js";import{jsx as a,jsxs as n}from"react/jsx-runtime";import{useLexicalComposerContext as X}from"@lexical/react/LexicalComposerContext.js";import{useLexicalEditable as Y}from"@lexical/react/useLexicalEditable";import{getTranslation as y}from"@payloadcms/translations";import{Button as p,formatDrawerSlug as Z,Thumbnail as ee,useConfig as te,useEditDepth as ae,usePayloadAPI as oe,useTranslation as le}from"@payloadcms/ui";import{$getNodeByKey as R}from"lexical";import{isImage as ie}from"payload/shared";import{useCallback as h,useId as se,useReducer as re,useRef as ne,useState as de}from"react";var e="lexical-upload",E={depth:0},Ce=L=>{let{data:{fields:P,relationTo:f,value:d},nodeKey:l}=L;if(typeof d=="object")throw new Error("Upload value should be a string or number. The Lexical Upload component should not receive the populated value object.");let{config:{routes:{api:T},serverURL:U},getEntityConfig:F}=te(),j=ne(null),{uuid:I}=m(),z=ae(),[i]=X(),{editorConfig:B,fieldProps:{schemaPath:k}}=m(),c=Y(),{i18n:g,t:s}=le(),[_,A]=re(r=>r+1,0),[o]=de(()=>F({collectionSlug:f})),K=se(),b=Z({slug:"lexical-upload-drawer-"+I+K,depth:z}),{toggleDrawer:M}=x(b,!0),{closeDocumentDrawer:w,DocumentDrawer:O,DocumentDrawerToggler:W}=S({id:d,collectionSlug:o.slug}),[{data:t},{setParams:D}]=oe(`${U}${T}/${o.slug}/${d}`,{initialParams:E}),v=t?.thumbnailURL||t?.url,H=h(()=>{i.update(()=>{R(l)?.remove()})},[i,l]),q=h(r=>{D({...E,cacheBust:_}),A(),w()},[D,_,w]),$=B?.resolvedFeatureMap?.get("upload")?.sanitizedClientFeatureProps.collections?.[o.slug]?.hasExtraFields,G=h((r,Q)=>{i.update(()=>{let u=R(l);if(u){let V={...u.getData(),fields:Q};u.setData(V)}})},[i,l]),J=v&&t?.width&&t?.height?t.width>t.height?"landscape":"portrait":"landscape";return n("div",{className:`${e} ${e}--${J}`,"data-filename":t?.filename,ref:j,children:[n("div",{className:`${e}__card`,children:[n("div",{className:`${e}__media`,children:[a(ee,{collectionSlug:f,fileSrc:ie(t?.mimeType)?v:null,height:t?.height,size:"none",width:t?.width}),c&&a("div",{className:`${e}__overlay ${e}__floater`,children:n("div",{className:`${e}__actions`,role:"toolbar",children:[$?a(p,{buttonStyle:"icon-label",className:`${e}__upload-drawer-toggler`,disabled:!c,el:"button",icon:"edit",onClick:M,round:!0,size:"medium",tooltip:s("fields:editRelationship")}):null,a(p,{buttonStyle:"icon-label",className:`${e}__swap-drawer-toggler`,disabled:!c,el:"button",icon:"swap",onClick:()=>{i.dispatchCommand(N,{replace:{nodeKey:l}})},round:!0,size:"medium",tooltip:s("fields:swapUpload")}),a(p,{buttonStyle:"icon-label",className:`${e}__removeButton`,disabled:!c,icon:"x",onClick:r=>{r.preventDefault(),H()},round:!0,size:"medium",tooltip:s("fields:removeUpload")})]})})]}),n("div",{className:`${e}__metaOverlay ${e}__floater`,children:[a(W,{className:`${e}__doc-drawer-toggler`,children:a("strong",{className:`${e}__filename`,children:t?.filename||s("general:untitled")})}),a("div",{className:`${e}__collectionLabel`,children:y(o.labels.singular,g)})]})]}),d?a(O,{onSave:q}):null,$?a(C,{data:P,drawerSlug:b,drawerTitle:s("general:editLabel",{label:y(o.labels.singular,g)}),featureKey:"upload",handleDrawerSubmit:G,schemaPath:k,schemaPathSuffix:o.slug}):null]})};export{Ce as UploadComponent};
//# sourceMappingURL=component-WT25HAJA.js.map
