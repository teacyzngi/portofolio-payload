{"version":3,"file":"populate.js","names":["createDataloaderCacheKey","populate","id","collectionSlug","currentDepth","data","depth","draft","key","overrideAccess","req","select","showHiddenFields","shouldPopulate","dataRef","doc","payloadDataLoader","load","docID","fallbackLocale","locale","transactionID"],"sources":["../../src/populateGraphQL/populate.ts"],"sourcesContent":["import type { PayloadRequest, SelectType } from 'payload'\n\nimport { createDataloaderCacheKey } from 'payload'\n\ntype PopulateArguments = {\n  collectionSlug: string\n  currentDepth?: number\n  data: unknown\n  depth: number\n  draft: boolean\n  id: number | string\n  key: number | string\n  overrideAccess: boolean\n  req: PayloadRequest\n  select?: SelectType\n  showHiddenFields: boolean\n}\n\ntype PopulateFn = (args: PopulateArguments) => Promise<void>\n\nexport const populate: PopulateFn = async ({\n  id,\n  collectionSlug,\n  currentDepth,\n  data,\n  depth,\n  draft,\n  key,\n  overrideAccess,\n  req,\n  select,\n  showHiddenFields,\n}) => {\n  const shouldPopulate = depth && currentDepth! <= depth\n  // usually depth is checked within recursivelyPopulateFieldsForGraphQL. But since this populate function can be called outside of that (in rest afterRead node hooks) we need to check here too\n  if (!shouldPopulate) {\n    return\n  }\n\n  const dataRef = data as Record<string, unknown>\n\n  const doc = await req.payloadDataLoader?.load(\n    createDataloaderCacheKey({\n      collectionSlug,\n      currentDepth: currentDepth! + 1,\n      depth,\n      docID: id as string,\n      draft,\n      fallbackLocale: req.fallbackLocale!,\n      locale: req.locale!,\n      overrideAccess,\n      select,\n      showHiddenFields,\n      transactionID: req.transactionID!,\n    }),\n  )\n\n  if (doc) {\n    dataRef[key] = doc\n  } else {\n    dataRef[key] = null\n  }\n}\n"],"mappings":"AAEA,SAASA,wBAAwB,QAAQ;AAkBzC,OAAO,MAAMC,QAAA,GAAuB,MAAAA,CAAO;EACzCC,EAAE;EACFC,cAAc;EACdC,YAAY;EACZC,IAAI;EACJC,KAAK;EACLC,KAAK;EACLC,GAAG;EACHC,cAAc;EACdC,GAAG;EACHC,MAAM;EACNC;AAAgB,CACjB;EACC,MAAMC,cAAA,GAAiBP,KAAA,IAASF,YAAA,IAAiBE,KAAA;EACjD;EACA,IAAI,CAACO,cAAA,EAAgB;IACnB;EACF;EAEA,MAAMC,OAAA,GAAUT,IAAA;EAEhB,MAAMU,GAAA,GAAM,MAAML,GAAA,CAAIM,iBAAiB,EAAEC,IAAA,CACvCjB,wBAAA,CAAyB;IACvBG,cAAA;IACAC,YAAA,EAAcA,YAAA,GAAgB;IAC9BE,KAAA;IACAY,KAAA,EAAOhB,EAAA;IACPK,KAAA;IACAY,cAAA,EAAgBT,GAAA,CAAIS,cAAc;IAClCC,MAAA,EAAQV,GAAA,CAAIU,MAAM;IAClBX,cAAA;IACAE,MAAA;IACAC,gBAAA;IACAS,aAAA,EAAeX,GAAA,CAAIW;EACrB;EAGF,IAAIN,GAAA,EAAK;IACPD,OAAO,CAACN,GAAA,CAAI,GAAGO,GAAA;EACjB,OAAO;IACLD,OAAO,CAACN,GAAA,CAAI,GAAG;EACjB;AACF","ignoreList":[]}