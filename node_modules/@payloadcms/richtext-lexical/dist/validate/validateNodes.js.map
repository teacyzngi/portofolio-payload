{"version":3,"file":"validateNodes.js","names":["validateNodes","nodes","nodeValidations","validation","validationFromProps","node","validations","get","type","validationResult","children","childrenValidationResult"],"sources":["../../src/validate/validateNodes.ts"],"sourcesContent":["import type { SerializedEditorState, SerializedLexicalNode } from 'lexical'\nimport type { RichTextField, ValidateOptions } from 'payload'\n\nimport type { NodeValidation } from '../features/typesServer.js'\n\nexport async function validateNodes({\n  nodes,\n  nodeValidations,\n  validation: validationFromProps,\n}: {\n  nodes: SerializedLexicalNode[]\n  nodeValidations: Map<string, Array<NodeValidation>>\n  validation: {\n    options: ValidateOptions<unknown, unknown, RichTextField, SerializedEditorState>\n    value: SerializedEditorState\n  }\n}): Promise<string | true> {\n  for (const node of nodes) {\n    // Validate node\n    const validations = nodeValidations.get(node.type)\n    if (validations) {\n      for (const validation of validations) {\n        const validationResult = await validation({\n          node,\n          nodeValidations,\n          validation: validationFromProps,\n        })\n        if (validationResult !== true) {\n          return `${node.type} node failed to validate: ${validationResult}`\n        }\n      }\n    }\n\n    // Validate node's children\n    if ('children' in node && node?.children) {\n      const childrenValidationResult = await validateNodes({\n        nodes: node.children as SerializedLexicalNode[],\n        nodeValidations,\n        validation: validationFromProps,\n      })\n      if (childrenValidationResult !== true) {\n        return childrenValidationResult\n      }\n    }\n  }\n\n  return true\n}\n"],"mappings":"AAKA,OAAO,eAAeA,cAAc;EAClCC,KAAK;EACLC,eAAe;EACfC,UAAA,EAAYC;AAAmB,CAQhC;EACC,KAAK,MAAMC,IAAA,IAAQJ,KAAA,EAAO;IACxB;IACA,MAAMK,WAAA,GAAcJ,eAAA,CAAgBK,GAAG,CAACF,IAAA,CAAKG,IAAI;IACjD,IAAIF,WAAA,EAAa;MACf,KAAK,MAAMH,UAAA,IAAcG,WAAA,EAAa;QACpC,MAAMG,gBAAA,GAAmB,MAAMN,UAAA,CAAW;UACxCE,IAAA;UACAH,eAAA;UACAC,UAAA,EAAYC;QACd;QACA,IAAIK,gBAAA,KAAqB,MAAM;UAC7B,OAAO,GAAGJ,IAAA,CAAKG,IAAI,6BAA6BC,gBAAA,EAAkB;QACpE;MACF;IACF;IAEA;IACA,IAAI,cAAcJ,IAAA,IAAQA,IAAA,EAAMK,QAAA,EAAU;MACxC,MAAMC,wBAAA,GAA2B,MAAMX,aAAA,CAAc;QACnDC,KAAA,EAAOI,IAAA,CAAKK,QAAQ;QACpBR,eAAA;QACAC,UAAA,EAAYC;MACd;MACA,IAAIO,wBAAA,KAA6B,MAAM;QACrC,OAAOA,wBAAA;MACT;IACF;EACF;EAEA,OAAO;AACT","ignoreList":[]}