{"version":3,"file":"getCollapsedMargins.js","names":["getCollapsedMargins","elem","getMargin","element","margin","parseFloat","window","getComputedStyle","marginBottom","marginTop","prevElemSiblingMarginBottom","previousElementSibling","nextElemSiblingMarginTop","nextElementSibling","collapsedTopMargin","Math","max","collapsedBottomMargin"],"sources":["../../../../../src/lexical/plugins/handles/utils/getCollapsedMargins.ts"],"sourcesContent":["'use client'\nexport function getCollapsedMargins(elem: HTMLElement): {\n  marginBottom: number\n  marginTop: number\n} {\n  const getMargin = (element: Element | null, margin: 'marginBottom' | 'marginTop'): number =>\n    element ? parseFloat(window.getComputedStyle(element)[margin]) : 0\n\n  const { marginBottom, marginTop } = window.getComputedStyle(elem)\n  const prevElemSiblingMarginBottom = getMargin(elem.previousElementSibling, 'marginBottom')\n  const nextElemSiblingMarginTop = getMargin(elem.nextElementSibling, 'marginTop')\n  const collapsedTopMargin = Math.max(parseFloat(marginTop), prevElemSiblingMarginBottom)\n  const collapsedBottomMargin = Math.max(parseFloat(marginBottom), nextElemSiblingMarginTop)\n\n  return { marginBottom: collapsedBottomMargin, marginTop: collapsedTopMargin }\n}\n"],"mappings":"AAAA;;AACA,OAAO,SAASA,oBAAoBC,IAAiB;EAInD,MAAMC,SAAA,GAAYA,CAACC,OAAA,EAAyBC,MAAA,KAC1CD,OAAA,GAAUE,UAAA,CAAWC,MAAA,CAAOC,gBAAgB,CAACJ,OAAA,CAAQ,CAACC,MAAA,CAAO,IAAI;EAEnE,MAAM;IAAEI,YAAY;IAAEC;EAAS,CAAE,GAAGH,MAAA,CAAOC,gBAAgB,CAACN,IAAA;EAC5D,MAAMS,2BAAA,GAA8BR,SAAA,CAAUD,IAAA,CAAKU,sBAAsB,EAAE;EAC3E,MAAMC,wBAAA,GAA2BV,SAAA,CAAUD,IAAA,CAAKY,kBAAkB,EAAE;EACpE,MAAMC,kBAAA,GAAqBC,IAAA,CAAKC,GAAG,CAACX,UAAA,CAAWI,SAAA,GAAYC,2BAAA;EAC3D,MAAMO,qBAAA,GAAwBF,IAAA,CAAKC,GAAG,CAACX,UAAA,CAAWG,YAAA,GAAeI,wBAAA;EAEjE,OAAO;IAAEJ,YAAA,EAAcS,qBAAA;IAAuBR,SAAA,EAAWK;EAAmB;AAC9E","ignoreList":[]}