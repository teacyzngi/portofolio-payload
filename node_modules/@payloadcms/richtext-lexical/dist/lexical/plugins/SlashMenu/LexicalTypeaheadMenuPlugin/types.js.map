{"version":3,"file":"types.js","names":[],"sources":["../../../../../src/lexical/plugins/SlashMenu/LexicalTypeaheadMenuPlugin/types.ts"],"sourcesContent":["import type { I18nClient } from '@payloadcms/translations'\nimport type { LexicalEditor, Spread } from 'lexical'\nimport type React from 'react'\nimport type { RefObject } from 'react'\n\nimport type { FeatureClientSchemaMap } from '../../../../types.js'\n\nexport type SlashMenuItem = {\n  /** The icon which is rendered in your slash menu item. */\n  Icon: React.FC\n  /** Each slash menu item needs to have a unique key. The key will be matched when typing, displayed if no `label` property is set, and used for classNames. */\n  key: string\n  /**\n   * Keywords are used to match the item for different texts typed after the '/'.\n   * E.g. you might want to show a horizontal rule item if you type both /hr, /separator, /horizontal etc.\n   * In addition to the keywords, the label and key will be used to find the right slash menu item.\n   */\n  keywords?: Array<string>\n  /** The label will be displayed in your slash menu item. In order to make use of i18n, this can be a function. */\n  label?:\n    | ((args: {\n        featureClientSchemaMap: FeatureClientSchemaMap\n        i18n: I18nClient<{}, string>\n        schemaPath: string\n      }) => string)\n    | string\n  /** A function which is called when the slash menu item is selected. */\n  onSelect: ({ editor, queryString }: { editor: LexicalEditor; queryString: string }) => void\n}\n\nexport type SlashMenuGroup = {\n  /**\n   * An array of `SlashMenuItem`'s which will be displayed in the slash menu.\n   */\n  items: Array<SlashMenuItem>\n  /**\n   * Used for class names and, if label is not provided, for display. Slash menus with the same key will have their items merged together.\n   */\n  key: string\n  /** The label will be displayed before your Slash Menu group. In order to make use of i18n, this can be a function. */\n  label?:\n    | ((args: {\n        featureClientSchemaMap: FeatureClientSchemaMap\n        i18n: I18nClient<{}, string>\n        schemaPath: string\n      }) => string)\n    | string\n}\n\nexport type SlashMenuItemInternal = {\n  ref: RefObject<HTMLButtonElement | null>\n} & SlashMenuItem\n\nexport type SlashMenuGroupInternal = Spread<\n  {\n    items: Array<SlashMenuItemInternal>\n  },\n  SlashMenuGroup\n>\n"],"mappings":"AAqDA","ignoreList":[]}