{"version":3,"file":"LexicalMenu.js","names":["c","_c","useLexicalComposerContext","mergeRegister","$getSelection","$isRangeSelection","$setSelection","COMMAND_PRIORITY_LOW","COMMAND_PRIORITY_NORMAL","createCommand","KEY_ARROW_DOWN_COMMAND","KEY_ARROW_UP_COMMAND","KEY_ENTER_COMMAND","KEY_ESCAPE_COMMAND","KEY_TAB_COMMAND","useCallback","useEffect","useLayoutEffect","useMemo","useRef","useState","CAN_USE_DOM","baseClass","scrollIntoViewIfNeeded","target","typeaheadContainerNode","document","getElementById","typeaheadRect","getBoundingClientRect","top","height","window","innerHeight","scrollIntoView","block","getFullMatchOffset","documentText","entryText","offset","triggerOffset","i","length","substring","$splitNodeContainingQuery","match","selection","isCollapsed","anchor","type","anchorNode","getNode","isSimpleText","selectionOffset","textContent","getTextContent","slice","characterOffset","replaceableString","queryOffset","matchingString","startOffset","newNode","splitText","getScrollParent","element","includeHidden","style","getComputedStyle","excludeStaticParent","position","overflowRegex","body","parent1","parentElement","test","overflow","overflowY","overflowX","isTriggerVisibleInNearestScrollContainer","targetElement","containerElement","tRect","cRect","bottom","useDynamicPositioning","resolution","targetElementRef","onReposition","onVisibilityChange","$","editor","t0","t1","current","rootElement","getRootElement","rootScrollParent","ticking","previousIsInView","handleScroll","requestAnimationFrame","isInView","resizeObserver","ResizeObserver","addEventListener","capture","passive","observe","disconnect","removeEventListener","SCROLL_TYPEAHEAD_OPTION_INTO_VIEW_COMMAND","LexicalMenu","anchorElementRef","close","groups","menuRenderFn","shouldSplitNodeWithQuery","selectedItemKey","setSelectedItemKey","updateSelectedItem","item","rootElem","setAttribute","key","setSelectedItemKeyToFirstMatchingItem","allItems","flatMap","group","items","firstMatchingItem","selectItemAndCleanUp","selectedItem","update","textNodeContainingQuery","remove","setTimeout","read","clone","onSelect","queryString","removeAttribute","registerCommand","ref","payload","event","selectedIndex","findIndex","newSelectedIndex","newSelectedItem","dispatchCommand","index","preventDefault","stopImmediatePropagation","find","listItemProps","setContainerDivAttributes","containerDiv","className","display","useMenuAnchorRef","anchorElem","setResolution","Symbol","for","createElement","parent","undefined","menuEle","firstChild","width","getRect","left","rawTop","scrollY","scrollX","menuRect","menuHeight","menuWidth","rootElementRect","right","wouldGoOffBottomOfScreen","wouldGoOffTopOfScreen","isConnected","append","positionMenu","t2","t3","rootElement_0","containerDiv_0","t4"],"sources":["../../../../../src/lexical/plugins/SlashMenu/LexicalTypeaheadMenuPlugin/LexicalMenu.tsx"],"sourcesContent":["'use client'\nimport type { BaseSelection, LexicalCommand, LexicalEditor, TextNode } from 'lexical'\nimport type { JSX, ReactPortal, RefObject } from 'react'\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext.js'\nimport { mergeRegister } from '@lexical/utils'\nimport {\n  $getSelection,\n  $isRangeSelection,\n  $setSelection,\n  COMMAND_PRIORITY_LOW,\n  COMMAND_PRIORITY_NORMAL,\n  createCommand,\n  KEY_ARROW_DOWN_COMMAND,\n  KEY_ARROW_UP_COMMAND,\n  KEY_ENTER_COMMAND,\n  KEY_ESCAPE_COMMAND,\n  KEY_TAB_COMMAND,\n} from 'lexical'\nimport { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react'\n\nimport type { MenuTextMatch } from '../useMenuTriggerMatch.js'\nimport type { SlashMenuGroupInternal, SlashMenuItem, SlashMenuItemInternal } from './types.js'\n\nimport { CAN_USE_DOM } from '../../../utils/canUseDOM.js'\n\nexport type MenuResolution = {\n  getRect: () => DOMRect\n  match?: MenuTextMatch\n}\n\nconst baseClass = 'slash-menu-popup'\n\nexport type MenuRenderFn = (\n  anchorElementRef: RefObject<HTMLElement | null>,\n  itemProps: {\n    groups: Array<SlashMenuGroupInternal>\n    selectedItemKey: null | string\n    selectItemAndCleanUp: (selectedItem: SlashMenuItem) => void\n    setSelectedItemKey: (itemKey: string) => void\n  },\n  matchingString: null | string,\n) => JSX.Element | null | ReactPortal\n\nconst scrollIntoViewIfNeeded = (target: HTMLElement) => {\n  const typeaheadContainerNode = document.getElementById('slash-menu')\n  if (!typeaheadContainerNode) {\n    return\n  }\n\n  const typeaheadRect = typeaheadContainerNode.getBoundingClientRect()\n\n  if (typeaheadRect.top + typeaheadRect.height > window.innerHeight) {\n    typeaheadContainerNode.scrollIntoView({\n      block: 'center',\n    })\n  }\n\n  if (typeaheadRect.top < 0) {\n    typeaheadContainerNode.scrollIntoView({\n      block: 'center',\n    })\n  }\n\n  target.scrollIntoView({ block: 'nearest' })\n}\n\n/**\n * Walk backwards along user input and forward through entity title to try\n * and replace more of the user's text with entity.\n */\nfunction getFullMatchOffset(documentText: string, entryText: string, offset: number) {\n  let triggerOffset = offset\n  for (let i = triggerOffset; i <= entryText.length; i++) {\n    if (documentText.substring(documentText.length - i) === entryText.substring(0, i)) {\n      triggerOffset = i\n    }\n  }\n  return triggerOffset\n}\n\n/**\n * Split Lexical TextNode and return a new TextNode only containing matched text.\n * Common use cases include: removing the node, replacing with a new node.\n */\nfunction $splitNodeContainingQuery(match: MenuTextMatch): TextNode | undefined {\n  const selection = $getSelection()\n  if (!$isRangeSelection(selection) || !selection.isCollapsed()) {\n    return\n  }\n  const anchor = selection.anchor\n  if (anchor.type !== 'text') {\n    return\n  }\n  const anchorNode = anchor.getNode()\n  if (!anchorNode.isSimpleText()) {\n    return\n  }\n  const selectionOffset = anchor.offset\n  const textContent = anchorNode.getTextContent().slice(0, selectionOffset)\n  const characterOffset = match.replaceableString.length\n  const queryOffset = getFullMatchOffset(textContent, match.matchingString, characterOffset)\n  const startOffset = selectionOffset - queryOffset\n  if (startOffset < 0) {\n    return\n  }\n  let newNode\n  if (startOffset === 0) {\n    ;[newNode] = anchorNode.splitText(selectionOffset)\n  } else {\n    ;[, newNode] = anchorNode.splitText(startOffset, selectionOffset)\n  }\n\n  return newNode\n}\n\n// Got from https://stackoverflow.com/a/42543908/2013580\nexport function getScrollParent(\n  element: HTMLElement,\n  includeHidden: boolean,\n): HTMLBodyElement | HTMLElement {\n  let style = getComputedStyle(element)\n  const excludeStaticParent = style.position === 'absolute'\n  const overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/\n  if (style.position === 'fixed') {\n    return document.body\n  }\n  for (let parent: HTMLElement | null = element; (parent = parent.parentElement); ) {\n    style = getComputedStyle(parent)\n    if (excludeStaticParent && style.position === 'static') {\n      continue\n    }\n    if (overflowRegex.test(style.overflow + style.overflowY + style.overflowX)) {\n      return parent\n    }\n  }\n  return document.body\n}\n\nfunction isTriggerVisibleInNearestScrollContainer(\n  targetElement: HTMLElement,\n  containerElement: HTMLElement,\n): boolean {\n  const tRect = targetElement.getBoundingClientRect()\n  const cRect = containerElement.getBoundingClientRect()\n  return tRect.top > cRect.top && tRect.top < cRect.bottom\n}\n\n// Reposition the menu on scroll, window resize, and element resize.\nexport function useDynamicPositioning(\n  resolution: MenuResolution | null,\n  targetElementRef: RefObject<HTMLElement | null>,\n  onReposition: () => void,\n  onVisibilityChange?: (isInView: boolean) => void,\n) {\n  const [editor] = useLexicalComposerContext()\n  useEffect(() => {\n    const targetElement = targetElementRef.current\n    if (targetElement != null && resolution != null) {\n      const rootElement = editor.getRootElement()\n      const rootScrollParent =\n        rootElement != null ? getScrollParent(rootElement, false) : document.body\n      let ticking = false\n      let previousIsInView = isTriggerVisibleInNearestScrollContainer(\n        targetElement,\n        rootScrollParent,\n      )\n      const handleScroll = function () {\n        if (!ticking) {\n          window.requestAnimationFrame(function () {\n            onReposition()\n            ticking = false\n          })\n          ticking = true\n        }\n        const isInView = isTriggerVisibleInNearestScrollContainer(targetElement, rootScrollParent)\n        if (isInView !== previousIsInView) {\n          previousIsInView = isInView\n          if (onVisibilityChange != null) {\n            onVisibilityChange(isInView)\n          }\n        }\n      }\n      const resizeObserver = new ResizeObserver(onReposition)\n      window.addEventListener('resize', onReposition)\n      document.addEventListener('scroll', handleScroll, {\n        capture: true,\n        passive: true,\n      })\n      resizeObserver.observe(targetElement)\n      return () => {\n        resizeObserver.disconnect()\n        window.removeEventListener('resize', onReposition)\n        document.removeEventListener('scroll', handleScroll, true)\n      }\n    }\n  }, [editor, onVisibilityChange, onReposition, resolution, targetElementRef])\n}\n\nexport const SCROLL_TYPEAHEAD_OPTION_INTO_VIEW_COMMAND: LexicalCommand<{\n  index: number\n  item: SlashMenuItemInternal\n}> = createCommand('SCROLL_TYPEAHEAD_OPTION_INTO_VIEW_COMMAND')\n\nexport function LexicalMenu({\n  anchorElementRef,\n  close,\n  editor,\n  // groups filtering is already handled in SlashMenu/index.tsx. Thus, groups always contains the matching items.\n  groups,\n  menuRenderFn,\n  resolution,\n  shouldSplitNodeWithQuery = false,\n}: {\n  anchorElementRef: RefObject<HTMLElement | null>\n  close: () => void\n  editor: LexicalEditor\n  groups: Array<SlashMenuGroupInternal>\n  menuRenderFn: MenuRenderFn\n  resolution: MenuResolution\n  shouldSplitNodeWithQuery?: boolean\n}): JSX.Element | null {\n  const [selectedItemKey, setSelectedItemKey] = useState<null | string>(null)\n\n  const matchingString = (resolution.match && resolution.match.matchingString) || ''\n\n  const updateSelectedItem = useCallback(\n    (item: SlashMenuItem) => {\n      const rootElem = editor.getRootElement()\n      if (rootElem !== null) {\n        rootElem.setAttribute('aria-activedescendant', `${baseClass}__item-${item.key}`)\n        setSelectedItemKey(item.key)\n      }\n    },\n    [editor],\n  )\n\n  const setSelectedItemKeyToFirstMatchingItem = useCallback(() => {\n    // set selected item to the first of the matching ones\n    if (groups !== null && matchingString != null) {\n      // groups filtering is already handled in SlashMenu/index.tsx. Thus, groups always contains the matching items.\n      const allItems = groups.flatMap((group) => group.items)\n\n      if (allItems.length) {\n        const firstMatchingItem = allItems[0]!\n        updateSelectedItem(firstMatchingItem)\n      }\n    }\n  }, [groups, updateSelectedItem, matchingString])\n\n  useEffect(() => {\n    setSelectedItemKeyToFirstMatchingItem()\n  }, [matchingString, setSelectedItemKeyToFirstMatchingItem])\n\n  const selectItemAndCleanUp = useCallback(\n    (selectedItem: SlashMenuItem) => {\n      close()\n\n      editor.update(() => {\n        const textNodeContainingQuery =\n          resolution.match != null && shouldSplitNodeWithQuery\n            ? $splitNodeContainingQuery(resolution.match)\n            : null\n\n        if (textNodeContainingQuery) {\n          textNodeContainingQuery.remove()\n        }\n      })\n\n      setTimeout(() => {\n        // Needed in Firefox. See https://github.com/payloadcms/payload/issues/10724\n        let selection: BaseSelection | undefined\n        editor.read(() => {\n          selection = $getSelection()?.clone()\n        })\n        editor.update(() => {\n          if (selection) {\n            $setSelection(selection)\n          }\n        })\n\n        selectedItem.onSelect({\n          editor,\n          queryString: resolution.match ? resolution.match.matchingString : '',\n        })\n      }, 0)\n    },\n    [editor, shouldSplitNodeWithQuery, resolution.match, close],\n  )\n\n  useEffect(() => {\n    return () => {\n      const rootElem = editor.getRootElement()\n      if (rootElem !== null) {\n        rootElem.removeAttribute('aria-activedescendant')\n      }\n    }\n  }, [editor])\n\n  useLayoutEffect(() => {\n    if (groups === null) {\n      setSelectedItemKey(null)\n    } else if (selectedItemKey === null) {\n      setSelectedItemKeyToFirstMatchingItem()\n    }\n  }, [groups, selectedItemKey, updateSelectedItem, setSelectedItemKeyToFirstMatchingItem])\n\n  useEffect(() => {\n    return mergeRegister(\n      editor.registerCommand(\n        SCROLL_TYPEAHEAD_OPTION_INTO_VIEW_COMMAND,\n        ({ item }) => {\n          if (item.ref && item.ref.current != null) {\n            scrollIntoViewIfNeeded(item.ref.current)\n            return true\n          }\n\n          return false\n        },\n        COMMAND_PRIORITY_LOW,\n      ),\n    )\n  }, [editor, updateSelectedItem])\n\n  useEffect(() => {\n    return mergeRegister(\n      editor.registerCommand<KeyboardEvent>(\n        KEY_ARROW_DOWN_COMMAND,\n        (payload) => {\n          const event = payload\n          if (groups !== null && groups.length && selectedItemKey !== null) {\n            const allItems = groups.flatMap((group) => group.items)\n            const selectedIndex = allItems.findIndex((item) => item.key === selectedItemKey)\n\n            const newSelectedIndex = selectedIndex !== allItems.length - 1 ? selectedIndex + 1 : 0\n\n            const newSelectedItem = allItems[newSelectedIndex]\n            if (!newSelectedItem) {\n              return false\n            }\n\n            updateSelectedItem(newSelectedItem)\n            if (newSelectedItem.ref != null && newSelectedItem.ref.current) {\n              editor.dispatchCommand(SCROLL_TYPEAHEAD_OPTION_INTO_VIEW_COMMAND, {\n                index: newSelectedIndex,\n                item: newSelectedItem,\n              })\n            }\n            event.preventDefault()\n            event.stopImmediatePropagation()\n          }\n          return true\n        },\n        COMMAND_PRIORITY_NORMAL,\n      ),\n      editor.registerCommand<KeyboardEvent>(\n        KEY_ARROW_UP_COMMAND,\n        (payload) => {\n          const event = payload\n          if (groups !== null && groups.length && selectedItemKey !== null) {\n            const allItems = groups.flatMap((group) => group.items)\n            const selectedIndex = allItems.findIndex((item) => item.key === selectedItemKey)\n\n            const newSelectedIndex = selectedIndex !== 0 ? selectedIndex - 1 : allItems.length - 1\n\n            const newSelectedItem = allItems[newSelectedIndex]\n            if (!newSelectedItem) {\n              return false\n            }\n\n            updateSelectedItem(newSelectedItem)\n            if (newSelectedItem.ref != null && newSelectedItem.ref.current) {\n              scrollIntoViewIfNeeded(newSelectedItem.ref.current)\n            }\n            event.preventDefault()\n            event.stopImmediatePropagation()\n          }\n          return true\n        },\n        COMMAND_PRIORITY_NORMAL,\n      ),\n      editor.registerCommand<KeyboardEvent>(\n        KEY_ESCAPE_COMMAND,\n        (payload) => {\n          const event = payload\n          event.preventDefault()\n          event.stopImmediatePropagation()\n          close()\n          return true\n        },\n        COMMAND_PRIORITY_LOW,\n      ),\n      editor.registerCommand<KeyboardEvent>(\n        KEY_TAB_COMMAND,\n        (payload) => {\n          const event = payload\n\n          if (groups === null || selectedItemKey === null) {\n            return false\n          }\n          const allItems = groups.flatMap((group) => group.items)\n          const selectedItem = allItems.find((item) => item.key === selectedItemKey)\n          if (!selectedItem) {\n            return false\n          }\n\n          event.preventDefault()\n          event.stopImmediatePropagation()\n          selectItemAndCleanUp(selectedItem)\n          return true\n        },\n        COMMAND_PRIORITY_NORMAL,\n      ),\n      editor.registerCommand(\n        KEY_ENTER_COMMAND,\n        (event: KeyboardEvent | null) => {\n          if (groups === null || selectedItemKey === null) {\n            return false\n          }\n          const allItems = groups.flatMap((group) => group.items)\n          const selectedItem = allItems.find((item) => item.key === selectedItemKey)\n          if (!selectedItem) {\n            return false\n          }\n\n          if (event !== null) {\n            event.preventDefault()\n            event.stopImmediatePropagation()\n          }\n          selectItemAndCleanUp(selectedItem)\n          return true\n        },\n        COMMAND_PRIORITY_NORMAL,\n      ),\n    )\n  }, [selectItemAndCleanUp, close, editor, groups, selectedItemKey, updateSelectedItem])\n\n  const listItemProps = useMemo(\n    () => ({\n      groups,\n      selectedItemKey,\n      selectItemAndCleanUp,\n      setSelectedItemKey,\n    }),\n    [selectItemAndCleanUp, selectedItemKey, groups],\n  )\n\n  return menuRenderFn(\n    anchorElementRef,\n    listItemProps,\n    resolution.match ? resolution.match.matchingString : '',\n  )\n}\n\nfunction setContainerDivAttributes(containerDiv: HTMLElement, className?: string) {\n  if (className != null) {\n    containerDiv.className = className\n  }\n  containerDiv.setAttribute('aria-label', 'Slash menu')\n  containerDiv.setAttribute('role', 'listbox')\n  containerDiv.style.display = 'block'\n  containerDiv.style.position = 'absolute'\n}\n\nexport function useMenuAnchorRef(\n  anchorElem: HTMLElement,\n  resolution: MenuResolution | null,\n  setResolution: (r: MenuResolution | null) => void,\n  className?: string,\n): RefObject<HTMLElement | null> {\n  const [editor] = useLexicalComposerContext()\n  const anchorElementRef = useRef<HTMLElement | null>(\n    CAN_USE_DOM ? document.createElement('div') : null,\n  )\n  const positionMenu = useCallback(() => {\n    if (anchorElementRef.current === null || parent === undefined) {\n      return\n    }\n    const rootElement = editor.getRootElement()\n    const containerDiv = anchorElementRef.current\n\n    const VERTICAL_OFFSET = 32\n\n    const menuEle = containerDiv.firstChild as Element\n    if (rootElement !== null && resolution !== null) {\n      const { height, width } = resolution.getRect()\n      let { left, top } = resolution.getRect()\n\n      const rawTop = top\n      top -= anchorElem.getBoundingClientRect().top + window.scrollY\n      left -= anchorElem.getBoundingClientRect().left + window.scrollX\n      containerDiv.style.left = `${left + window.scrollX}px`\n      containerDiv.style.height = `${height}px`\n      containerDiv.style.width = `${width}px`\n      if (menuEle !== null) {\n        const menuRect = menuEle.getBoundingClientRect()\n        const menuHeight = menuRect.height\n        const menuWidth = menuRect.width\n\n        const rootElementRect = rootElement.getBoundingClientRect()\n\n        if (left + menuWidth > rootElementRect.right) {\n          containerDiv.style.left = `${rootElementRect.right - menuWidth + window.scrollX}px`\n        }\n\n        const wouldGoOffBottomOfScreen = rawTop + menuHeight + VERTICAL_OFFSET > window.innerHeight\n        //const wouldGoOffBottomOfContainer = top + menuHeight > rootElementRect.bottom\n        const wouldGoOffTopOfScreen = rawTop < 0\n\n        // Position slash menu above the cursor instead of below (default) if it would otherwise go off the bottom of the screen.\n        if (wouldGoOffBottomOfScreen && !wouldGoOffTopOfScreen) {\n          const margin = 24\n          containerDiv.style.top = `${\n            top + VERTICAL_OFFSET - menuHeight + window.scrollY - (height + margin)\n          }px`\n        } else {\n          containerDiv.style.top = `${top + window.scrollY + VERTICAL_OFFSET}px`\n        }\n      }\n\n      if (!containerDiv.isConnected) {\n        setContainerDivAttributes(containerDiv, className)\n        anchorElem.append(containerDiv)\n      }\n      containerDiv.setAttribute('id', 'slash-menu')\n      anchorElementRef.current = containerDiv\n      rootElement.setAttribute('aria-controls', 'slash-menu')\n    }\n  }, [editor, resolution, className, anchorElem])\n\n  useEffect(() => {\n    const rootElement = editor.getRootElement()\n    if (resolution !== null) {\n      positionMenu()\n      return () => {\n        if (rootElement !== null) {\n          rootElement.removeAttribute('aria-controls')\n        }\n\n        const containerDiv = anchorElementRef.current\n        if (containerDiv !== null && containerDiv.isConnected) {\n          containerDiv.remove()\n          containerDiv.removeAttribute('id')\n        }\n      }\n    }\n  }, [editor, positionMenu, resolution])\n\n  const onVisibilityChange = useCallback(\n    (isInView: boolean) => {\n      if (resolution !== null) {\n        if (!isInView) {\n          setResolution(null)\n        }\n      }\n    },\n    [resolution, setResolution],\n  )\n\n  useDynamicPositioning(resolution, anchorElementRef, positionMenu, onVisibilityChange)\n\n  return anchorElementRef\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;AAIA,SAASC,yBAAyB,QAAQ;AAC1C,SAASC,aAAa,QAAQ;AAC9B,SACEC,aAAa,EACbC,iBAAiB,EACjBC,aAAa,EACbC,oBAAoB,EACpBC,uBAAuB,EACvBC,aAAa,EACbC,sBAAsB,EACtBC,oBAAoB,EACpBC,iBAAiB,EACjBC,kBAAkB,EAClBC,eAAe,QACV;AACP,SAASC,WAAW,EAAEC,SAAS,EAAEC,eAAe,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ;AAKnF,SAASC,WAAW,QAAQ;AAO5B,MAAMC,SAAA,GAAY;AAalB,MAAMC,sBAAA,GAA0BC,MAAA;EAC9B,MAAMC,sBAAA,GAAyBC,QAAA,CAASC,cAAc,CAAC;EACvD,IAAI,CAACF,sBAAA,EAAwB;IAC3B;EACF;EAEA,MAAMG,aAAA,GAAgBH,sBAAA,CAAuBI,qBAAqB;EAElE,IAAID,aAAA,CAAcE,GAAG,GAAGF,aAAA,CAAcG,MAAM,GAAGC,MAAA,CAAOC,WAAW,EAAE;IACjER,sBAAA,CAAuBS,cAAc,CAAC;MACpCC,KAAA,EAAO;IACT;EACF;EAEA,IAAIP,aAAA,CAAcE,GAAG,GAAG,GAAG;IACzBL,sBAAA,CAAuBS,cAAc,CAAC;MACpCC,KAAA,EAAO;IACT;EACF;EAEAX,MAAA,CAAOU,cAAc,CAAC;IAAEC,KAAA,EAAO;EAAU;AAC3C;AAEA;;;;AAIA,SAASC,mBAAmBC,YAAoB,EAAEC,SAAiB,EAAEC,MAAc;EACjF,IAAIC,aAAA,GAAgBD,MAAA;EACpB,KAAK,IAAIE,CAAA,GAAID,aAAA,EAAeC,CAAA,IAAKH,SAAA,CAAUI,MAAM,EAAED,CAAA,IAAK;IACtD,IAAIJ,YAAA,CAAaM,SAAS,CAACN,YAAA,CAAaK,MAAM,GAAGD,CAAA,MAAOH,SAAA,CAAUK,SAAS,CAAC,GAAGF,CAAA,GAAI;MACjFD,aAAA,GAAgBC,CAAA;IAClB;EACF;EACA,OAAOD,aAAA;AACT;AAEA;;;;AAIA,SAASI,0BAA0BC,KAAoB;EACrD,MAAMC,SAAA,GAAY1C,aAAA;EAClB,IAAI,CAACC,iBAAA,CAAkByC,SAAA,KAAc,CAACA,SAAA,CAAUC,WAAW,IAAI;IAC7D;EACF;EACA,MAAMC,MAAA,GAASF,SAAA,CAAUE,MAAM;EAC/B,IAAIA,MAAA,CAAOC,IAAI,KAAK,QAAQ;IAC1B;EACF;EACA,MAAMC,UAAA,GAAaF,MAAA,CAAOG,OAAO;EACjC,IAAI,CAACD,UAAA,CAAWE,YAAY,IAAI;IAC9B;EACF;EACA,MAAMC,eAAA,GAAkBL,MAAA,CAAOT,MAAM;EACrC,MAAMe,WAAA,GAAcJ,UAAA,CAAWK,cAAc,GAAGC,KAAK,CAAC,GAAGH,eAAA;EACzD,MAAMI,eAAA,GAAkBZ,KAAA,CAAMa,iBAAiB,CAAChB,MAAM;EACtD,MAAMiB,WAAA,GAAcvB,kBAAA,CAAmBkB,WAAA,EAAaT,KAAA,CAAMe,cAAc,EAAEH,eAAA;EAC1E,MAAMI,WAAA,GAAcR,eAAA,GAAkBM,WAAA;EACtC,IAAIE,WAAA,GAAc,GAAG;IACnB;EACF;EACA,IAAIC,OAAA;EACJ,IAAID,WAAA,KAAgB,GAAG;IACpB,CAACC,OAAA,CAAQ,GAAGZ,UAAA,CAAWa,SAAS,CAACV,eAAA;EACpC,OAAO;IACJ,GAAGS,OAAA,CAAQ,GAAGZ,UAAA,CAAWa,SAAS,CAACF,WAAA,EAAaR,eAAA;EACnD;EAEA,OAAOS,OAAA;AACT;AAEA;AACA,OAAO,SAASE,gBACdC,OAAoB,EACpBC,aAAsB;EAEtB,IAAIC,KAAA,GAAQC,gBAAA,CAAiBH,OAAA;EAC7B,MAAMI,mBAAA,GAAsBF,KAAA,CAAMG,QAAQ,KAAK;EAC/C,MAAMC,aAAA,GAAgBL,aAAA,GAAgB,yBAAyB;EAC/D,IAAIC,KAAA,CAAMG,QAAQ,KAAK,SAAS;IAC9B,OAAO5C,QAAA,CAAS8C,IAAI;EACtB;EACA,KAAK,IAAIC,OAAA,GAA6BR,OAAA,EAAUQ,OAAA,GAASA,OAAA,CAAOC,aAAa,GAAK;IAChFP,KAAA,GAAQC,gBAAA,CAAiBK,OAAA;IACzB,IAAIJ,mBAAA,IAAuBF,KAAA,CAAMG,QAAQ,KAAK,UAAU;MACtD;IACF;IACA,IAAIC,aAAA,CAAcI,IAAI,CAACR,KAAA,CAAMS,QAAQ,GAAGT,KAAA,CAAMU,SAAS,GAAGV,KAAA,CAAMW,SAAS,GAAG;MAC1E,OAAOL,OAAA;IACT;EACF;EACA,OAAO/C,QAAA,CAAS8C,IAAI;AACtB;AAEA,SAASO,yCACPC,aAA0B,EAC1BC,gBAA6B;EAE7B,MAAMC,KAAA,GAAQF,aAAA,CAAcnD,qBAAqB;EACjD,MAAMsD,KAAA,GAAQF,gBAAA,CAAiBpD,qBAAqB;EACpD,OAAOqD,KAAA,CAAMpD,GAAG,GAAGqD,KAAA,CAAMrD,GAAG,IAAIoD,KAAA,CAAMpD,GAAG,GAAGqD,KAAA,CAAMC,MAAM;AAC1D;AAEA;AACA,OAAO,SAAAC,sBAAAC,UAAA,EAAAC,gBAAA,EAAAC,YAAA,EAAAC,kBAAA;EAAA,MAAAC,CAAA,GAAAzF,EAAA;EAML,OAAA0F,MAAA,IAAiBzF,yBAAA;EAAA,IAAA0F,EAAA;EAAA,IAAAC,EAAA;EAAA,IAAAH,CAAA,QAAAC,MAAA,IAAAD,CAAA,QAAAF,YAAA,IAAAE,CAAA,QAAAD,kBAAA,IAAAC,CAAA,QAAAJ,UAAA,IAAAI,CAAA,QAAAH,gBAAA;IACPK,EAAA,GAAAA,CAAA;MACR,MAAAZ,aAAA,GAAsBO,gBAAA,CAAAO,OAAA;MAAwB,IAC1Cd,aAAA,QAAiB,IAAQM,UAAA,QAAc;QACzC,MAAAS,WAAA,GAAoBJ,MAAA,CAAAK,cAAA,CAAqB;QACzC,MAAAC,gBAAA,GACEF,WAAA,QAAe,GAAO/B,eAAA,CAAgB+B,WAAA,OAAa,IAAArE,QAAA,CAAA8C,IAAsB;QAC3E,IAAA0B,OAAA;QACA,IAAAC,gBAAA,GAAuBpB,wCAAA,CACrBC,aAAA,EACAiB,gBAAA;QAEF,MAAAG,YAAA,YAAAA,CAAA;UAAA,KACOF,OAAA;YACHlE,MAAA,CAAAqE,qBAAA;cACEb,YAAA;cACAU,OAAA,CAAAA,CAAA,CAAAA,KAAA;YAAA,CACF;YACAA,OAAA,CAAAA,CAAA,CAAAA,IAAA;UAAA;UAEF,MAAAI,QAAA,GAAiBvB,wCAAA,CAAyCC,aAAA,EAAeiB,gBAAA;UAAA,IACrEK,QAAA,KAAaH,gBAAA;YACfA,gBAAA,CAAAA,CAAA,CAAmBG,QAAA;YAAnB,IACIb,kBAAA,QAAsB;cACxBA,kBAAA,CAAmBa,QAAA;YAAA;UAAA;QAAA;QAIzB,MAAAC,cAAA,OAAAC,cAAA,CAA0ChB,YAAA;QAC1CxD,MAAA,CAAAyE,gBAAA,CAAwB,UAAUjB,YAAA;QAClC9D,QAAA,CAAA+E,gBAAA,CAA0B,UAAUL,YAAA;UAAAM,OAAA;UAAAC,OAAA;QAAA,CAGpC;QACAJ,cAAA,CAAAK,OAAA,CAAuB5B,aAAA;QAAA;UAErBuB,cAAA,CAAAM,UAAA,CAAyB;UACzB7E,MAAA,CAAA8E,mBAAA,CAA2B,UAAUtB,YAAA;UACrC9D,QAAA,CAAAoF,mBAAA,CAA6B,UAAUV,YAAA,MAAc;QAAA;MAAA;IAAA;IAGxDP,EAAA,IAACF,MAAA,EAAQF,kBAAA,EAAoBD,YAAA,EAAcF,UAAA,EAAYC,gBAAA;IAAiBG,CAAA,MAAAC,MAAA;IAAAD,CAAA,MAAAF,YAAA;IAAAE,CAAA,MAAAD,kBAAA;IAAAC,CAAA,MAAAJ,UAAA;IAAAI,CAAA,MAAAH,gBAAA;IAAAG,CAAA,MAAAE,EAAA;IAAAF,CAAA,MAAAG,EAAA;EAAA;IAAAD,EAAA,GAAAF,CAAA;IAAAG,EAAA,GAAAH,CAAA;EAAA;EAxC3E1E,SAAA,CAAU4E,EAwCV,EAAGC,EAAwE;AAAA;AAG7E,OAAO,MAAMkB,yCAAA,GAGRtG,aAAA,CAAc;AAEnB,OAAO,SAASuG,YAAY;EAC1BC,gBAAgB;EAChBC,KAAK;EACLvB,MAAM;EACN;EACAwB,MAAM;EACNC,YAAY;EACZ9B,UAAU;EACV+B,wBAAA,GAA2B;AAAK,CASjC;EACC,MAAM,CAACC,eAAA,EAAiBC,kBAAA,CAAmB,GAAGnG,QAAA,CAAwB;EAEtE,MAAMwC,cAAA,GAAiB0B,UAAC,CAAWzC,KAAK,IAAIyC,UAAA,CAAWzC,KAAK,CAACe,cAAc,IAAK;EAEhF,MAAM4D,kBAAA,GAAqBzG,WAAA,CACxB0G,IAAA;IACC,MAAMC,QAAA,GAAW/B,MAAA,CAAOK,cAAc;IACtC,IAAI0B,QAAA,KAAa,MAAM;MACrBA,QAAA,CAASC,YAAY,CAAC,yBAAyB,GAAGrG,SAAA,UAAmBmG,IAAA,CAAKG,GAAG,EAAE;MAC/EL,kBAAA,CAAmBE,IAAA,CAAKG,GAAG;IAC7B;EACF,GACA,CAACjC,MAAA,CAAO;EAGV,MAAMkC,qCAAA,GAAwC9G,WAAA,CAAY;IACxD;IACA,IAAIoG,MAAA,KAAW,QAAQvD,cAAA,IAAkB,MAAM;MAC7C;MACA,MAAMkE,QAAA,GAAWX,MAAA,CAAOY,OAAO,CAAEC,KAAA,IAAUA,KAAA,CAAMC,KAAK;MAEtD,IAAIH,QAAA,CAASpF,MAAM,EAAE;QACnB,MAAMwF,iBAAA,GAAoBJ,QAAQ,CAAC,EAAE;QACrCN,kBAAA,CAAmBU,iBAAA;MACrB;IACF;EACF,GAAG,CAACf,MAAA,EAAQK,kBAAA,EAAoB5D,cAAA,CAAe;EAE/C5C,SAAA,CAAU;IACR6G,qCAAA;EACF,GAAG,CAACjE,cAAA,EAAgBiE,qCAAA,CAAsC;EAE1D,MAAMM,oBAAA,GAAuBpH,WAAA,CAC1BqH,YAAA;IACClB,KAAA;IAEAvB,MAAA,CAAO0C,MAAM,CAAC;MACZ,MAAMC,uBAAA,GACJhD,UAAA,CAAWzC,KAAK,IAAI,QAAQwE,wBAAA,GACxBzE,yBAAA,CAA0B0C,UAAA,CAAWzC,KAAK,IAC1C;MAEN,IAAIyF,uBAAA,EAAyB;QAC3BA,uBAAA,CAAwBC,MAAM;MAChC;IACF;IAEAC,UAAA,CAAW;MACT;MACA,IAAI1F,SAAA;MACJ6C,MAAA,CAAO8C,IAAI,CAAC;QACV3F,SAAA,GAAY1C,aAAA,IAAiBsI,KAAA;MAC/B;MACA/C,MAAA,CAAO0C,MAAM,CAAC;QACZ,IAAIvF,SAAA,EAAW;UACbxC,aAAA,CAAcwC,SAAA;QAChB;MACF;MAEAsF,YAAA,CAAaO,QAAQ,CAAC;QACpBhD,MAAA;QACAiD,WAAA,EAAatD,UAAA,CAAWzC,KAAK,GAAGyC,UAAA,CAAWzC,KAAK,CAACe,cAAc,GAAG;MACpE;IACF,GAAG;EACL,GACA,CAAC+B,MAAA,EAAQ0B,wBAAA,EAA0B/B,UAAA,CAAWzC,KAAK,EAAEqE,KAAA,CAAM;EAG7DlG,SAAA,CAAU;IACR,OAAO;MACL,MAAM0G,UAAA,GAAW/B,MAAA,CAAOK,cAAc;MACtC,IAAI0B,UAAA,KAAa,MAAM;QACrBA,UAAA,CAASmB,eAAe,CAAC;MAC3B;IACF;EACF,GAAG,CAAClD,MAAA,CAAO;EAEX1E,eAAA,CAAgB;IACd,IAAIkG,MAAA,KAAW,MAAM;MACnBI,kBAAA,CAAmB;IACrB,OAAO,IAAID,eAAA,KAAoB,MAAM;MACnCO,qCAAA;IACF;EACF,GAAG,CAACV,MAAA,EAAQG,eAAA,EAAiBE,kBAAA,EAAoBK,qCAAA,CAAsC;EAEvF7G,SAAA,CAAU;IACR,OAAOb,aAAA,CACLwF,MAAA,CAAOmD,eAAe,CACpB/B,yCAAA,EACA,CAAC;MAAEU,IAAI,EAAJA;IAAI,CAAE;MACP,IAAIA,MAAA,CAAKsB,GAAG,IAAItB,MAAA,CAAKsB,GAAG,CAACjD,OAAO,IAAI,MAAM;QACxCvE,sBAAA,CAAuBkG,MAAA,CAAKsB,GAAG,CAACjD,OAAO;QACvC,OAAO;MACT;MAEA,OAAO;IACT,GACAvF,oBAAA;EAGN,GAAG,CAACoF,MAAA,EAAQ6B,kBAAA,CAAmB;EAE/BxG,SAAA,CAAU;IACR,OAAOb,aAAA,CACLwF,MAAA,CAAOmD,eAAe,CACpBpI,sBAAA,EACCsI,OAAA;MACC,MAAMC,KAAA,GAAQD,OAAA;MACd,IAAI7B,MAAA,KAAW,QAAQA,MAAA,CAAOzE,MAAM,IAAI4E,eAAA,KAAoB,MAAM;QAChE,MAAMQ,UAAA,GAAWX,MAAA,CAAOY,OAAO,CAAEC,OAAA,IAAUA,OAAA,CAAMC,KAAK;QACtD,MAAMiB,aAAA,GAAgBpB,UAAA,CAASqB,SAAS,CAAE1B,MAAA,IAASA,MAAA,CAAKG,GAAG,KAAKN,eAAA;QAEhE,MAAM8B,gBAAA,GAAmBF,aAAA,KAAkBpB,UAAA,CAASpF,MAAM,GAAG,IAAIwG,aAAA,GAAgB,IAAI;QAErF,MAAMG,eAAA,GAAkBvB,UAAQ,CAACsB,gBAAA,CAAiB;QAClD,IAAI,CAACC,eAAA,EAAiB;UACpB,OAAO;QACT;QAEA7B,kBAAA,CAAmB6B,eAAA;QACnB,IAAIA,eAAA,CAAgBN,GAAG,IAAI,QAAQM,eAAA,CAAgBN,GAAG,CAACjD,OAAO,EAAE;UAC9DH,MAAA,CAAO2D,eAAe,CAACvC,yCAAA,EAA2C;YAChEwC,KAAA,EAAOH,gBAAA;YACP3B,IAAA,EAAM4B;UACR;QACF;QACAJ,KAAA,CAAMO,cAAc;QACpBP,KAAA,CAAMQ,wBAAwB;MAChC;MACA,OAAO;IACT,GACAjJ,uBAAA,GAEFmF,MAAA,CAAOmD,eAAe,CACpBnI,oBAAA,EACCqI,SAAA;MACC,MAAMC,OAAA,GAAQD,SAAA;MACd,IAAI7B,MAAA,KAAW,QAAQA,MAAA,CAAOzE,MAAM,IAAI4E,eAAA,KAAoB,MAAM;QAChE,MAAMQ,UAAA,GAAWX,MAAA,CAAOY,OAAO,CAAEC,OAAA,IAAUA,OAAA,CAAMC,KAAK;QACtD,MAAMiB,eAAA,GAAgBpB,UAAA,CAASqB,SAAS,CAAE1B,MAAA,IAASA,MAAA,CAAKG,GAAG,KAAKN,eAAA;QAEhE,MAAM8B,kBAAA,GAAmBF,eAAA,KAAkB,IAAIA,eAAA,GAAgB,IAAIpB,UAAA,CAASpF,MAAM,GAAG;QAErF,MAAM2G,iBAAA,GAAkBvB,UAAQ,CAACsB,kBAAA,CAAiB;QAClD,IAAI,CAACC,iBAAA,EAAiB;UACpB,OAAO;QACT;QAEA7B,kBAAA,CAAmB6B,iBAAA;QACnB,IAAIA,iBAAA,CAAgBN,GAAG,IAAI,QAAQM,iBAAA,CAAgBN,GAAG,CAACjD,OAAO,EAAE;UAC9DvE,sBAAA,CAAuB8H,iBAAA,CAAgBN,GAAG,CAACjD,OAAO;QACpD;QACAmD,OAAA,CAAMO,cAAc;QACpBP,OAAA,CAAMQ,wBAAwB;MAChC;MACA,OAAO;IACT,GACAjJ,uBAAA,GAEFmF,MAAA,CAAOmD,eAAe,CACpBjI,kBAAA,EACCmI,SAAA;MACC,MAAMC,OAAA,GAAQD,SAAA;MACdC,OAAA,CAAMO,cAAc;MACpBP,OAAA,CAAMQ,wBAAwB;MAC9BvC,KAAA;MACA,OAAO;IACT,GACA3G,oBAAA,GAEFoF,MAAA,CAAOmD,eAAe,CACpBhI,eAAA,EACCkI,SAAA;MACC,MAAMC,OAAA,GAAQD,SAAA;MAEd,IAAI7B,MAAA,KAAW,QAAQG,eAAA,KAAoB,MAAM;QAC/C,OAAO;MACT;MACA,MAAMQ,UAAA,GAAWX,MAAA,CAAOY,OAAO,CAAEC,OAAA,IAAUA,OAAA,CAAMC,KAAK;MACtD,MAAMG,cAAA,GAAeN,UAAA,CAAS4B,IAAI,CAAEjC,MAAA,IAASA,MAAA,CAAKG,GAAG,KAAKN,eAAA;MAC1D,IAAI,CAACc,cAAA,EAAc;QACjB,OAAO;MACT;MAEAa,OAAA,CAAMO,cAAc;MACpBP,OAAA,CAAMQ,wBAAwB;MAC9BtB,oBAAA,CAAqBC,cAAA;MACrB,OAAO;IACT,GACA5H,uBAAA,GAEFmF,MAAA,CAAOmD,eAAe,CACpBlI,iBAAA,EACCqI,OAAA;MACC,IAAI9B,MAAA,KAAW,QAAQG,eAAA,KAAoB,MAAM;QAC/C,OAAO;MACT;MACA,MAAMQ,UAAA,GAAWX,MAAA,CAAOY,OAAO,CAAEC,OAAA,IAAUA,OAAA,CAAMC,KAAK;MACtD,MAAMG,cAAA,GAAeN,UAAA,CAAS4B,IAAI,CAAEjC,MAAA,IAASA,MAAA,CAAKG,GAAG,KAAKN,eAAA;MAC1D,IAAI,CAACc,cAAA,EAAc;QACjB,OAAO;MACT;MAEA,IAAIa,OAAA,KAAU,MAAM;QAClBA,OAAA,CAAMO,cAAc;QACpBP,OAAA,CAAMQ,wBAAwB;MAChC;MACAtB,oBAAA,CAAqBC,cAAA;MACrB,OAAO;IACT,GACA5H,uBAAA;EAGN,GAAG,CAAC2H,oBAAA,EAAsBjB,KAAA,EAAOvB,MAAA,EAAQwB,MAAA,EAAQG,eAAA,EAAiBE,kBAAA,CAAmB;EAErF,MAAMmC,aAAA,GAAgBzI,OAAA,CACpB,OAAO;IACLiG,MAAA;IACAG,eAAA;IACAa,oBAAA;IACAZ;EACF,IACA,CAACY,oBAAA,EAAsBb,eAAA,EAAiBH,MAAA,CAAO;EAGjD,OAAOC,YAAA,CACLH,gBAAA,EACA0C,aAAA,EACArE,UAAA,CAAWzC,KAAK,GAAGyC,UAAA,CAAWzC,KAAK,CAACe,cAAc,GAAG;AAEzD;AAEA,SAASgG,0BAA0BC,YAAyB,EAAEC,SAAkB;EAC9E,IAAIA,SAAA,IAAa,MAAM;IACrBD,YAAA,CAAaC,SAAS,GAAGA,SAAA;EAC3B;EACAD,YAAA,CAAalC,YAAY,CAAC,cAAc;EACxCkC,YAAA,CAAalC,YAAY,CAAC,QAAQ;EAClCkC,YAAA,CAAa1F,KAAK,CAAC4F,OAAO,GAAG;EAC7BF,YAAA,CAAa1F,KAAK,CAACG,QAAQ,GAAG;AAChC;AAEA,OAAO,SAAA0F,iBAAAC,UAAA,EAAA3E,UAAA,EAAA4E,aAAA,EAAAJ,SAAA;EAAA,MAAApE,CAAA,GAAAzF,EAAA;EAML,OAAA0F,MAAA,IAAiBzF,yBAAA;EAAA,IAAA0F,EAAA;EAAA,IAAAF,CAAA,QAAAyE,MAAA,CAAAC,GAAA;IAEfxE,EAAA,GAAAvE,WAAA,GAAcK,QAAA,CAAA2I,aAAA,CAAuB,aAAS;IAAA3E,CAAA,MAAAE,EAAA;EAAA;IAAAA,EAAA,GAAAF,CAAA;EAAA;EADhD,MAAAuB,gBAAA,GAAyB9F,MAAA,CACvByE,EAA8C;EAAA,IAAAC,EAAA;EAAA,IAAAH,CAAA,QAAAuE,UAAA,IAAAvE,CAAA,QAAAoE,SAAA,IAAApE,CAAA,QAAAC,MAAA,IAAAD,CAAA,QAAAJ,UAAA;IAEfO,EAAA,GAAAA,CAAA;MAAA,IAC3BoB,gBAAA,CAAAnB,OAAA,SAA6B,IAAQwE,MAAA,KAAAC,SAAW;QAAA;MAAA;MAGpD,MAAAxE,WAAA,GAAoBJ,MAAA,CAAAK,cAAA,CAAqB;MACzC,MAAA6D,YAAA,GAAqB5C,gBAAA,CAAAnB,OAAA;MAIrB,MAAA0E,OAAA,GAAgBX,YAAA,CAAAY,UAAA;MAAuB,IACnC1E,WAAA,SAAgB,IAAQT,UAAA,SAAe;QACzC;UAAAvD,MAAA;UAAA2I;QAAA,IAA0BpF,UAAA,CAAAqF,OAAA,CAAkB;QAC5C;UAAAC,IAAA;UAAA9I;QAAA,IAAoBwD,UAAA,CAAAqF,OAAA,CAAkB;QAEtC,MAAAE,MAAA,GAAe/I,GAAA;QACfA,GAAA,GAAAA,GAAA,IAAOmI,UAAA,CAAApI,qBAAA,CAAgC,EAAAC,GAAA,GAAAE,MAAA,CAAA8I,OAAuB;QAC9DF,IAAA,GAAAA,IAAA,IAAQX,UAAA,CAAApI,qBAAA,CAAgC,EAAA+I,IAAA,GAAA5I,MAAA,CAAA+I,OAAwB;QAChElB,YAAA,CAAA1F,KAAA,CAAAyG,IAAA,GAA0B,GAAGA,IAAA,GAAA5I,MAAA,CAAA+I,OAAqB,IAAI;QACtDlB,YAAA,CAAA1F,KAAA,CAAApC,MAAA,GAA4B,GAAGA,MAAA,IAAU;QACzC8H,YAAA,CAAA1F,KAAA,CAAAuG,KAAA,GAA2B,GAAGA,KAAA,IAAS;QAAA,IACnCF,OAAA,SAAY;UACd,MAAAQ,QAAA,GAAiBR,OAAA,CAAA3I,qBAAA,CAA6B;UAC9C,MAAAoJ,UAAA,GAAmBD,QAAA,CAAAjJ,MAAA;UACnB,MAAAmJ,SAAA,GAAkBF,QAAA,CAAAN,KAAA;UAElB,MAAAS,eAAA,GAAwBpF,WAAA,CAAAlE,qBAAA,CAAiC;UAAA,IAErD+I,IAAA,GAAOM,SAAA,GAAYC,eAAA,CAAAC,KAAqB;YAC1CvB,YAAA,CAAA1F,KAAA,CAAAyG,IAAA,GAA0B,GAAGO,eAAA,CAAAC,KAAA,GAAwBF,SAAA,GAAAlJ,MAAA,CAAA+I,OAA0B,IAAI;UAAA;UAGrF,MAAAM,wBAAA,GAAiCR,MAAA,GAASI,UAAA,KAAa,GAAAjJ,MAAA,CAAAC,WAAoC;UAE3F,MAAAqJ,qBAAA,GAA8BT,MAAA,IAAS;UAAA,IAGnCQ,wBAAA,KAA6BC,qBAAA;YAE/BzB,YAAA,CAAA1F,KAAA,CAAArC,GAAA,GAAyB,GACvBA,GAAA,KAAM,GAAkBmJ,UAAA,GAAAjJ,MAAA,CAAA8I,OAA2B,IAAI/I,MAAA,KAAc,KACnE;UAAA;YAEJ8H,YAAA,CAAA1F,KAAA,CAAArC,GAAA,GAAyB,GAAGA,GAAA,GAAAE,MAAA,CAAA8I,OAAoB,KAAG,IAAmB;UAAA;QAAA;QAAA,KAIrEjB,YAAA,CAAA0B,WAAA;UACH3B,yBAAA,CAA0BC,YAAA,EAAcC,SAAA;UACxCG,UAAA,CAAAuB,MAAA,CAAkB3B,YAAA;QAAA;QAEpBA,YAAA,CAAAlC,YAAA,CAA0B,MAAM;QAChCV,gBAAA,CAAAnB,OAAA,GAA2B+D,YAAA;QAC3B9D,WAAA,CAAA4B,YAAA,CAAyB,iBAAiB;MAAA;IAAA;IAE9CjC,CAAA,MAAAuE,UAAA;IAAAvE,CAAA,MAAAoE,SAAA;IAAApE,CAAA,MAAAC,MAAA;IAAAD,CAAA,MAAAJ,UAAA;IAAAI,CAAA,MAAAG,EAAA;EAAA;IAAAA,EAAA,GAAAH,CAAA;EAAA;EAtDA,MAAA+F,YAAA,GAAqB5F,EAsDyB;EAAA,IAAA6F,EAAA;EAAA,IAAAC,EAAA;EAAA,IAAAjG,CAAA,QAAAC,MAAA,IAAAD,CAAA,QAAA+F,YAAA,IAAA/F,CAAA,QAAAJ,UAAA;IAEpCoG,EAAA,GAAAA,CAAA;MACR,MAAAE,aAAA,GAAoBjG,MAAA,CAAAK,cAAA,CAAqB;MAAA,IACrCV,UAAA,SAAe;QACjBmG,YAAA;QAAA;UAAA,IAEM1F,aAAA,SAAgB;YAClBA,aAAA,CAAA8C,eAAA,CAA4B;UAAA;UAG9B,MAAAgD,cAAA,GAAqB5E,gBAAA,CAAAnB,OAAA;UAAwB,IACzC+D,cAAA,SAAiB,IAAQA,cAAA,CAAA0B,WAAwB;YACnD1B,cAAA,CAAAtB,MAAA,CAAmB;YACnBsB,cAAA,CAAAhB,eAAA,CAA6B;UAAA;QAAA;MAAA;IAAA;IAIlC8C,EAAA,IAAChG,MAAA,EAAQ8F,YAAA,EAAcnG,UAAA;IAAWI,CAAA,MAAAC,MAAA;IAAAD,CAAA,MAAA+F,YAAA;IAAA/F,CAAA,MAAAJ,UAAA;IAAAI,CAAA,MAAAgG,EAAA;IAAAhG,CAAA,OAAAiG,EAAA;EAAA;IAAAD,EAAA,GAAAhG,CAAA;IAAAiG,EAAA,GAAAjG,CAAA;EAAA;EAhBrC1E,SAAA,CAAU0K,EAgBV,EAAGC,EAAkC;EAAA,IAAAG,EAAA;EAAA,IAAApG,CAAA,SAAAJ,UAAA,IAAAI,CAAA,SAAAwE,aAAA;IAGnC4B,EAAA,GAAAxF,QAAA;MAAA,IACMhB,UAAA,SAAe;QAAA,KACZgB,QAAA;UACH4D,aAAA,KAAc;QAAA;MAAA;IAAA;IAGpBxE,CAAA,OAAAJ,UAAA;IAAAI,CAAA,OAAAwE,aAAA;IAAAxE,CAAA,OAAAoG,EAAA;EAAA;IAAAA,EAAA,GAAApG,CAAA;EAAA;EAPF,MAAAD,kBAAA,GAA2BqG,EAQE;EAG7BzG,qBAAA,CAAsBC,UAAA,EAAY2B,gBAAA,EAAkBwE,YAAA,EAAchG,kBAAA;EAAA,OAE3DwB,gBAAA;AAAA","ignoreList":[]}