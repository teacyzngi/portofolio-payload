{"version":3,"file":"LexicalEditor.js","names":["c","_c","useLexicalComposerContext","LexicalErrorBoundary","HistoryPlugin","OnChangePlugin","RichTextPlugin","useLexicalEditable","BLUR_COMMAND","COMMAND_PRIORITY_LOW","FOCUS_COMMAND","React","useEffect","useState","useEditorConfigContext","EditorPlugin","ClipboardPlugin","DecoratorPlugin","AddBlockHandlePlugin","DraggableBlockPlugin","InsertParagraphAtEndPlugin","MarkdownShortcutPlugin","NormalizeSelectionPlugin","SelectAllPlugin","SlashMenuPlugin","TextPlugin","LexicalContentEditable","LexicalEditor","props","$","editorConfig","editorContainerRef","isSmallWidthViewport","onChange","editorConfigContext","editor","isEditable","floatingAnchorElem","setFloatingAnchorElem","t0","Symbol","for","_floatingAnchorElem","onRef","t1","t2","uuid","console","error","parentEditor","registerChild","handleFocus","focusEditor","handleBlur","blurEditor","unregisterFocus","registerCommand","unregisterBlur","unregisterChild","t3","_jsxs","Fragment","children","features","plugins","map","_temp","className","ref","_temp2","_jsx","contentEditable","ignoreSelectionChange","editorState","editor_0","tags","has","size","admin","hideDraggableBlockElement","anchorElem","hideAddBlockButton","plugin_1","plugin","position","desktopOnly","clientProps","key","markdownTransformers","length","_temp3","_temp4","_temp5","plugin_0","plugin_2","plugin_3","plugin_4"],"sources":["../../src/lexical/LexicalEditor.tsx"],"sourcesContent":["'use client'\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext.js'\nimport { LexicalErrorBoundary } from '@lexical/react/LexicalErrorBoundary.js'\nimport { HistoryPlugin } from '@lexical/react/LexicalHistoryPlugin.js'\nimport { OnChangePlugin } from '@lexical/react/LexicalOnChangePlugin.js'\nimport { RichTextPlugin } from '@lexical/react/LexicalRichTextPlugin.js'\nimport { useLexicalEditable } from '@lexical/react/useLexicalEditable'\nimport { BLUR_COMMAND, COMMAND_PRIORITY_LOW, FOCUS_COMMAND } from 'lexical'\nimport * as React from 'react'\nimport { useEffect, useState } from 'react'\n\nimport type { LexicalProviderProps } from './LexicalProvider.js'\n\nimport { useEditorConfigContext } from './config/client/EditorConfigProvider.js'\nimport './LexicalEditor.scss'\nimport { EditorPlugin } from './EditorPlugin.js'\nimport { ClipboardPlugin } from './plugins/ClipboardPlugin/index.js'\nimport { DecoratorPlugin } from './plugins/DecoratorPlugin/index.js'\nimport { AddBlockHandlePlugin } from './plugins/handles/AddBlockHandlePlugin/index.js'\nimport { DraggableBlockPlugin } from './plugins/handles/DraggableBlockPlugin/index.js'\nimport { InsertParagraphAtEndPlugin } from './plugins/InsertParagraphAtEnd/index.js'\nimport { MarkdownShortcutPlugin } from './plugins/MarkdownShortcut/index.js'\nimport { NormalizeSelectionPlugin } from './plugins/NormalizeSelection/index.js'\nimport { SelectAllPlugin } from './plugins/SelectAllPlugin/index.js'\nimport { SlashMenuPlugin } from './plugins/SlashMenu/index.js'\nimport { TextPlugin } from './plugins/TextPlugin/index.js'\nimport { LexicalContentEditable } from './ui/ContentEditable.js'\n\nexport const LexicalEditor: React.FC<\n  {\n    editorContainerRef: React.RefObject<HTMLDivElement | null>\n    isSmallWidthViewport: boolean\n  } & Pick<LexicalProviderProps, 'editorConfig' | 'onChange'>\n> = (props) => {\n  const { editorConfig, editorContainerRef, isSmallWidthViewport, onChange } = props\n  const editorConfigContext = useEditorConfigContext()\n  const [editor] = useLexicalComposerContext()\n  const isEditable = useLexicalEditable()\n\n  const [floatingAnchorElem, setFloatingAnchorElem] = useState<HTMLDivElement | null>(null)\n  const onRef = (_floatingAnchorElem: HTMLDivElement) => {\n    if (_floatingAnchorElem !== null) {\n      setFloatingAnchorElem(_floatingAnchorElem)\n    }\n  }\n\n  useEffect(() => {\n    if (!editorConfigContext?.uuid) {\n      console.error('Lexical Editor must be used within an EditorConfigProvider')\n      return\n    }\n    if (editorConfigContext?.parentEditor?.uuid) {\n      editorConfigContext.parentEditor?.registerChild(editorConfigContext.uuid, editorConfigContext)\n    }\n\n    const handleFocus = () => {\n      editorConfigContext.focusEditor(editorConfigContext)\n    }\n\n    const handleBlur = () => {\n      editorConfigContext.blurEditor(editorConfigContext)\n    }\n\n    const unregisterFocus = editor.registerCommand<MouseEvent>(\n      FOCUS_COMMAND,\n      () => {\n        handleFocus()\n        return true\n      },\n      COMMAND_PRIORITY_LOW,\n    )\n\n    const unregisterBlur = editor.registerCommand<MouseEvent>(\n      BLUR_COMMAND,\n      () => {\n        handleBlur()\n        return true\n      },\n      COMMAND_PRIORITY_LOW,\n    )\n\n    return () => {\n      unregisterFocus()\n      unregisterBlur()\n      editorConfigContext.parentEditor?.unregisterChild?.(editorConfigContext.uuid)\n    }\n  }, [editor, editorConfigContext])\n\n  return (\n    <React.Fragment>\n      {editorConfig.features.plugins?.map((plugin) => {\n        if (plugin.position === 'aboveContainer') {\n          return <EditorPlugin clientProps={plugin.clientProps} key={plugin.key} plugin={plugin} />\n        }\n      })}\n      <div className=\"editor-container\" ref={editorContainerRef}>\n        {editorConfig.features.plugins?.map((plugin) => {\n          if (plugin.position === 'top') {\n            return (\n              <EditorPlugin clientProps={plugin.clientProps} key={plugin.key} plugin={plugin} />\n            )\n          }\n        })}\n        <RichTextPlugin\n          contentEditable={\n            <div className=\"editor-scroller\">\n              <div className=\"editor\" ref={onRef}>\n                <LexicalContentEditable editorConfig={editorConfig} />\n              </div>\n            </div>\n          }\n          ErrorBoundary={LexicalErrorBoundary}\n        />\n        <NormalizeSelectionPlugin />\n        {isEditable && <InsertParagraphAtEndPlugin />}\n        <DecoratorPlugin />\n        <ClipboardPlugin />\n        <TextPlugin features={editorConfig.features} />\n        <SelectAllPlugin />\n        {isEditable && (\n          <OnChangePlugin\n            // Selection changes can be ignored here, reducing the\n            // frequency that the FieldComponent and Payload receive updates.\n            // Selection changes are only needed if you are saving selection state\n            ignoreSelectionChange\n            onChange={(editorState, editor, tags) => {\n              // Ignore any onChange event triggered by focus only\n              if (!tags.has('focus') || tags.size > 1) {\n                if (onChange != null) {\n                  onChange(editorState, editor, tags)\n                }\n              }\n            }}\n          />\n        )}\n        {floatingAnchorElem && (\n          <React.Fragment>\n            {!isSmallWidthViewport && isEditable && (\n              <React.Fragment>\n                {editorConfig.admin?.hideDraggableBlockElement ? null : (\n                  <DraggableBlockPlugin anchorElem={floatingAnchorElem} />\n                )}\n                {editorConfig.admin?.hideAddBlockButton ? null : (\n                  <AddBlockHandlePlugin anchorElem={floatingAnchorElem} />\n                )}\n              </React.Fragment>\n            )}\n            {editorConfig.features.plugins?.map((plugin) => {\n              if (\n                plugin.position === 'floatingAnchorElem' &&\n                !(plugin.desktopOnly === true && isSmallWidthViewport)\n              ) {\n                return (\n                  <EditorPlugin\n                    anchorElem={floatingAnchorElem}\n                    clientProps={plugin.clientProps}\n                    key={plugin.key}\n                    plugin={plugin}\n                  />\n                )\n              }\n            })}\n            {isEditable && (\n              <React.Fragment>\n                <SlashMenuPlugin anchorElem={floatingAnchorElem} />\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        )}\n        {isEditable && (\n          <React.Fragment>\n            <HistoryPlugin />\n            {editorConfig?.features?.markdownTransformers?.length > 0 && <MarkdownShortcutPlugin />}\n          </React.Fragment>\n        )}\n        {editorConfig.features.plugins?.map((plugin) => {\n          if (plugin.position === 'normal') {\n            return (\n              <EditorPlugin clientProps={plugin.clientProps} key={plugin.key} plugin={plugin} />\n            )\n          }\n        })}\n        {editorConfig.features.plugins?.map((plugin) => {\n          if (plugin.position === 'bottom') {\n            return (\n              <EditorPlugin clientProps={plugin.clientProps} key={plugin.key} plugin={plugin} />\n            )\n          }\n        })}\n      </div>\n      {editorConfig.features.plugins?.map((plugin) => {\n        if (plugin.position === 'belowContainer') {\n          return <EditorPlugin clientProps={plugin.clientProps} key={plugin.key} plugin={plugin} />\n        }\n      })}\n    </React.Fragment>\n  )\n}\n"],"mappings":"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","ignoreList":[]}