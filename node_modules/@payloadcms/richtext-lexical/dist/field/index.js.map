{"version":3,"file":"index.js","names":["c","_c","ShimmerEffect","useConfig","React","lazy","Suspense","useEffect","useState","defaultEditorLexicalConfig","loadClientFeatures","sanitizeClientEditorConfig","RichTextEditor","then","module","default","RichText","RichTextField","props","$","admin","t0","clientFeatures","featureClientImportMap","featureClientSchemaMap","field","lexicalEditorConfig","t1","schemaPath","t2","undefined","config","finalSanitizedEditorConfig","setFinalSanitizedEditorConfig","t3","t4","featureProvidersLocal","_featureKey","clientFeature","Object","entries","clientFeatureProvider","push","clientFeatureProps","finalLexicalEditorConfig","resolvedClientFeatures","name","unSanitizedEditorConfig","features","lexical","t5","_jsx","fallback","height","editorConfig"],"sources":["../../src/field/index.tsx"],"sourcesContent":["'use client'\n\nimport type { RichTextFieldClient } from 'payload'\n\nimport { ShimmerEffect, useConfig } from '@payloadcms/ui'\nimport React, { lazy, Suspense, useEffect, useState } from 'react'\n\nimport type { FeatureProviderClient } from '../features/typesClient.js'\nimport type { SanitizedClientEditorConfig } from '../lexical/config/types.js'\nimport type { LexicalRichTextFieldProps } from '../types.js'\n\nimport { defaultEditorLexicalConfig } from '../lexical/config/client/default.js'\nimport { loadClientFeatures } from '../lexical/config/client/loader.js'\nimport { sanitizeClientEditorConfig } from '../lexical/config/client/sanitize.js'\n\nconst RichTextEditor = lazy(() =>\n  import('./Field.js').then((module) => ({ default: module.RichText })),\n)\n\nexport const RichTextField: React.FC<LexicalRichTextFieldProps> = (props) => {\n  const {\n    admin = {},\n    clientFeatures,\n    featureClientImportMap,\n    featureClientSchemaMap,\n    field,\n    lexicalEditorConfig = defaultEditorLexicalConfig,\n    schemaPath,\n  } = props\n\n  const { config } = useConfig()\n\n  const [finalSanitizedEditorConfig, setFinalSanitizedEditorConfig] =\n    useState<null | SanitizedClientEditorConfig>(null)\n\n  useEffect(() => {\n    if (finalSanitizedEditorConfig) {\n      return\n    }\n\n    const featureProvidersLocal: FeatureProviderClient<any, any>[] = []\n    for (const [_featureKey, clientFeature] of Object.entries(clientFeatures)) {\n      if (!clientFeature.clientFeatureProvider) {\n        continue\n      }\n      featureProvidersLocal.push(\n        clientFeature.clientFeatureProvider(clientFeature.clientFeatureProps),\n      ) // Execute the clientFeatureProvider function here, as the server cannot execute functions imported from use client files\n    }\n\n    const finalLexicalEditorConfig = lexicalEditorConfig\n      ? lexicalEditorConfig\n      : defaultEditorLexicalConfig\n\n    const resolvedClientFeatures = loadClientFeatures({\n      config,\n      featureClientImportMap,\n      featureClientSchemaMap,\n      field: field as RichTextFieldClient,\n      schemaPath: schemaPath ?? field.name,\n      unSanitizedEditorConfig: {\n        features: featureProvidersLocal,\n        lexical: finalLexicalEditorConfig,\n      },\n    })\n\n    setFinalSanitizedEditorConfig(\n      sanitizeClientEditorConfig(resolvedClientFeatures, finalLexicalEditorConfig, admin),\n    )\n  }, [\n    lexicalEditorConfig,\n    admin,\n    finalSanitizedEditorConfig,\n    clientFeatures,\n    featureClientImportMap,\n    featureClientSchemaMap,\n    field,\n    config,\n    schemaPath,\n  ]) // TODO: Optimize this and use useMemo for this in the future. This might break sub-richtext-blocks from the blocks feature. Need to investigate\n\n  return (\n    <Suspense fallback={<ShimmerEffect height=\"35vh\" />}>\n      {finalSanitizedEditorConfig && (\n        <RichTextEditor {...props} editorConfig={finalSanitizedEditorConfig} />\n      )}\n    </Suspense>\n  )\n}\n"],"mappings":"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","ignoreList":[]}