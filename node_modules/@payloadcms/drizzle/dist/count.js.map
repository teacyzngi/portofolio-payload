{"version":3,"sources":["../src/count.ts"],"sourcesContent":["import type { Count, SanitizedCollectionConfig } from 'payload'\n\nimport toSnakeCase from 'to-snake-case'\n\nimport type { DrizzleAdapter } from './types.js'\n\nimport { buildQuery } from './queries/buildQuery.js'\nimport { getTransaction } from './utilities/getTransaction.js'\n\nexport const count: Count = async function count(\n  this: DrizzleAdapter,\n  { collection, locale, req, where: whereArg },\n) {\n  const collectionConfig: SanitizedCollectionConfig = this.payload.collections[collection].config\n\n  const tableName = this.tableNameMap.get(toSnakeCase(collectionConfig.slug))\n\n  const db = await getTransaction(this, req)\n\n  const { joins, where } = buildQuery({\n    adapter: this,\n    fields: collectionConfig.flattenedFields,\n    locale,\n    tableName,\n    where: whereArg,\n  })\n\n  const countResult = await this.countDistinct({\n    db,\n    joins,\n    tableName,\n    where,\n  })\n\n  return { totalDocs: countResult }\n}\n"],"names":["toSnakeCase","buildQuery","getTransaction","count","collection","locale","req","where","whereArg","collectionConfig","payload","collections","config","tableName","tableNameMap","get","slug","db","joins","adapter","fields","flattenedFields","countResult","countDistinct","totalDocs"],"mappings":"AAEA,OAAOA,iBAAiB,gBAAe;AAIvC,SAASC,UAAU,QAAQ,0BAAyB;AACpD,SAASC,cAAc,QAAQ,gCAA+B;AAE9D,OAAO,MAAMC,QAAe,eAAeA,MAEzC,EAAEC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,OAAOC,QAAQ,EAAE;IAE5C,MAAMC,mBAA8C,IAAI,CAACC,OAAO,CAACC,WAAW,CAACP,WAAW,CAACQ,MAAM;IAE/F,MAAMC,YAAY,IAAI,CAACC,YAAY,CAACC,GAAG,CAACf,YAAYS,iBAAiBO,IAAI;IAEzE,MAAMC,KAAK,MAAMf,eAAe,IAAI,EAAEI;IAEtC,MAAM,EAAEY,KAAK,EAAEX,KAAK,EAAE,GAAGN,WAAW;QAClCkB,SAAS,IAAI;QACbC,QAAQX,iBAAiBY,eAAe;QACxChB;QACAQ;QACAN,OAAOC;IACT;IAEA,MAAMc,cAAc,MAAM,IAAI,CAACC,aAAa,CAAC;QAC3CN;QACAC;QACAL;QACAN;IACF;IAEA,OAAO;QAAEiB,WAAWF;IAAY;AAClC,EAAC"}