{"version":3,"sources":["../../../src/postgres/schema/setColumnID.ts"],"sourcesContent":["import type { SetColumnID } from '../../types.js'\n\nexport const setColumnID: SetColumnID = ({ adapter, columns, fields }) => {\n  const idField = fields.find((field) => field.name === 'id')\n  if (idField) {\n    if (idField.type === 'number') {\n      columns.id = {\n        name: 'id',\n        type: 'numeric',\n        primaryKey: true,\n      }\n\n      return 'numeric'\n    }\n\n    if (idField.type === 'text') {\n      columns.id = {\n        name: 'id',\n        type: 'varchar',\n        primaryKey: true,\n      }\n      return 'varchar'\n    }\n  }\n\n  if (adapter.idType === 'uuid') {\n    columns.id = {\n      name: 'id',\n      type: 'uuid',\n      defaultRandom: true,\n      primaryKey: true,\n    }\n\n    return 'uuid'\n  }\n\n  columns.id = {\n    name: 'id',\n    type: 'serial',\n    primaryKey: true,\n  }\n\n  return 'integer'\n}\n"],"names":["setColumnID","adapter","columns","fields","idField","find","field","name","type","id","primaryKey","idType","defaultRandom"],"mappings":"AAEA,OAAO,MAAMA,cAA2B,CAAC,EAAEC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAE;IACnE,MAAMC,UAAUD,OAAOE,IAAI,CAAC,CAACC,QAAUA,MAAMC,IAAI,KAAK;IACtD,IAAIH,SAAS;QACX,IAAIA,QAAQI,IAAI,KAAK,UAAU;YAC7BN,QAAQO,EAAE,GAAG;gBACXF,MAAM;gBACNC,MAAM;gBACNE,YAAY;YACd;YAEA,OAAO;QACT;QAEA,IAAIN,QAAQI,IAAI,KAAK,QAAQ;YAC3BN,QAAQO,EAAE,GAAG;gBACXF,MAAM;gBACNC,MAAM;gBACNE,YAAY;YACd;YACA,OAAO;QACT;IACF;IAEA,IAAIT,QAAQU,MAAM,KAAK,QAAQ;QAC7BT,QAAQO,EAAE,GAAG;YACXF,MAAM;YACNC,MAAM;YACNI,eAAe;YACfF,YAAY;QACd;QAEA,OAAO;IACT;IAEAR,QAAQO,EAAE,GAAG;QACXF,MAAM;QACNC,MAAM;QACNE,YAAY;IACd;IAEA,OAAO;AACT,EAAC"}