{"version":3,"sources":["../../src/find/buildFindManyArgs.ts"],"sourcesContent":["import type { DBQueryConfig } from 'drizzle-orm'\nimport type { FlattenedField, JoinQuery, SelectType } from 'payload'\n\nimport { getSelectMode } from 'payload/shared'\n\nimport type { BuildQueryJoinAliases, DrizzleAdapter } from '../types.js'\n\nimport { traverseFields } from './traverseFields.js'\n\ntype BuildFindQueryArgs = {\n  adapter: DrizzleAdapter\n  collectionSlug?: string\n  depth: number\n  draftsEnabled?: boolean\n  fields: FlattenedField[]\n  joinQuery?: JoinQuery\n  /**\n   * The joins array will be mutated by pushing any joins needed for the where queries of join field joins\n   */\n  joins?: BuildQueryJoinAliases\n  locale?: string\n  select?: SelectType\n  tableName: string\n  versions?: boolean\n}\n\nexport type Result = {\n  with?: {\n    _locales?: DBQueryConfig<'many', true, any, any>\n  } & DBQueryConfig<'many', true, any, any>\n} & DBQueryConfig<'many', true, any, any>\n\n// Generate the Drizzle query for findMany based on\n// a collection field structure\nexport const buildFindManyArgs = ({\n  adapter,\n  collectionSlug,\n  depth,\n  draftsEnabled,\n  fields,\n  joinQuery,\n  joins = [],\n  locale,\n  select,\n  tableName,\n  versions,\n}: BuildFindQueryArgs): Result => {\n  const result: Result = {\n    extras: {},\n    with: {},\n  }\n\n  if (select) {\n    result.columns = {\n      id: true,\n    }\n  }\n\n  const _locales: Result = {\n    columns: select\n      ? { _locale: true }\n      : {\n          id: false,\n          _parentID: false,\n        },\n    extras: {},\n    with: {},\n  }\n\n  const withTabledFields = select\n    ? {}\n    : {\n        numbers: true,\n        rels: true,\n        texts: true,\n      }\n\n  traverseFields({\n    _locales,\n    adapter,\n    collectionSlug,\n    currentArgs: result,\n    currentTableName: tableName,\n    depth,\n    draftsEnabled,\n    fields,\n    joinQuery,\n    joins,\n    locale,\n    path: '',\n    select,\n    selectMode: select ? getSelectMode(select) : undefined,\n    tablePath: '',\n    topLevelArgs: result,\n    topLevelTableName: tableName,\n    versions,\n    withTabledFields,\n  })\n\n  if (adapter.tables[`${tableName}_texts`] && withTabledFields.texts) {\n    result.with._texts = {\n      columns: {\n        id: false,\n        parent: false,\n      },\n      orderBy: ({ order }, { asc: ASC }) => [ASC(order)],\n    }\n  }\n\n  if (adapter.tables[`${tableName}_numbers`] && withTabledFields.numbers) {\n    result.with._numbers = {\n      columns: {\n        id: false,\n        parent: false,\n      },\n      orderBy: ({ order }, { asc: ASC }) => [ASC(order)],\n    }\n  }\n\n  if (adapter.tables[`${tableName}${adapter.relationshipsSuffix}`] && withTabledFields.rels) {\n    result.with._rels = {\n      columns: {\n        id: false,\n        parent: false,\n      },\n      orderBy: ({ order }, { asc: ASC }) => [ASC(order)],\n    }\n  }\n\n  if (\n    adapter.tables[`${tableName}${adapter.localesSuffix}`] &&\n    (!select || Object.keys(_locales.columns).length > 1)\n  ) {\n    result.with._locales = _locales\n  }\n\n  // Delete properties that are empty\n  for (const key of Object.keys(result)) {\n    if (!Object.keys(result[key]).length) {\n      delete result[key]\n    }\n  }\n\n  return result\n}\n"],"names":["getSelectMode","traverseFields","buildFindManyArgs","adapter","collectionSlug","depth","draftsEnabled","fields","joinQuery","joins","locale","select","tableName","versions","result","extras","with","columns","id","_locales","_locale","_parentID","withTabledFields","numbers","rels","texts","currentArgs","currentTableName","path","selectMode","undefined","tablePath","topLevelArgs","topLevelTableName","tables","_texts","parent","orderBy","order","asc","ASC","_numbers","relationshipsSuffix","_rels","localesSuffix","Object","keys","length","key"],"mappings":"AAGA,SAASA,aAAa,QAAQ,iBAAgB;AAI9C,SAASC,cAAc,QAAQ,sBAAqB;AAyBpD,mDAAmD;AACnD,+BAA+B;AAC/B,OAAO,MAAMC,oBAAoB,CAAC,EAChCC,OAAO,EACPC,cAAc,EACdC,KAAK,EACLC,aAAa,EACbC,MAAM,EACNC,SAAS,EACTC,QAAQ,EAAE,EACVC,MAAM,EACNC,MAAM,EACNC,SAAS,EACTC,QAAQ,EACW;IACnB,MAAMC,SAAiB;QACrBC,QAAQ,CAAC;QACTC,MAAM,CAAC;IACT;IAEA,IAAIL,QAAQ;QACVG,OAAOG,OAAO,GAAG;YACfC,IAAI;QACN;IACF;IAEA,MAAMC,WAAmB;QACvBF,SAASN,SACL;YAAES,SAAS;QAAK,IAChB;YACEF,IAAI;YACJG,WAAW;QACb;QACJN,QAAQ,CAAC;QACTC,MAAM,CAAC;IACT;IAEA,MAAMM,mBAAmBX,SACrB,CAAC,IACD;QACEY,SAAS;QACTC,MAAM;QACNC,OAAO;IACT;IAEJxB,eAAe;QACbkB;QACAhB;QACAC;QACAsB,aAAaZ;QACba,kBAAkBf;QAClBP;QACAC;QACAC;QACAC;QACAC;QACAC;QACAkB,MAAM;QACNjB;QACAkB,YAAYlB,SAASX,cAAcW,UAAUmB;QAC7CC,WAAW;QACXC,cAAclB;QACdmB,mBAAmBrB;QACnBC;QACAS;IACF;IAEA,IAAInB,QAAQ+B,MAAM,CAAC,GAAGtB,UAAU,MAAM,CAAC,CAAC,IAAIU,iBAAiBG,KAAK,EAAE;QAClEX,OAAOE,IAAI,CAACmB,MAAM,GAAG;YACnBlB,SAAS;gBACPC,IAAI;gBACJkB,QAAQ;YACV;YACAC,SAAS,CAAC,EAAEC,KAAK,EAAE,EAAE,EAAEC,KAAKC,GAAG,EAAE,GAAK;oBAACA,IAAIF;iBAAO;QACpD;IACF;IAEA,IAAInC,QAAQ+B,MAAM,CAAC,GAAGtB,UAAU,QAAQ,CAAC,CAAC,IAAIU,iBAAiBC,OAAO,EAAE;QACtET,OAAOE,IAAI,CAACyB,QAAQ,GAAG;YACrBxB,SAAS;gBACPC,IAAI;gBACJkB,QAAQ;YACV;YACAC,SAAS,CAAC,EAAEC,KAAK,EAAE,EAAE,EAAEC,KAAKC,GAAG,EAAE,GAAK;oBAACA,IAAIF;iBAAO;QACpD;IACF;IAEA,IAAInC,QAAQ+B,MAAM,CAAC,GAAGtB,YAAYT,QAAQuC,mBAAmB,EAAE,CAAC,IAAIpB,iBAAiBE,IAAI,EAAE;QACzFV,OAAOE,IAAI,CAAC2B,KAAK,GAAG;YAClB1B,SAAS;gBACPC,IAAI;gBACJkB,QAAQ;YACV;YACAC,SAAS,CAAC,EAAEC,KAAK,EAAE,EAAE,EAAEC,KAAKC,GAAG,EAAE,GAAK;oBAACA,IAAIF;iBAAO;QACpD;IACF;IAEA,IACEnC,QAAQ+B,MAAM,CAAC,GAAGtB,YAAYT,QAAQyC,aAAa,EAAE,CAAC,IACrD,CAAA,CAACjC,UAAUkC,OAAOC,IAAI,CAAC3B,SAASF,OAAO,EAAE8B,MAAM,GAAG,CAAA,GACnD;QACAjC,OAAOE,IAAI,CAACG,QAAQ,GAAGA;IACzB;IAEA,mCAAmC;IACnC,KAAK,MAAM6B,OAAOH,OAAOC,IAAI,CAAChC,QAAS;QACrC,IAAI,CAAC+B,OAAOC,IAAI,CAAChC,MAAM,CAACkC,IAAI,EAAED,MAAM,EAAE;YACpC,OAAOjC,MAAM,CAACkC,IAAI;QACpB;IACF;IAEA,OAAOlC;AACT,EAAC"}