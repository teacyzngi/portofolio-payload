{"version":3,"sources":["../../src/upsertRow/types.ts"],"sourcesContent":["import type { SQL } from 'drizzle-orm'\nimport type { FlattenedField, JoinQuery, PayloadRequest, SelectType } from 'payload'\n\nimport type { DrizzleAdapter, DrizzleTransaction, GenericColumn } from '../types.js'\n\ntype BaseArgs = {\n  adapter: DrizzleAdapter\n  data: Record<string, unknown>\n  db: DrizzleAdapter['drizzle'] | DrizzleTransaction\n  fields: FlattenedField[]\n  /**\n   * When true, skips reading the data back from the database and returns the input data\n   * @default false\n   */\n  ignoreResult?: 'idOnly' | boolean\n  joinQuery?: JoinQuery\n  path?: string\n  req?: Partial<PayloadRequest>\n  tableName: string\n}\n\ntype CreateArgs = {\n  id?: never\n  joinQuery?: never\n  operation: 'create'\n  select?: SelectType\n  upsertTarget?: never\n  where?: never\n} & BaseArgs\n\ntype UpdateArgs = {\n  id?: number | string\n  joinQuery?: JoinQuery\n  operation: 'update'\n  select?: SelectType\n  upsertTarget?: GenericColumn\n  where?: SQL<unknown>\n} & BaseArgs\n\nexport type Args = CreateArgs | UpdateArgs\n"],"names":[],"mappings":"AAuCA,WAA0C"}