{"version":3,"sources":["../../src/sqlite/dropDatabase.ts"],"sourcesContent":["import type { Row } from '@libsql/client'\n\nimport type { BaseSQLiteAdapter, DropDatabase } from './types.js'\n\nconst getTables = (adapter: BaseSQLiteAdapter) => {\n  return adapter.client.execute(`SELECT name\n                                 FROM sqlite_master\n                                 WHERE type = 'table'\n                                   AND name NOT LIKE 'sqlite_%';`)\n}\n\nconst dropTables = (adapter: BaseSQLiteAdapter, rows: Row[]) => {\n  const multi = `\n  PRAGMA foreign_keys = OFF;\\n\n  ${rows.map(({ name }) => `DROP TABLE IF EXISTS ${name as string}`).join(';\\n ')};\\n\n  PRAGMA foreign_keys = ON;`\n  return adapter.client.executeMultiple(multi)\n}\n\nexport const dropDatabase: DropDatabase = async function ({ adapter }) {\n  const result = await getTables(adapter)\n  await dropTables(adapter, result.rows)\n}\n"],"names":["getTables","adapter","client","execute","dropTables","rows","multi","map","name","join","executeMultiple","dropDatabase","result"],"mappings":"AAIA,MAAMA,YAAY,CAACC;IACjB,OAAOA,QAAQC,MAAM,CAACC,OAAO,CAAC,CAAC;;;gEAG+B,CAAC;AACjE;AAEA,MAAMC,aAAa,CAACH,SAA4BI;IAC9C,MAAMC,QAAQ,CAAC;;EAEf,EAAED,KAAKE,GAAG,CAAC,CAAC,EAAEC,IAAI,EAAE,GAAK,CAAC,qBAAqB,EAAEA,MAAgB,EAAEC,IAAI,CAAC,QAAQ;2BACvD,CAAC;IAC1B,OAAOR,QAAQC,MAAM,CAACQ,eAAe,CAACJ;AACxC;AAEA,OAAO,MAAMK,eAA6B,eAAgB,EAAEV,OAAO,EAAE;IACnE,MAAMW,SAAS,MAAMZ,UAAUC;IAC/B,MAAMG,WAAWH,SAASW,OAAOP,IAAI;AACvC,EAAC"}