{"version":3,"sources":["../../src/utilities/migrationTableExists.ts"],"sourcesContent":["import type { LibSQLDatabase } from 'drizzle-orm/libsql'\n\nimport type { DrizzleAdapter, PostgresDB } from '../types.js'\n\nexport const migrationTableExists = async (\n  adapter: DrizzleAdapter,\n  db?: LibSQLDatabase | PostgresDB,\n): Promise<boolean> => {\n  let statement\n\n  if (adapter.name === 'postgres') {\n    const prependSchema = adapter.schemaName ? `\"${adapter.schemaName}\".` : ''\n    statement = `SELECT to_regclass('${prependSchema}\"payload_migrations\"') AS exists;`\n  }\n\n  if (adapter.name === 'sqlite') {\n    statement = `\n      SELECT CASE\n               WHEN COUNT(*) > 0 THEN 1\n               ELSE 0\n               END AS 'exists'\n      FROM sqlite_master\n      WHERE type = 'table'\n        AND name = 'payload_migrations';`\n  }\n\n  const result = await adapter.execute({\n    drizzle: db ?? adapter.drizzle,\n    raw: statement,\n  })\n\n  const [row] = result.rows\n\n  return row && typeof row === 'object' && 'exists' in row && !!row.exists\n}\n"],"names":["migrationTableExists","adapter","db","statement","name","prependSchema","schemaName","result","execute","drizzle","raw","row","rows","exists"],"mappings":"AAIA,OAAO,MAAMA,uBAAuB,OAClCC,SACAC;IAEA,IAAIC;IAEJ,IAAIF,QAAQG,IAAI,KAAK,YAAY;QAC/B,MAAMC,gBAAgBJ,QAAQK,UAAU,GAAG,CAAC,CAAC,EAAEL,QAAQK,UAAU,CAAC,EAAE,CAAC,GAAG;QACxEH,YAAY,CAAC,oBAAoB,EAAEE,cAAc,iCAAiC,CAAC;IACrF;IAEA,IAAIJ,QAAQG,IAAI,KAAK,UAAU;QAC7BD,YAAY,CAAC;;;;;;;wCAOuB,CAAC;IACvC;IAEA,MAAMI,SAAS,MAAMN,QAAQO,OAAO,CAAC;QACnCC,SAASP,MAAMD,QAAQQ,OAAO;QAC9BC,KAAKP;IACP;IAEA,MAAM,CAACQ,IAAI,GAAGJ,OAAOK,IAAI;IAEzB,OAAOD,OAAO,OAAOA,QAAQ,YAAY,YAAYA,OAAO,CAAC,CAACA,IAAIE,MAAM;AAC1E,EAAC"}