{"version":3,"sources":["../../src/queries/addJoinTable.ts"],"sourcesContent":["import { type SQL } from 'drizzle-orm'\nimport { type PgTableWithColumns } from 'drizzle-orm/pg-core'\n\nimport type { GenericTable } from '../types.js'\nimport type { BuildQueryJoinAliases } from './buildQuery.js'\n\nimport { getNameFromDrizzleTable } from '../utilities/getNameFromDrizzleTable.js'\n\nexport const addJoinTable = ({\n  type,\n  condition,\n  joins,\n  queryPath,\n  table,\n}: {\n  condition: SQL\n  joins: BuildQueryJoinAliases\n  queryPath?: string\n  table: GenericTable | PgTableWithColumns<any>\n  type?: 'innerJoin' | 'leftJoin' | 'rightJoin'\n}) => {\n  const name = getNameFromDrizzleTable(table)\n\n  if (!joins.some((eachJoin) => getNameFromDrizzleTable(eachJoin.table) === name)) {\n    joins.push({ type, condition, queryPath, table })\n  }\n}\n"],"names":["getNameFromDrizzleTable","addJoinTable","type","condition","joins","queryPath","table","name","some","eachJoin","push"],"mappings":"AAMA,SAASA,uBAAuB,QAAQ,0CAAyC;AAEjF,OAAO,MAAMC,eAAe,CAAC,EAC3BC,IAAI,EACJC,SAAS,EACTC,KAAK,EACLC,SAAS,EACTC,KAAK,EAON;IACC,MAAMC,OAAOP,wBAAwBM;IAErC,IAAI,CAACF,MAAMI,IAAI,CAAC,CAACC,WAAaT,wBAAwBS,SAASH,KAAK,MAAMC,OAAO;QAC/EH,MAAMM,IAAI,CAAC;YAAER;YAAMC;YAAWE;YAAWC;QAAM;IACjD;AACF,EAAC"}