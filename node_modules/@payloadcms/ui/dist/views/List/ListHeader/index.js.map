{"version":3,"file":"index.js","names":["getTranslation","React","CloseModalButton","DefaultListViewTabs","useListDrawerContext","DrawerRelationshipSelect","ListDrawerCreateNewDocButton","ListHeader","ListBulkUploadButton","ListCreateNewButton","ListEmptyTrashButton","useConfig","useListQuery","ListSelection","drawerBaseClass","CollectionListHeader","className","collectionConfig","Description","disableBulkDelete","disableBulkEdit","hasCreatePermission","hasDeletePermission","i18n","isBulkUploadEnabled","isTrashEnabled","newDocumentURL","onBulkUploadSuccess","openBulkUpload","smallBreak","viewType","config","getEntityConfig","drawerSlug","isInDrawer","selectedOption","isTrashRoute","isGroupingBy","_jsx","Actions","slug","AfterListHeaderContent","_jsxs","_Fragment","title","collectionSlug","value","labels","plural","TitleActions","filter","Boolean","label","showSelectAllAcrossPages"],"sources":["../../../../src/views/List/ListHeader/index.tsx"],"sourcesContent":["import type { I18nClient, TFunction } from '@payloadcms/translations'\nimport type { ClientCollectionConfig, ViewTypes } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport React from 'react'\n\nimport { CloseModalButton } from '../../../elements/CloseModalButton/index.js'\nimport { DefaultListViewTabs } from '../../../elements/DefaultListViewTabs/index.js'\nimport { useListDrawerContext } from '../../../elements/ListDrawer/Provider.js'\nimport { DrawerRelationshipSelect } from '../../../elements/ListHeader/DrawerRelationshipSelect/index.js'\nimport { ListDrawerCreateNewDocButton } from '../../../elements/ListHeader/DrawerTitleActions/index.js'\nimport { ListHeader } from '../../../elements/ListHeader/index.js'\nimport {\n  ListBulkUploadButton,\n  ListCreateNewButton,\n  ListEmptyTrashButton,\n} from '../../../elements/ListHeader/TitleActions/index.js'\nimport { useConfig } from '../../../providers/Config/index.js'\nimport { useListQuery } from '../../../providers/ListQuery/index.js'\nimport { ListSelection } from '../ListSelection/index.js'\nimport './index.scss'\n\nconst drawerBaseClass = 'list-drawer'\n\nexport type ListHeaderProps = {\n  Actions?: React.ReactNode[]\n  className?: string\n  collectionConfig: ClientCollectionConfig\n  Description?: React.ReactNode\n  disableBulkDelete?: boolean\n  disableBulkEdit?: boolean\n  hasCreatePermission: boolean\n  hasDeletePermission?: boolean\n  i18n: I18nClient\n  isBulkUploadEnabled: boolean\n  isTrashEnabled?: boolean\n  newDocumentURL: string\n  onBulkUploadSuccess?: () => void\n  /** @deprecated This prop will be removed in the next major version.\n   *\n   * Opening of the bulk upload modal is handled internally.\n   *\n   * Prefer `onBulkUploadSuccess` usage to handle the success of the bulk upload.\n   */\n  openBulkUpload: () => void\n  smallBreak: boolean\n  /** @deprecated This prop will be removed in the next major version. */\n  t?: TFunction\n  TitleActions?: React.ReactNode[]\n  viewType?: ViewTypes\n}\n\nexport const CollectionListHeader: React.FC<ListHeaderProps> = ({\n  className,\n  collectionConfig,\n  Description,\n  disableBulkDelete,\n  disableBulkEdit,\n  hasCreatePermission,\n  hasDeletePermission,\n  i18n,\n  isBulkUploadEnabled,\n  isTrashEnabled,\n  newDocumentURL,\n  onBulkUploadSuccess,\n  openBulkUpload,\n  smallBreak,\n  viewType,\n}) => {\n  const { config, getEntityConfig } = useConfig()\n  const { drawerSlug, isInDrawer, selectedOption } = useListDrawerContext()\n  const isTrashRoute = viewType === 'trash'\n  const { isGroupingBy } = useListQuery()\n\n  if (isInDrawer) {\n    return (\n      <ListHeader\n        Actions={[\n          <CloseModalButton\n            className={`${drawerBaseClass}__header-close`}\n            key=\"close-button\"\n            slug={drawerSlug}\n          />,\n        ]}\n        AfterListHeaderContent={\n          <>\n            {Description}\n            {<DrawerRelationshipSelect />}\n          </>\n        }\n        className={`${drawerBaseClass}__header`}\n        title={getTranslation(\n          getEntityConfig({ collectionSlug: selectedOption.value })?.labels?.plural,\n          i18n,\n        )}\n        TitleActions={[\n          <ListDrawerCreateNewDocButton\n            hasCreatePermission={hasCreatePermission}\n            key=\"list-drawer-create-new-doc\"\n          />,\n        ].filter(Boolean)}\n      />\n    )\n  }\n\n  return (\n    <ListHeader\n      Actions={[\n        !smallBreak && !isGroupingBy && (\n          <ListSelection\n            collectionConfig={collectionConfig}\n            disableBulkDelete={disableBulkDelete}\n            disableBulkEdit={disableBulkEdit}\n            key=\"list-selection\"\n            label={getTranslation(collectionConfig?.labels?.plural, i18n)}\n            showSelectAllAcrossPages={!isGroupingBy}\n            viewType={viewType}\n          />\n        ),\n        <DefaultListViewTabs\n          collectionConfig={collectionConfig}\n          config={config}\n          key=\"default-list-actions\"\n          viewType={viewType}\n        />,\n      ].filter(Boolean)}\n      AfterListHeaderContent={Description}\n      className={className}\n      title={getTranslation(collectionConfig?.labels?.plural, i18n)}\n      TitleActions={[\n        hasCreatePermission && !isTrashRoute && (\n          <ListCreateNewButton\n            collectionConfig={collectionConfig}\n            hasCreatePermission={hasCreatePermission}\n            key=\"list-header-create-new-doc\"\n            newDocumentURL={newDocumentURL}\n          />\n        ),\n        hasCreatePermission && isBulkUploadEnabled && !isTrashRoute && (\n          <ListBulkUploadButton\n            collectionSlug={collectionConfig.slug}\n            hasCreatePermission={hasCreatePermission}\n            isBulkUploadEnabled={isBulkUploadEnabled}\n            key=\"list-header-bulk-upload\"\n            onBulkUploadSuccess={onBulkUploadSuccess}\n            openBulkUpload={openBulkUpload}\n          />\n        ),\n        hasDeletePermission && isTrashEnabled && viewType === 'trash' && (\n          <ListEmptyTrashButton\n            collectionConfig={collectionConfig}\n            hasDeletePermission={hasDeletePermission}\n            key=\"list-header-empty-trash\"\n          />\n        ),\n      ].filter(Boolean)}\n    />\n  )\n}\n"],"mappings":"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","ignoreList":[]}