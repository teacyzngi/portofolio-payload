{"version":3,"file":"index.js","names":["getTranslation","useRouter","formatAdminURL","formatFilesize","React","Fragment","useEffect","useBulkUpload","Button","Gutter","ListControls","useListDrawerContext","useModal","PageControls","RenderCustomComponent","SelectMany","useStepNav","StickyToolbar","RelationshipProvider","ViewDescription","useControllableState","useConfig","useListQuery","SelectionProvider","TableColumnsProvider","useTranslation","useWindowInfo","ListSelection","CollectionListHeader","baseClass","DefaultListView","props","AfterList","AfterListTable","beforeActions","BeforeList","BeforeListTable","collectionSlug","columnState","Description","disableBulkDelete","disableBulkEdit","disableQueryPresets","enableRowSelections","hasCreatePermission","hasCreatePermissionFromProps","hasDeletePermission","listMenuItems","newDocumentURL","queryPreset","queryPresetPermissions","renderedFilters","resolvedFilterOptions","Table","InitialTable","viewType","allowCreate","createNewDrawerSlug","isInDrawer","onBulkSelect","undefined","config","routes","admin","adminRoute","getEntityConfig","router","data","isGroupingBy","openModal","drawerSlug","bulkUploadDrawerSlug","setCollectionSlug","setOnSuccess","collectionConfig","labels","upload","isUploadCollection","Boolean","isBulkUploadEnabled","bulkUpload","isTrashEnabled","trash","i18n","setStepNav","breakpoints","s","smallBreak","docs","useMemo","map","doc","filesize","openBulkUpload","useCallback","refresh","baseLabel","label","plural","url","path","trashLabel","t","navItems","_jsxs","_jsx","className","totalDocs","CustomComponent","Fallback","description","hideFileInputOnCreate","onClick","enableQueryPresets","length","el","singular","to","AfterPageControls","showSelectAllAcrossPages","totalPages"],"sources":["../../../src/views/List/index.tsx"],"sourcesContent":["'use client'\n\nimport type { ListViewClientProps } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { useRouter } from 'next/navigation.js'\nimport { formatAdminURL, formatFilesize } from 'payload/shared'\nimport React, { Fragment, useEffect } from 'react'\n\nimport { useBulkUpload } from '../../elements/BulkUpload/index.js'\nimport { Button } from '../../elements/Button/index.js'\nimport { Gutter } from '../../elements/Gutter/index.js'\nimport { ListControls } from '../../elements/ListControls/index.js'\nimport { useListDrawerContext } from '../../elements/ListDrawer/Provider.js'\nimport { useModal } from '../../elements/Modal/index.js'\nimport { PageControls } from '../../elements/PageControls/index.js'\nimport { RenderCustomComponent } from '../../elements/RenderCustomComponent/index.js'\nimport { SelectMany } from '../../elements/SelectMany/index.js'\nimport { useStepNav } from '../../elements/StepNav/index.js'\nimport { StickyToolbar } from '../../elements/StickyToolbar/index.js'\nimport { RelationshipProvider } from '../../elements/Table/RelationshipProvider/index.js'\nimport { ViewDescription } from '../../elements/ViewDescription/index.js'\nimport { useControllableState } from '../../hooks/useControllableState.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useListQuery } from '../../providers/ListQuery/index.js'\nimport { SelectionProvider } from '../../providers/Selection/index.js'\nimport { TableColumnsProvider } from '../../providers/TableColumns/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { useWindowInfo } from '../../providers/WindowInfo/index.js'\nimport { ListSelection } from '../../views/List/ListSelection/index.js'\nimport { CollectionListHeader } from './ListHeader/index.js'\nimport './index.scss'\n\nconst baseClass = 'collection-list'\n\nexport function DefaultListView(props: ListViewClientProps) {\n  const {\n    AfterList,\n    AfterListTable,\n    beforeActions,\n    BeforeList,\n    BeforeListTable,\n    collectionSlug,\n    columnState,\n    Description,\n    disableBulkDelete,\n    disableBulkEdit,\n    disableQueryPresets,\n    enableRowSelections,\n    hasCreatePermission: hasCreatePermissionFromProps,\n    hasDeletePermission,\n    listMenuItems,\n    newDocumentURL,\n    queryPreset,\n    queryPresetPermissions,\n    renderedFilters,\n    resolvedFilterOptions,\n    Table: InitialTable,\n    viewType,\n  } = props\n\n  const [Table] = useControllableState(InitialTable)\n\n  const { allowCreate, createNewDrawerSlug, isInDrawer, onBulkSelect } = useListDrawerContext()\n\n  const hasCreatePermission =\n    allowCreate !== undefined\n      ? allowCreate && hasCreatePermissionFromProps\n      : hasCreatePermissionFromProps\n\n  const {\n    config: {\n      routes: { admin: adminRoute },\n    },\n    getEntityConfig,\n  } = useConfig()\n  const router = useRouter()\n\n  const { data, isGroupingBy } = useListQuery()\n\n  const { openModal } = useModal()\n  const { drawerSlug: bulkUploadDrawerSlug, setCollectionSlug, setOnSuccess } = useBulkUpload()\n\n  const collectionConfig = getEntityConfig({ collectionSlug })\n\n  const { labels, upload } = collectionConfig\n\n  const isUploadCollection = Boolean(upload)\n\n  const isBulkUploadEnabled = isUploadCollection && collectionConfig.upload.bulkUpload\n\n  const isTrashEnabled = Boolean(collectionConfig.trash)\n\n  const { i18n } = useTranslation()\n\n  const { setStepNav } = useStepNav()\n\n  const {\n    breakpoints: { s: smallBreak },\n  } = useWindowInfo()\n\n  const docs = React.useMemo(() => {\n    if (isUploadCollection) {\n      return data.docs.map((doc) => {\n        return {\n          ...doc,\n          filesize: formatFilesize(doc.filesize),\n        }\n      })\n    } else {\n      return data?.docs\n    }\n  }, [data?.docs, isUploadCollection])\n\n  const openBulkUpload = React.useCallback(() => {\n    setCollectionSlug(collectionSlug)\n    openModal(bulkUploadDrawerSlug)\n    setOnSuccess(() => router.refresh())\n  }, [router, collectionSlug, bulkUploadDrawerSlug, openModal, setCollectionSlug, setOnSuccess])\n\n  useEffect(() => {\n    if (!isInDrawer) {\n      const baseLabel = {\n        label: getTranslation(labels?.plural, i18n),\n        url:\n          isTrashEnabled && viewType === 'trash'\n            ? formatAdminURL({\n                adminRoute,\n                path: `/collections/${collectionSlug}`,\n              })\n            : undefined,\n      }\n\n      const trashLabel = {\n        label: i18n.t('general:trash'),\n      }\n\n      const navItems =\n        isTrashEnabled && viewType === 'trash' ? [baseLabel, trashLabel] : [baseLabel]\n\n      setStepNav(navItems)\n    }\n  }, [adminRoute, setStepNav, labels, isInDrawer, isTrashEnabled, viewType, i18n, collectionSlug])\n\n  return (\n    <Fragment>\n      <TableColumnsProvider collectionSlug={collectionSlug} columnState={columnState}>\n        <div className={`${baseClass} ${baseClass}--${collectionSlug}`}>\n          <SelectionProvider docs={docs} totalDocs={data?.totalDocs}>\n            {BeforeList}\n            <Gutter className={`${baseClass}__wrap`}>\n              <CollectionListHeader\n                collectionConfig={collectionConfig}\n                Description={\n                  <div className={`${baseClass}__sub-header`}>\n                    <RenderCustomComponent\n                      CustomComponent={Description}\n                      Fallback={\n                        <ViewDescription\n                          collectionSlug={collectionSlug}\n                          description={collectionConfig?.admin?.description}\n                        />\n                      }\n                    />\n                  </div>\n                }\n                disableBulkDelete={disableBulkDelete}\n                disableBulkEdit={disableBulkEdit}\n                hasCreatePermission={hasCreatePermission}\n                hasDeletePermission={hasDeletePermission}\n                i18n={i18n}\n                isBulkUploadEnabled={isBulkUploadEnabled && !upload.hideFileInputOnCreate}\n                isTrashEnabled={isTrashEnabled}\n                newDocumentURL={newDocumentURL}\n                openBulkUpload={openBulkUpload}\n                smallBreak={smallBreak}\n                viewType={viewType}\n              />\n              <ListControls\n                beforeActions={\n                  enableRowSelections && typeof onBulkSelect === 'function'\n                    ? beforeActions\n                      ? [...beforeActions, <SelectMany key=\"select-many\" onClick={onBulkSelect} />]\n                      : [<SelectMany key=\"select-many\" onClick={onBulkSelect} />]\n                    : beforeActions\n                }\n                collectionConfig={collectionConfig}\n                collectionSlug={collectionSlug}\n                disableQueryPresets={\n                  collectionConfig?.enableQueryPresets !== true || disableQueryPresets\n                }\n                listMenuItems={listMenuItems}\n                queryPreset={queryPreset}\n                queryPresetPermissions={queryPresetPermissions}\n                renderedFilters={renderedFilters}\n                resolvedFilterOptions={resolvedFilterOptions}\n              />\n              {BeforeListTable}\n              {docs?.length > 0 && (\n                <div className={`${baseClass}__tables`}>\n                  <RelationshipProvider>{Table}</RelationshipProvider>\n                </div>\n              )}\n              {docs?.length === 0 && (\n                <div className={`${baseClass}__no-results`}>\n                  <p>\n                    {i18n.t(viewType === 'trash' ? 'general:noTrashResults' : 'general:noResults', {\n                      label: getTranslation(labels?.plural, i18n),\n                    })}\n                  </p>\n                  {hasCreatePermission && newDocumentURL && viewType !== 'trash' && (\n                    <Fragment>\n                      {isInDrawer ? (\n                        <Button el=\"button\" onClick={() => openModal(createNewDrawerSlug)}>\n                          {i18n.t('general:createNewLabel', {\n                            label: getTranslation(labels?.singular, i18n),\n                          })}\n                        </Button>\n                      ) : (\n                        <Button el=\"link\" to={newDocumentURL}>\n                          {i18n.t('general:createNewLabel', {\n                            label: getTranslation(labels?.singular, i18n),\n                          })}\n                        </Button>\n                      )}\n                    </Fragment>\n                  )}\n                </div>\n              )}\n              {AfterListTable}\n              {docs?.length > 0 && !isGroupingBy && (\n                <PageControls\n                  AfterPageControls={\n                    smallBreak ? (\n                      <div className={`${baseClass}__list-selection`}>\n                        <ListSelection\n                          collectionConfig={collectionConfig}\n                          disableBulkDelete={disableBulkDelete}\n                          disableBulkEdit={disableBulkEdit}\n                          label={getTranslation(collectionConfig.labels.plural, i18n)}\n                          showSelectAllAcrossPages={!isGroupingBy}\n                        />\n                        <div className={`${baseClass}__list-selection-actions`}>\n                          {enableRowSelections && typeof onBulkSelect === 'function'\n                            ? beforeActions\n                              ? [\n                                  ...beforeActions,\n                                  <SelectMany key=\"select-many\" onClick={onBulkSelect} />,\n                                ]\n                              : [<SelectMany key=\"select-many\" onClick={onBulkSelect} />]\n                            : beforeActions}\n                        </div>\n                      </div>\n                    ) : null\n                  }\n                  collectionConfig={collectionConfig}\n                />\n              )}\n            </Gutter>\n            {AfterList}\n          </SelectionProvider>\n        </div>\n      </TableColumnsProvider>\n      {docs?.length > 0 && isGroupingBy && data.totalPages > 1 && (\n        <StickyToolbar>\n          <PageControls collectionConfig={collectionConfig} />\n        </StickyToolbar>\n      )}\n    </Fragment>\n  )\n}\n"],"mappings":"AAAA;;;AAIA,SAASA,cAAc,QAAQ;AAC/B,SAASC,SAAS,QAAQ;AAC1B,SAASC,cAAc,EAAEC,cAAc,QAAQ;AAC/C,OAAOC,KAAA,IAASC,QAAQ,EAAEC,SAAS,QAAQ;AAE3C,SAASC,aAAa,QAAQ;AAC9B,SAASC,MAAM,QAAQ;AACvB,SAASC,MAAM,QAAQ;AACvB,SAASC,YAAY,QAAQ;AAC7B,SAASC,oBAAoB,QAAQ;AACrC,SAASC,QAAQ,QAAQ;AACzB,SAASC,YAAY,QAAQ;AAC7B,SAASC,qBAAqB,QAAQ;AACtC,SAASC,UAAU,QAAQ;AAC3B,SAASC,UAAU,QAAQ;AAC3B,SAASC,aAAa,QAAQ;AAC9B,SAASC,oBAAoB,QAAQ;AACrC,SAASC,eAAe,QAAQ;AAChC,SAASC,oBAAoB,QAAQ;AACrC,SAASC,SAAS,QAAQ;AAC1B,SAASC,YAAY,QAAQ;AAC7B,SAASC,iBAAiB,QAAQ;AAClC,SAASC,oBAAoB,QAAQ;AACrC,SAASC,cAAc,QAAQ;AAC/B,SAASC,aAAa,QAAQ;AAC9B,SAASC,aAAa,QAAQ;AAC9B,SAASC,oBAAoB,QAAQ;AACrC,OAAO;AAEP,MAAMC,SAAA,GAAY;AAElB,OAAO,SAASC,gBAAgBC,KAA0B;EACxD,MAAM;IACJC,SAAS;IACTC,cAAc;IACdC,aAAa;IACbC,UAAU;IACVC,eAAe;IACfC,cAAc;IACdC,WAAW;IACXC,WAAW;IACXC,iBAAiB;IACjBC,eAAe;IACfC,mBAAmB;IACnBC,mBAAmB;IACnBC,mBAAA,EAAqBC,4BAA4B;IACjDC,mBAAmB;IACnBC,aAAa;IACbC,cAAc;IACdC,WAAW;IACXC,sBAAsB;IACtBC,eAAe;IACfC,qBAAqB;IACrBC,KAAA,EAAOC,YAAY;IACnBC;EAAQ,CACT,GAAGxB,KAAA;EAEJ,MAAM,CAACsB,KAAA,CAAM,GAAGjC,oBAAA,CAAqBkC,YAAA;EAErC,MAAM;IAAEE,WAAW;IAAEC,mBAAmB;IAAEC,UAAU;IAAEC;EAAY,CAAE,GAAGhD,oBAAA;EAEvE,MAAMiC,mBAAA,GACJY,WAAA,KAAgBI,SAAA,GACZJ,WAAA,IAAeX,4BAAA,GACfA,4BAAA;EAEN,MAAM;IACJgB,MAAA,EAAQ;MACNC,MAAA,EAAQ;QAAEC,KAAA,EAAOC;MAAU;IAAE,CAC9B;IACDC;EAAe,CAChB,GAAG5C,SAAA;EACJ,MAAM6C,MAAA,GAASjE,SAAA;EAEf,MAAM;IAAEkE,IAAI;IAAEC;EAAY,CAAE,GAAG9C,YAAA;EAE/B,MAAM;IAAE+C;EAAS,CAAE,GAAGzD,QAAA;EACtB,MAAM;IAAE0D,UAAA,EAAYC,oBAAoB;IAAEC,iBAAiB;IAAEC;EAAY,CAAE,GAAGlE,aAAA;EAE9E,MAAMmE,gBAAA,GAAmBT,eAAA,CAAgB;IAAE5B;EAAe;EAE1D,MAAM;IAAEsC,MAAM;IAAEC;EAAM,CAAE,GAAGF,gBAAA;EAE3B,MAAMG,kBAAA,GAAqBC,OAAA,CAAQF,MAAA;EAEnC,MAAMG,mBAAA,GAAsBF,kBAAA,IAAsBH,gBAAA,CAAiBE,MAAM,CAACI,UAAU;EAEpF,MAAMC,cAAA,GAAiBH,OAAA,CAAQJ,gBAAA,CAAiBQ,KAAK;EAErD,MAAM;IAAEC;EAAI,CAAE,GAAG1D,cAAA;EAEjB,MAAM;IAAE2D;EAAU,CAAE,GAAGpE,UAAA;EAEvB,MAAM;IACJqE,WAAA,EAAa;MAAEC,CAAA,EAAGC;IAAU;EAAE,CAC/B,GAAG7D,aAAA;EAEJ,MAAM8D,IAAA,GAAOpF,KAAA,CAAMqF,OAAO,CAAC;IACzB,IAAIZ,kBAAA,EAAoB;MACtB,OAAOV,IAAA,CAAKqB,IAAI,CAACE,GAAG,CAAEC,GAAA;QACpB,OAAO;UACL,GAAGA,GAAG;UACNC,QAAA,EAAUzF,cAAA,CAAewF,GAAA,CAAIC,QAAQ;QACvC;MACF;IACF,OAAO;MACL,OAAOzB,IAAA,EAAMqB,IAAA;IACf;EACF,GAAG,CAACrB,IAAA,EAAMqB,IAAA,EAAMX,kBAAA,CAAmB;EAEnC,MAAMgB,cAAA,GAAiBzF,KAAA,CAAM0F,WAAW,CAAC;IACvCtB,iBAAA,CAAkBnC,cAAA;IAClBgC,SAAA,CAAUE,oBAAA;IACVE,YAAA,CAAa,MAAMP,MAAA,CAAO6B,OAAO;EACnC,GAAG,CAAC7B,MAAA,EAAQ7B,cAAA,EAAgBkC,oBAAA,EAAsBF,SAAA,EAAWG,iBAAA,EAAmBC,YAAA,CAAa;EAE7FnE,SAAA,CAAU;IACR,IAAI,CAACoD,UAAA,EAAY;MACf,MAAMsC,SAAA,GAAY;QAChBC,KAAA,EAAOjG,cAAA,CAAe2E,MAAA,EAAQuB,MAAA,EAAQf,IAAA;QACtCgB,GAAA,EACElB,cAAA,IAAkB1B,QAAA,KAAa,UAC3BrD,cAAA,CAAe;UACb8D,UAAA;UACAoC,IAAA,EAAM,gBAAgB/D,cAAA;QACxB,KACAuB;MACR;MAEA,MAAMyC,UAAA,GAAa;QACjBJ,KAAA,EAAOd,IAAA,CAAKmB,CAAC,CAAC;MAChB;MAEA,MAAMC,QAAA,GACJtB,cAAA,IAAkB1B,QAAA,KAAa,UAAU,CAACyC,SAAA,EAAWK,UAAA,CAAW,GAAG,CAACL,SAAA,CAAU;MAEhFZ,UAAA,CAAWmB,QAAA;IACb;EACF,GAAG,CAACvC,UAAA,EAAYoB,UAAA,EAAYT,MAAA,EAAQjB,UAAA,EAAYuB,cAAA,EAAgB1B,QAAA,EAAU4B,IAAA,EAAM9C,cAAA,CAAe;EAE/F,oBACEmE,KAAA,CAACnG,QAAA;4BACCoG,IAAA,CAACjF,oBAAA;MAAqBa,cAAA,EAAgBA,cAAA;MAAgBC,WAAA,EAAaA,WAAA;gBACjE,aAAAmE,IAAA,CAAC;QAAIC,SAAA,EAAW,GAAG7E,SAAA,IAAaA,SAAA,KAAcQ,cAAA,EAAgB;kBAC5D,aAAAmE,KAAA,CAACjF,iBAAA;UAAkBiE,IAAA,EAAMA,IAAA;UAAMmB,SAAA,EAAWxC,IAAA,EAAMwC,SAAA;qBAC7CxE,UAAA,E,aACDqE,KAAA,CAAC/F,MAAA;YAAOiG,SAAA,EAAW,GAAG7E,SAAA,QAAiB;oCACrC4E,IAAA,CAAC7E,oBAAA;cACC8C,gBAAA,EAAkBA,gBAAA;cAClBnC,WAAA,eACEkE,IAAA,CAAC;gBAAIC,SAAA,EAAW,GAAG7E,SAAA,cAAuB;0BACxC,aAAA4E,IAAA,CAAC3F,qBAAA;kBACC8F,eAAA,EAAiBrE,WAAA;kBACjBsE,QAAA,eACEJ,IAAA,CAACtF,eAAA;oBACCkB,cAAA,EAAgBA,cAAA;oBAChByE,WAAA,EAAapC,gBAAA,EAAkBX,KAAA,EAAO+C;;;;cAMhDtE,iBAAA,EAAmBA,iBAAA;cACnBC,eAAA,EAAiBA,eAAA;cACjBG,mBAAA,EAAqBA,mBAAA;cACrBE,mBAAA,EAAqBA,mBAAA;cACrBqC,IAAA,EAAMA,IAAA;cACNJ,mBAAA,EAAqBA,mBAAA,IAAuB,CAACH,MAAA,CAAOmC,qBAAqB;cACzE9B,cAAA,EAAgBA,cAAA;cAChBjC,cAAA,EAAgBA,cAAA;cAChB6C,cAAA,EAAgBA,cAAA;cAChBN,UAAA,EAAYA,UAAA;cACZhC,QAAA,EAAUA;6BAEZkD,IAAA,CAAC/F,YAAA;cACCwB,aAAA,EACES,mBAAA,IAAuB,OAAOgB,YAAA,KAAiB,aAC3CzB,aAAA,GACE,C,GAAIA,aAAA,E,aAAeuE,IAAA,CAAC1F,UAAA;gBAA6BiG,OAAA,EAASrD;iBAAvB,eAAwC,GAC3E,C,aAAC8C,IAAA,CAAC1F,UAAA;gBAA6BiG,OAAA,EAASrD;iBAAvB,eAAwC,GAC3DzB,aAAA;cAENwC,gBAAA,EAAkBA,gBAAA;cAClBrC,cAAA,EAAgBA,cAAA;cAChBK,mBAAA,EACEgC,gBAAA,EAAkBuC,kBAAA,KAAuB,QAAQvE,mBAAA;cAEnDK,aAAA,EAAeA,aAAA;cACfE,WAAA,EAAaA,WAAA;cACbC,sBAAA,EAAwBA,sBAAA;cACxBC,eAAA,EAAiBA,eAAA;cACjBC,qBAAA,EAAuBA;gBAExBhB,eAAA,EACAoD,IAAA,EAAM0B,MAAA,GAAS,kBACdT,IAAA,CAAC;cAAIC,SAAA,EAAW,GAAG7E,SAAA,UAAmB;wBACpC,aAAA4E,IAAA,CAACvF,oBAAA;0BAAsBmC;;gBAG1BmC,IAAA,EAAM0B,MAAA,KAAW,kBAChBV,KAAA,CAAC;cAAIE,SAAA,EAAW,GAAG7E,SAAA,cAAuB;sCACxC4E,IAAA,CAAC;0BACEtB,IAAA,CAAKmB,CAAC,CAAC/C,QAAA,KAAa,UAAU,2BAA2B,qBAAqB;kBAC7E0C,KAAA,EAAOjG,cAAA,CAAe2E,MAAA,EAAQuB,MAAA,EAAQf,IAAA;gBACxC;kBAEDvC,mBAAA,IAAuBI,cAAA,IAAkBO,QAAA,KAAa,wBACrDkD,IAAA,CAACpG,QAAA;0BACEqD,UAAA,gBACC+C,IAAA,CAACjG,MAAA;kBAAO2G,EAAA,EAAG;kBAASH,OAAA,EAASA,CAAA,KAAM3C,SAAA,CAAUZ,mBAAA;4BAC1C0B,IAAA,CAAKmB,CAAC,CAAC,0BAA0B;oBAChCL,KAAA,EAAOjG,cAAA,CAAe2E,MAAA,EAAQyC,QAAA,EAAUjC,IAAA;kBAC1C;kCAGFsB,IAAA,CAACjG,MAAA;kBAAO2G,EAAA,EAAG;kBAAOE,EAAA,EAAIrE,cAAA;4BACnBmC,IAAA,CAAKmB,CAAC,CAAC,0BAA0B;oBAChCL,KAAA,EAAOjG,cAAA,CAAe2E,MAAA,EAAQyC,QAAA,EAAUjC,IAAA;kBAC1C;;;gBAOXlD,cAAA,EACAuD,IAAA,EAAM0B,MAAA,GAAS,KAAK,CAAC9C,YAAA,iBACpBqC,IAAA,CAAC5F,YAAA;cACCyG,iBAAA,EACE/B,UAAA,gBACEiB,KAAA,CAAC;gBAAIE,SAAA,EAAW,GAAG7E,SAAA,kBAA2B;wCAC5C4E,IAAA,CAAC9E,aAAA;kBACC+C,gBAAA,EAAkBA,gBAAA;kBAClBlC,iBAAA,EAAmBA,iBAAA;kBACnBC,eAAA,EAAiBA,eAAA;kBACjBwD,KAAA,EAAOjG,cAAA,CAAe0E,gBAAA,CAAiBC,MAAM,CAACuB,MAAM,EAAEf,IAAA;kBACtDoC,wBAAA,EAA0B,CAACnD;iCAE7BqC,IAAA,CAAC;kBAAIC,SAAA,EAAW,GAAG7E,SAAA,0BAAmC;4BACnDc,mBAAA,IAAuB,OAAOgB,YAAA,KAAiB,aAC5CzB,aAAA,GACE,C,GACKA,aAAA,E,aACHuE,IAAA,CAAC1F,UAAA;oBAA6BiG,OAAA,EAASrD;qBAAvB,eACjB,GACD,C,aAAC8C,IAAA,CAAC1F,UAAA;oBAA6BiG,OAAA,EAASrD;qBAAvB,eAAwC,GAC3DzB;;mBAGN;cAENwC,gBAAA,EAAkBA;;cAIvB1C,SAAA;;;QAINwD,IAAA,EAAM0B,MAAA,GAAS,KAAK9C,YAAA,IAAgBD,IAAA,CAAKqD,UAAU,GAAG,kBACrDf,IAAA,CAACxF,aAAA;gBACC,aAAAwF,IAAA,CAAC5F,YAAA;QAAa6D,gBAAA,EAAkBA;;;;AAK1C","ignoreList":[]}