{"version":3,"file":"index.js","names":["rtlLanguages","React","useCallback","useMemo","RenderCustomComponent","FieldDescription","FieldError","useForm","useField","withCondition","useEditDepth","useTranslation","generateFieldID","mergeFieldStyles","fieldBaseClass","CheckboxInput","baseClass","CheckboxFieldComponent","props","id","checked","checkedFromProps","disableFormData","field","admin","className","description","label","required","onChange","onChangeFromProps","partialChecked","path","pathFromProps","readOnly","validate","uuid","editDepth","i18n","language","isRTL","includes","memoizedValidate","value","options","customComponents","AfterInput","BeforeInput","Description","Error","Label","disabled","setValue","showError","potentiallyStalePath","onToggle","Boolean","fieldID","styles","_jsxs","filter","join","style","_jsx","CustomComponent","Fallback","alignCaret","inputRef","name","CheckboxField"],"sources":["../../../src/fields/Checkbox/index.tsx"],"sourcesContent":["'use client'\nimport type {\n  CheckboxFieldClientComponent,\n  CheckboxFieldClientProps,\n  CheckboxFieldValidation,\n} from 'payload'\n\nimport { rtlLanguages } from '@payloadcms/translations'\nimport React, { useCallback, useMemo } from 'react'\n\nimport type { CheckboxInputProps } from './Input.js'\n\nimport { RenderCustomComponent } from '../../elements/RenderCustomComponent/index.js'\nimport { FieldDescription } from '../../fields/FieldDescription/index.js'\nimport { FieldError } from '../../fields/FieldError/index.js'\nimport { useForm } from '../../forms/Form/context.js'\nimport { useField } from '../../forms/useField/index.js'\nimport { withCondition } from '../../forms/withCondition/index.js'\nimport { useEditDepth } from '../../providers/EditDepth/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { generateFieldID } from '../../utilities/generateFieldID.js'\nimport { mergeFieldStyles } from '../mergeFieldStyles.js'\nimport { fieldBaseClass } from '../shared/index.js'\nimport { CheckboxInput } from './Input.js'\nimport './index.scss'\n\nconst baseClass = 'checkbox'\n\nexport { CheckboxFieldClientProps, CheckboxInput, type CheckboxInputProps }\n\nconst CheckboxFieldComponent: CheckboxFieldClientComponent = (props) => {\n  const {\n    id,\n    checked: checkedFromProps,\n    disableFormData,\n    field,\n    field: {\n      admin: { className, description } = {} as CheckboxFieldClientProps['field']['admin'],\n      label,\n      required,\n    } = {} as CheckboxFieldClientProps['field'],\n    onChange: onChangeFromProps,\n    partialChecked,\n    path: pathFromProps,\n    readOnly,\n    validate,\n  } = props\n\n  const { uuid } = useForm()\n\n  const editDepth = useEditDepth()\n\n  const {\n    i18n: { language },\n  } = useTranslation()\n  const isRTL = (rtlLanguages as readonly string[]).includes(language)\n\n  const memoizedValidate: CheckboxFieldValidation = useCallback(\n    (value, options) => {\n      if (typeof validate === 'function') {\n        return validate(value, { ...options, required })\n      }\n    },\n    [validate, required],\n  )\n\n  const {\n    customComponents: { AfterInput, BeforeInput, Description, Error, Label } = {},\n    disabled,\n    path,\n    setValue,\n    showError,\n    value,\n  } = useField({\n    disableFormData,\n    potentiallyStalePath: pathFromProps,\n    validate: memoizedValidate,\n  })\n\n  const onToggle = useCallback(() => {\n    if (!readOnly) {\n      setValue(!value)\n      if (typeof onChangeFromProps === 'function') {\n        onChangeFromProps(!value)\n      }\n    }\n  }, [onChangeFromProps, readOnly, setValue, value])\n\n  const checked = checkedFromProps || Boolean(value)\n\n  const fieldID = id || generateFieldID(path, editDepth, uuid)\n\n  const styles = useMemo(() => mergeFieldStyles(field), [field])\n\n  return (\n    <div\n      className={[\n        fieldBaseClass,\n        baseClass,\n        showError && 'error',\n        className,\n        value && `${baseClass}--checked`,\n        (readOnly || disabled) && `${baseClass}--read-only`,\n      ]\n        .filter(Boolean)\n        .join(' ')}\n      style={styles}\n    >\n      <RenderCustomComponent\n        CustomComponent={Error}\n        Fallback={\n          <FieldError alignCaret={isRTL ? 'right' : 'left'} path={path} showError={showError} />\n        }\n      />\n      <CheckboxInput\n        AfterInput={AfterInput}\n        BeforeInput={BeforeInput}\n        checked={checked}\n        id={fieldID}\n        inputRef={null}\n        Label={Label}\n        label={label}\n        name={path}\n        onToggle={onToggle}\n        partialChecked={partialChecked}\n        readOnly={readOnly || disabled}\n        required={required}\n      />\n      <RenderCustomComponent\n        CustomComponent={Description}\n        Fallback={<FieldDescription description={description} path={path} />}\n      />\n    </div>\n  )\n}\n\nexport const CheckboxField = withCondition(CheckboxFieldComponent)\n"],"mappings":"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","ignoreList":[]}