{"version":3,"file":"ArrayRow.js","names":["c","_c","getTranslation","React","ArrayAction","Collapsible","ErrorPill","ShimmerEffect","useFormSubmitted","RenderFields","RowLabel","useThrottledValue","useTranslation","baseClass","ArrayRow","t0","$","addRow","attributes","copyRow","CustomRowLabel","duplicateRow","errorCount","fields","forceRender","t1","hasMaxRows","isDragging","isLoading","isLoadingFromProps","isSortable","labels","listeners","moveRow","parentPath","pasteRow","path","permissions","readOnly","removeRow","row","rowCount","rowIndex","schemaPath","setCollapse","setNodeRef","transform","transition","undefined","i18n","hasSubmitted","fallbackLabel","singular","String","padStart","fieldHasErrors","t2","t3","filter","Boolean","classNames","join","t4","split","t5","t6","collapsed","id","t7","_jsx","ref","style","zIndex","children","actions","index","className","collapsibleStyle","dragHandleProps","header","_jsxs","height","width","CustomComponent","label","rowNumber","count","withMessage","onToggle","margins","parentIndexPath","parentSchemaPath"],"sources":["../../../src/fields/Array/ArrayRow.tsx"],"sourcesContent":["'use client'\nimport type {\n  ArrayField,\n  ClientComponentProps,\n  ClientField,\n  Row,\n  SanitizedFieldPermissions,\n} from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport React from 'react'\n\nimport type { UseDraggableSortableReturn } from '../../elements/DraggableSortable/useDraggableSortable/types.js'\n\nimport { ArrayAction } from '../../elements/ArrayAction/index.js'\nimport { Collapsible } from '../../elements/Collapsible/index.js'\nimport { ErrorPill } from '../../elements/ErrorPill/index.js'\nimport { ShimmerEffect } from '../../elements/ShimmerEffect/index.js'\nimport { useFormSubmitted } from '../../forms/Form/context.js'\nimport { RenderFields } from '../../forms/RenderFields/index.js'\nimport { RowLabel } from '../../forms/RowLabel/index.js'\nimport { useThrottledValue } from '../../hooks/useThrottledValue.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport './index.scss'\n\nconst baseClass = 'array-field'\n\ntype ArrayRowProps = {\n  readonly addRow: (rowIndex: number) => Promise<void> | void\n  readonly copyRow: (rowIndex: number) => void\n  readonly CustomRowLabel?: React.ReactNode\n  readonly duplicateRow: (rowIndex: number) => void\n  readonly errorCount: number\n  readonly fields: ClientField[]\n  readonly hasMaxRows?: boolean\n  readonly isLoading?: boolean\n  readonly isSortable?: boolean\n  readonly labels: Partial<ArrayField['labels']>\n  readonly moveRow: (fromIndex: number, toIndex: number) => void\n  readonly parentPath: string\n  readonly pasteRow: (rowIndex: number) => void\n  readonly path: string\n  readonly permissions: SanitizedFieldPermissions\n  readonly readOnly?: boolean\n  readonly removeRow: (rowIndex: number) => void\n  readonly row: Row\n  readonly rowCount: number\n  readonly rowIndex: number\n  readonly schemaPath: string\n  readonly setCollapse: (rowID: string, collapsed: boolean) => void\n} & Pick<ClientComponentProps, 'forceRender'> &\n  UseDraggableSortableReturn\n\nexport const ArrayRow: React.FC<ArrayRowProps> = ({\n  addRow,\n  attributes,\n  copyRow,\n  CustomRowLabel,\n  duplicateRow,\n  errorCount,\n  fields,\n  forceRender = false,\n  hasMaxRows,\n  isDragging,\n  isLoading: isLoadingFromProps,\n  isSortable,\n  labels,\n  listeners,\n  moveRow,\n  parentPath,\n  pasteRow,\n  path,\n  permissions,\n  readOnly,\n  removeRow,\n  row,\n  rowCount,\n  rowIndex,\n  schemaPath,\n  setCollapse,\n  setNodeRef,\n  transform,\n  transition,\n}) => {\n  const isLoading = useThrottledValue(isLoadingFromProps, 500)\n\n  const { i18n } = useTranslation()\n  const hasSubmitted = useFormSubmitted()\n\n  const fallbackLabel = `${getTranslation(labels.singular, i18n)} ${String(rowIndex + 1).padStart(\n    2,\n    '0',\n  )}`\n\n  const fieldHasErrors = errorCount > 0 && hasSubmitted\n\n  const classNames = [\n    `${baseClass}__row`,\n    fieldHasErrors ? `${baseClass}__row--has-errors` : `${baseClass}__row--no-errors`,\n  ]\n    .filter(Boolean)\n    .join(' ')\n\n  return (\n    <div\n      id={`${parentPath.split('.').join('-')}-row-${rowIndex}`}\n      key={`${parentPath}-row-${row.id}`}\n      ref={setNodeRef}\n      style={{\n        transform,\n        transition,\n        zIndex: isDragging ? 1 : undefined,\n      }}\n    >\n      <Collapsible\n        actions={\n          !readOnly ? (\n            <ArrayAction\n              addRow={addRow}\n              copyRow={copyRow}\n              duplicateRow={duplicateRow}\n              hasMaxRows={hasMaxRows}\n              index={rowIndex}\n              isSortable={isSortable}\n              moveRow={moveRow}\n              pasteRow={pasteRow}\n              removeRow={removeRow}\n              rowCount={rowCount}\n            />\n          ) : undefined\n        }\n        className={classNames}\n        collapsibleStyle={fieldHasErrors ? 'error' : 'default'}\n        dragHandleProps={\n          isSortable\n            ? {\n                id: row.id,\n                attributes,\n                listeners,\n              }\n            : undefined\n        }\n        header={\n          <div className={`${baseClass}__row-header`}>\n            {isLoading ? (\n              <ShimmerEffect height=\"1rem\" width=\"8rem\" />\n            ) : (\n              <RowLabel\n                CustomComponent={CustomRowLabel}\n                label={fallbackLabel}\n                path={path}\n                rowNumber={rowIndex}\n              />\n            )}\n            {fieldHasErrors && <ErrorPill count={errorCount} i18n={i18n} withMessage />}\n          </div>\n        }\n        isCollapsed={row.collapsed}\n        onToggle={(collapsed) => setCollapse(row.id, collapsed)}\n      >\n        {isLoading ? (\n          <ShimmerEffect />\n        ) : (\n          <RenderFields\n            className={`${baseClass}__fields`}\n            fields={fields}\n            forceRender={forceRender}\n            margins=\"small\"\n            parentIndexPath=\"\"\n            parentPath={path}\n            parentSchemaPath={schemaPath}\n            permissions={permissions === true ? permissions : permissions?.fields}\n            readOnly={readOnly}\n          />\n        )}\n      </Collapsible>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}