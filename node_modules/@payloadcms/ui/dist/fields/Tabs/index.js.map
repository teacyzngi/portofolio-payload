{"version":3,"file":"index.js","names":["c","_c","getTranslation","tabHasName","toKebabCase","React","useCallback","useEffect","useState","useCollapsible","RenderCustomComponent","useFormFields","RenderFields","useField","withCondition","useDocumentInfo","usePreferences","useTranslation","FieldDescription","fieldBaseClass","TabsProvider","TabComponent","baseClass","generateTabPath","activeTabConfig","path","tabPath","name","TabsFieldComponent","props","$","field","t0","forceRender","t1","indexPath","t2","parentPath","t3","parentSchemaPath","t4","t5","permissions","readOnly","admin","t6","tabs","t7","t8","undefined","className","t9","getPreference","setPreference","preferencesKey","i18n","isWithinCollapsible","t10","t11","fields","map","tab","index","id","passesCondition","tabStates","filter","_temp","activeTabIndex","setActiveTabIndex","tabsPrefKey","t12","activeTabPath","setActiveTabPath","t13","activeTabSchemaPath","setActiveTabSchemaPath","t14","activePathChildrenPath","activeTabInfo","t15","activePathSchemaChildrenPath","activeTabDescription","description","activeTabStaticDescription","t","hasVisibleTabs","some","_temp2","t16","incomingTabIndex","existingPreferences","tabIndex","handleTabChange","t17","t18","getInitialPref","existingPreferences_0","initialIndex","newIndex","t19","nextTab","find","_temp3","t20","t21","t22","t23","Boolean","t24","t25","index_0","passesCondition_2","tab_0","_jsx","hidden","isActive","setIsActive","join","children","_jsxs","TabContent","parentIndexPath","String","TabsField","label","customComponents","Field","bb0","AfterInput","BeforeInput","Description","CustomComponent","Fallback","marginPlacement","passesCondition_0","passesCondition_1"],"sources":["../../../src/fields/Tabs/index.tsx"],"sourcesContent":["'use client'\nimport type {\n  ClientComponentProps,\n  ClientField,\n  ClientTab,\n  DocumentPreferences,\n  SanitizedFieldPermissions,\n  StaticDescription,\n  TabsFieldClientComponent,\n} from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { tabHasName, toKebabCase } from 'payload/shared'\nimport React, { useCallback, useEffect, useState } from 'react'\n\nimport { useCollapsible } from '../../elements/Collapsible/provider.js'\nimport { RenderCustomComponent } from '../../elements/RenderCustomComponent/index.js'\nimport { useFormFields } from '../../forms/Form/index.js'\nimport { RenderFields } from '../../forms/RenderFields/index.js'\nimport { useField } from '../../forms/useField/index.js'\nimport { withCondition } from '../../forms/withCondition/index.js'\nimport { useDocumentInfo } from '../../providers/DocumentInfo/index.js'\nimport { usePreferences } from '../../providers/Preferences/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { FieldDescription } from '../FieldDescription/index.js'\nimport { fieldBaseClass } from '../shared/index.js'\nimport { TabsProvider } from './provider.js'\nimport { TabComponent } from './Tab/index.js'\nimport './index.scss'\n\nconst baseClass = 'tabs-field'\n\nexport { TabsProvider }\n\nfunction generateTabPath({ activeTabConfig, path }: { activeTabConfig: ClientTab; path: string }) {\n  let tabPath = path\n\n  if (tabHasName(activeTabConfig) && activeTabConfig.name) {\n    if (path) {\n      tabPath = `${path}.${activeTabConfig.name}`\n    } else {\n      tabPath = activeTabConfig.name\n    }\n  }\n\n  return tabPath\n}\n\nconst TabsFieldComponent: TabsFieldClientComponent = (props) => {\n  const {\n    field: { admin: { className } = {}, tabs = [] },\n    forceRender = false,\n    indexPath = '',\n    parentPath = '',\n    parentSchemaPath = '',\n    path = '',\n    permissions,\n    readOnly,\n  } = props\n\n  const { getPreference, setPreference } = usePreferences()\n  const { preferencesKey } = useDocumentInfo()\n  const { i18n } = useTranslation()\n  const { isWithinCollapsible } = useCollapsible()\n\n  const tabStates = useFormFields(([fields]) => {\n    return tabs.map((tab, index) => {\n      const id = tab?.id\n\n      return {\n        index,\n        passesCondition: fields?.[id]?.passesCondition ?? true,\n        tab,\n      }\n    })\n  })\n\n  const [activeTabIndex, setActiveTabIndex] = useState<number>(\n    () => tabStates.filter(({ passesCondition }) => passesCondition)?.[0]?.index ?? 0,\n  )\n\n  const tabsPrefKey = `tabs-${indexPath}`\n  const [activeTabPath, setActiveTabPath] = useState<string>(() =>\n    generateTabPath({ activeTabConfig: tabs[activeTabIndex], path: parentPath }),\n  )\n\n  const [activeTabSchemaPath, setActiveTabSchemaPath] = useState<string>(() =>\n    generateTabPath({ activeTabConfig: tabs[0], path: parentSchemaPath }),\n  )\n\n  const activePathChildrenPath = tabHasName(tabs[activeTabIndex]) ? activeTabPath : parentPath\n  const activeTabInfo = tabStates[activeTabIndex]\n  const activeTabConfig = activeTabInfo?.tab\n  const activePathSchemaChildrenPath = tabHasName(tabs[activeTabIndex])\n    ? activeTabSchemaPath\n    : parentSchemaPath\n\n  const activeTabDescription = activeTabConfig.admin?.description ?? activeTabConfig.description\n\n  const activeTabStaticDescription =\n    typeof activeTabDescription === 'function'\n      ? activeTabDescription({ i18n, t: i18n.t })\n      : activeTabDescription\n\n  const hasVisibleTabs = tabStates.some(({ passesCondition }) => passesCondition)\n\n  const handleTabChange = useCallback(\n    async (incomingTabIndex: number): Promise<void> => {\n      setActiveTabIndex(incomingTabIndex)\n\n      setActiveTabPath(\n        generateTabPath({ activeTabConfig: tabs[incomingTabIndex], path: parentPath }),\n      )\n      setActiveTabSchemaPath(\n        generateTabPath({ activeTabConfig: tabs[incomingTabIndex], path: parentSchemaPath }),\n      )\n\n      const existingPreferences: DocumentPreferences = await getPreference(preferencesKey)\n\n      if (preferencesKey) {\n        void setPreference(preferencesKey, {\n          ...existingPreferences,\n          ...(path\n            ? {\n                fields: {\n                  ...(existingPreferences?.fields || {}),\n                  [path]: {\n                    ...existingPreferences?.fields?.[path],\n                    tabIndex: incomingTabIndex,\n                  },\n                },\n              }\n            : {\n                fields: {\n                  ...existingPreferences?.fields,\n                  [tabsPrefKey]: {\n                    ...existingPreferences?.fields?.[tabsPrefKey],\n                    tabIndex: incomingTabIndex,\n                  },\n                },\n              }),\n        })\n      }\n    },\n    [\n      tabs,\n      parentPath,\n      parentSchemaPath,\n      getPreference,\n      preferencesKey,\n      setPreference,\n      path,\n      tabsPrefKey,\n    ],\n  )\n\n  useEffect(() => {\n    if (preferencesKey) {\n      const getInitialPref = async () => {\n        const existingPreferences: DocumentPreferences = await getPreference(preferencesKey)\n        const initialIndex = path\n          ? existingPreferences?.fields?.[path]?.tabIndex\n          : existingPreferences?.fields?.[tabsPrefKey]?.tabIndex\n\n        const newIndex = initialIndex || 0\n        setActiveTabIndex(newIndex)\n\n        setActiveTabPath(generateTabPath({ activeTabConfig: tabs[newIndex], path: parentPath }))\n        setActiveTabSchemaPath(\n          generateTabPath({ activeTabConfig: tabs[newIndex], path: parentSchemaPath }),\n        )\n      }\n      void getInitialPref()\n    }\n  }, [path, getPreference, preferencesKey, tabsPrefKey, tabs, parentPath, parentSchemaPath])\n\n  useEffect(() => {\n    if (activeTabInfo?.passesCondition === false) {\n      const nextTab = tabStates.find(({ passesCondition }) => passesCondition)\n      if (nextTab) {\n        void handleTabChange(nextTab.index)\n      }\n    }\n  }, [activeTabInfo, tabStates, handleTabChange])\n\n  return (\n    <div\n      className={[\n        fieldBaseClass,\n        className,\n        baseClass,\n        isWithinCollapsible && `${baseClass}--within-collapsible`,\n        !hasVisibleTabs && `${baseClass}--hidden`,\n      ]\n        .filter(Boolean)\n        .join(' ')}\n    >\n      <TabsProvider>\n        <div className={`${baseClass}__tabs-wrap`}>\n          <div className={`${baseClass}__tabs`}>\n            {tabStates.map(({ index, passesCondition, tab }) => (\n              <TabComponent\n                hidden={!passesCondition}\n                isActive={activeTabIndex === index}\n                key={index}\n                parentPath={path}\n                setIsActive={() => {\n                  void handleTabChange(index)\n                }}\n                tab={tab}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={`${baseClass}__content-wrap`}>\n          {activeTabConfig && (\n            <TabContent\n              description={activeTabStaticDescription}\n              fields={activeTabConfig.fields}\n              forceRender={forceRender}\n              hidden={false}\n              parentIndexPath={\n                tabHasName(activeTabConfig)\n                  ? ''\n                  : `${indexPath ? indexPath + '-' : ''}` + String(activeTabInfo.index)\n              }\n              parentPath={activePathChildrenPath}\n              parentSchemaPath={activePathSchemaChildrenPath}\n              path={activeTabPath}\n              permissions={\n                permissions && typeof permissions === 'object' && 'name' in activeTabConfig\n                  ? permissions[activeTabConfig.name] &&\n                    typeof permissions[activeTabConfig.name] === 'object' &&\n                    'fields' in permissions[activeTabConfig.name]\n                    ? permissions[activeTabConfig.name].fields\n                    : permissions[activeTabConfig.name]\n                  : permissions\n              }\n              readOnly={readOnly}\n            />\n          )}\n        </div>\n      </TabsProvider>\n    </div>\n  )\n}\n\nexport const TabsField = withCondition(TabsFieldComponent)\n\ntype ActiveTabProps = {\n  readonly description: StaticDescription\n  readonly fields: ClientField[]\n  readonly hidden: boolean\n  readonly label?: string\n  readonly parentIndexPath: string\n  readonly parentPath: string\n  readonly parentSchemaPath: string\n  readonly path: string\n  readonly permissions: SanitizedFieldPermissions\n  readonly readOnly: boolean\n} & Pick<ClientComponentProps, 'forceRender'>\n\nfunction TabContent({\n  description,\n  fields,\n  forceRender,\n  hidden,\n  label,\n  parentIndexPath,\n  parentPath,\n  parentSchemaPath,\n  permissions,\n  readOnly,\n}: ActiveTabProps) {\n  const { i18n } = useTranslation()\n\n  const { customComponents: { AfterInput, BeforeInput, Description, Field } = {}, path } =\n    useField()\n\n  if (Field) {\n    return Field\n  }\n\n  return (\n    <div\n      className={[\n        hidden && `${baseClass}__tab--hidden`,\n        `${baseClass}__tab`,\n        label && `${baseClass}__tabConfigLabel-${toKebabCase(getTranslation(label, i18n))}`,\n      ]\n        .filter(Boolean)\n        .join(' ')}\n    >\n      <RenderCustomComponent\n        CustomComponent={Description}\n        Fallback={\n          <FieldDescription description={description} marginPlacement=\"bottom\" path={path} />\n        }\n      />\n      {BeforeInput}\n      <RenderFields\n        fields={fields}\n        forceRender={forceRender}\n        parentIndexPath={parentIndexPath}\n        parentPath={parentPath}\n        parentSchemaPath={parentSchemaPath}\n        permissions={permissions}\n        readOnly={readOnly}\n      />\n      {AfterInput}\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}