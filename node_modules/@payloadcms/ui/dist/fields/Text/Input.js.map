{"version":3,"file":"Input.js","names":["c","_c","getTranslation","React","ReactSelect","RenderCustomComponent","FieldDescription","FieldError","FieldLabel","useTranslation","fieldBaseClass","TextInput","props","$","AfterInput","BeforeInput","className","Description","description","Error","hasMany","htmlAttributes","inputRef","Label","label","localized","maxRows","onChange","onKeyDown","path","placeholder","placeholderFromProps","readOnly","required","rtl","showError","style","value","valueToRender","i18n","t","editableProps","_temp2","t0","t1","t2","t3","t4","filter","Boolean","_jsxs","join","children","_jsx","CustomComponent","Fallback","replace","components","DropdownIndicator","customProps","disabled","filterOption","Array","isArray","length","isClearable","isCreatable","isMulti","isSortable","menuIsOpen","noOptionsMessage","isOverHasMany","max","options","id","name","ref","type","_temp","event","currentTarget","contentEditable","data","className_0","selectProps","editableClassName","onBlur","onClick","event_0","classList","add","focus","event_1","key","remove","innerText","replaceAll","action","option","newValues","v","removedValue","preventDefault","stopPropagation"],"sources":["../../../src/fields/Text/Input.tsx"],"sourcesContent":["'use client'\nimport type { ChangeEvent } from 'react'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport React from 'react'\n\nimport type { ReactSelectAdapterProps } from '../../elements/ReactSelect/types.js'\nimport type { TextInputProps } from './types.js'\n\nimport { ReactSelect } from '../../elements/ReactSelect/index.js'\nimport { RenderCustomComponent } from '../../elements/RenderCustomComponent/index.js'\nimport { FieldDescription } from '../../fields/FieldDescription/index.js'\nimport { FieldError } from '../../fields/FieldError/index.js'\nimport { FieldLabel } from '../../fields/FieldLabel/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { fieldBaseClass } from '../shared/index.js'\nimport './index.scss'\n\nexport const TextInput: React.FC<TextInputProps> = (props) => {\n  const {\n    AfterInput,\n    BeforeInput,\n    className,\n    Description,\n    description,\n    Error,\n    hasMany,\n    htmlAttributes,\n    inputRef,\n    Label,\n    label,\n    localized,\n    maxRows,\n    onChange,\n    onKeyDown,\n    path,\n    placeholder: placeholderFromProps,\n    readOnly,\n    required,\n    rtl,\n    showError,\n    style,\n    value,\n    valueToRender,\n  } = props\n\n  const { i18n, t } = useTranslation()\n\n  const editableProps: ReactSelectAdapterProps['customProps']['editableProps'] = (\n    data,\n    className,\n    selectProps,\n  ) => {\n    const editableClassName = `${className}--editable`\n\n    return {\n      onBlur: (event: React.FocusEvent<HTMLDivElement>) => {\n        event.currentTarget.contentEditable = 'false'\n      },\n      onClick: (event: React.MouseEvent<HTMLDivElement>) => {\n        event.currentTarget.contentEditable = 'true'\n        event.currentTarget.classList.add(editableClassName)\n        event.currentTarget.focus()\n      },\n      onKeyDown: (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Escape') {\n          event.currentTarget.contentEditable = 'false'\n          event.currentTarget.classList.remove(editableClassName)\n          data.value.value = event.currentTarget.innerText\n          data.label = event.currentTarget.innerText\n\n          if (data.value.value.replaceAll('\\n', '')) {\n            selectProps.onChange(selectProps.value, {\n              action: 'create-option',\n              option: data,\n            })\n          } else {\n            if (Array.isArray(selectProps.value)) {\n              const newValues = selectProps.value.filter((v) => v.id !== data.id)\n              selectProps.onChange(newValues, {\n                action: 'pop-value',\n                removedValue: data,\n              })\n            }\n          }\n\n          event.preventDefault()\n        }\n        event.stopPropagation()\n      },\n    }\n  }\n\n  const placeholder = getTranslation(placeholderFromProps, i18n)\n\n  return (\n    <div\n      className={[\n        fieldBaseClass,\n        'text',\n        className,\n        showError && 'error',\n        readOnly && 'read-only',\n        hasMany && 'has-many',\n      ]\n        .filter(Boolean)\n        .join(' ')}\n      style={style}\n    >\n      <RenderCustomComponent\n        CustomComponent={Label}\n        Fallback={\n          <FieldLabel label={label} localized={localized} path={path} required={required} />\n        }\n      />\n      <div className={`${fieldBaseClass}__wrap`}>\n        <RenderCustomComponent\n          CustomComponent={Error}\n          Fallback={<FieldError path={path} showError={showError} />}\n        />\n        {BeforeInput}\n        {hasMany ? (\n          <ReactSelect\n            className={`field-${path.replace(/\\./g, '__')}`}\n            components={{ DropdownIndicator: null }}\n            customProps={{\n              editableProps,\n            }}\n            disabled={readOnly}\n            // prevent adding additional options if maxRows is reached\n            filterOption={() =>\n              !maxRows ? true : !(Array.isArray(value) && maxRows && value.length >= maxRows)\n            }\n            isClearable={false}\n            isCreatable\n            isMulti\n            isSortable\n            menuIsOpen={false}\n            noOptionsMessage={() => {\n              const isOverHasMany = Array.isArray(value) && value.length >= maxRows\n              if (isOverHasMany) {\n                return t('validation:limitReached', { max: maxRows, value: value.length + 1 })\n              }\n              return null\n            }}\n            onChange={onChange}\n            options={[]}\n            placeholder={placeholder}\n            showError={showError}\n            value={valueToRender}\n          />\n        ) : (\n          <input\n            data-rtl={rtl}\n            disabled={readOnly}\n            id={`field-${path?.replace(/\\./g, '__')}`}\n            name={path}\n            onChange={onChange as (e: ChangeEvent<HTMLInputElement>) => void}\n            onKeyDown={onKeyDown}\n            placeholder={placeholder}\n            ref={inputRef}\n            type=\"text\"\n            value={value || ''}\n            {...(htmlAttributes ?? {})}\n          />\n        )}\n        {AfterInput}\n        <RenderCustomComponent\n          CustomComponent={Description}\n          Fallback={<FieldDescription description={description} path={path} />}\n        />\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}