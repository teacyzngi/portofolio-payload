{"version":3,"file":"index.js","names":["c","_c","slugify","React","useCallback","useState","Button","useForm","useField","FieldLabel","TextInput","SlugField","t0","$","field","fieldToUse","path","readOnly","readOnlyFromProps","label","t1","name","t2","setValue","value","getDataByPath","isLocked","setIsLocked","t3","e","preventDefault","targetFieldValue","formattedSlug","handleGenerate","t4","Symbol","for","e_0","_temp","toggleLock","t5","t6","_jsxs","className","children","_jsx","htmlFor","buttonStyle","onClick","onChange","Boolean","prev"],"sources":["../../../src/fields/Slug/index.tsx"],"sourcesContent":["'use client'\nimport type { SlugFieldProps } from 'payload'\n\nimport { slugify } from 'payload/shared'\nimport React, { useCallback, useState } from 'react'\n\nimport { Button } from '../../elements/Button/index.js'\nimport { useForm } from '../../forms/Form/index.js'\nimport { useField } from '../../forms/useField/index.js'\nimport { FieldLabel } from '../FieldLabel/index.js'\nimport { TextInput } from '../Text/index.js'\nimport './index.scss'\n\n/**\n * @experimental This component is experimental and may change or be removed in the future. Use at your own risk.\n */\nexport const SlugField: React.FC<SlugFieldProps> = ({\n  field,\n  fieldToUse,\n  path,\n  readOnly: readOnlyFromProps,\n}) => {\n  const { label } = field\n\n  const { setValue, value } = useField<string>({ path: path || field.name })\n\n  const { getDataByPath } = useForm()\n\n  const [isLocked, setIsLocked] = useState(true)\n\n  const handleGenerate = useCallback(\n    (e: React.MouseEvent<Element>) => {\n      e.preventDefault()\n\n      const targetFieldValue = getDataByPath(fieldToUse)\n\n      if (targetFieldValue) {\n        const formattedSlug = slugify(targetFieldValue as string)\n\n        if (value !== formattedSlug) {\n          setValue(formattedSlug)\n        }\n      } else {\n        if (value !== '') {\n          setValue('')\n        }\n      }\n    },\n    [setValue, value, fieldToUse, getDataByPath],\n  )\n\n  const toggleLock = useCallback((e: React.MouseEvent<Element>) => {\n    e.preventDefault()\n    setIsLocked((prev) => !prev)\n  }, [])\n\n  return (\n    <div className=\"field-type slug-field-component\">\n      <div className=\"label-wrapper\">\n        <FieldLabel htmlFor={`field-${path}`} label={label} />\n        {!isLocked && (\n          <Button buttonStyle=\"none\" className=\"lock-button\" onClick={handleGenerate}>\n            Generate\n          </Button>\n        )}\n        <Button buttonStyle=\"none\" className=\"lock-button\" onClick={toggleLock}>\n          {isLocked ? 'Unlock' : 'Lock'}\n        </Button>\n      </div>\n      <TextInput\n        onChange={setValue}\n        path={path || field.name}\n        readOnly={Boolean(readOnlyFromProps || isLocked)}\n        value={value}\n      />\n    </div>\n  )\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AAGA,SAASC,OAAO,QAAQ;AACxB,OAAOC,KAAA,IAASC,WAAW,EAAEC,QAAQ,QAAQ;AAE7C,SAASC,MAAM,QAAQ;AACvB,SAASC,OAAO,QAAQ;AACxB,SAASC,QAAQ,QAAQ;AACzB,SAASC,UAAU,QAAQ;AAC3B,SAASC,SAAS,QAAQ;AAC1B,OAAO;AAEP;;;AAGA,OAAO,MAAMC,SAAA,GAAsCC,EAAA;EAAA,MAAAC,CAAA,GAAAZ,EAAA;EAAC;IAAAa,KAAA;IAAAC,UAAA;IAAAC,IAAA;IAAAC,QAAA,EAAAC;EAAA,IAAAN,EAKnD;EACC;IAAAO;EAAA,IAAkBL,KAAA;EAEmC,MAAAM,EAAA,GAAAJ,IAAA,IAAQF,KAAA,CAAAO,IAAU;EAAA,IAAAC,EAAA;EAAA,IAAAT,CAAA,QAAAO,EAAA;IAA1BE,EAAA;MAAAN,IAAA,EAAQI;IAAkB;IAACP,CAAA,MAAAO,EAAA;IAAAP,CAAA,MAAAS,EAAA;EAAA;IAAAA,EAAA,GAAAT,CAAA;EAAA;EAAxE;IAAAU,QAAA;IAAAC;EAAA,IAA4BhB,QAAA,CAAiBc,EAA2B;EAExE;IAAAG;EAAA,IAA0BlB,OAAA;EAE1B,OAAAmB,QAAA,EAAAC,WAAA,IAAgCtB,QAAA,KAAS;EAAA,IAAAuB,EAAA;EAAA,IAAAf,CAAA,QAAAE,UAAA,IAAAF,CAAA,QAAAY,aAAA,IAAAZ,CAAA,QAAAU,QAAA,IAAAV,CAAA,QAAAW,KAAA;IAGvCI,EAAA,GAAAC,CAAA;MACEA,CAAA,CAAAC,cAAA,CAAgB;MAEhB,MAAAC,gBAAA,GAAyBN,aAAA,CAAcV,UAAA;MAAA,IAEnCgB,gBAAA;QACF,MAAAC,aAAA,GAAsB9B,OAAA,CAAQ6B,gBAAA;QAAA,IAE1BP,KAAA,KAAUQ,aAAA;UACZT,QAAA,CAASS,aAAA;QAAA;MAAA;QAAA,IAGPR,KAAA,KAAU;UACZD,QAAA,CAAS;QAAA;MAAA;IAAA;IAGfV,CAAA,MAAAE,UAAA;IAAAF,CAAA,MAAAY,aAAA;IAAAZ,CAAA,MAAAU,QAAA;IAAAV,CAAA,MAAAW,KAAA;IAAAX,CAAA,MAAAe,EAAA;EAAA;IAAAA,EAAA,GAAAf,CAAA;EAAA;EAjBF,MAAAoB,cAAA,GAAuBL,EAkBuB;EAAA,IAAAM,EAAA;EAAA,IAAArB,CAAA,QAAAsB,MAAA,CAAAC,GAAA;IAGfF,EAAA,GAAAG,GAAA;MAC7BR,GAAA,CAAAC,cAAA,CAAgB;MAChBH,WAAA,CAAAW,KAAuB;IAAA;IACzBzB,CAAA,MAAAqB,EAAA;EAAA;IAAAA,EAAA,GAAArB,CAAA;EAAA;EAHA,MAAA0B,UAAA,GAAmBL,EAGd;EAKsB,MAAAM,EAAA,YAASxB,IAAA,EAAM;EAAA,IAAAyB,EAAA;EAAA,IAAA5B,CAAA,QAAAC,KAAA,CAAAO,IAAA,IAAAR,CAAA,QAAAoB,cAAA,IAAApB,CAAA,SAAAa,QAAA,IAAAb,CAAA,SAAAM,KAAA,IAAAN,CAAA,SAAAG,IAAA,IAAAH,CAAA,SAAAK,iBAAA,IAAAL,CAAA,SAAAU,QAAA,IAAAV,CAAA,SAAA2B,EAAA,IAAA3B,CAAA,SAAAW,KAAA;IAFxCiB,EAAA,GAAAC,KAAA,CAAC;MAAAC,SAAA,EAAc;MAAAC,QAAA,GACbF,KAAA,CAAC;QAAAC,SAAA,EAAc;QAAAC,QAAA,GACbC,IAAA,CAAApC,UAAA;UAAAqC,OAAA,EAAqBN,EAAe;UAAArB;QAAA,C,GACnC,CAACO,QAAA,IACAmB,IAAA,CAAAvC,MAAA;UAAAyC,WAAA,EAAoB;UAAAJ,SAAA,EAAiB;UAAAK,OAAA,EAAuBf,cAAA;UAAAW,QAAA,EAAgB;QAAA,C,GAI9EC,IAAA,CAAAvC,MAAA;UAAAyC,WAAA,EAAoB;UAAAJ,SAAA,EAAiB;UAAAK,OAAA,EAAuBT,UAAA;UAAAK,QAAA,EACzDlB,QAAA,GAAW,WAAW;QAAA,C;UAG3BmB,IAAA,CAAAnC,SAAA;QAAAuC,QAAA,EACY1B,QAAA;QAAAP,IAAA,EACJA,IAAA,IAAQF,KAAA,CAAAO,IAAU;QAAAJ,QAAA,EACdiC,OAAA,CAAQhC,iBAAA,IAAqBQ,QAAA;QAAAF;MAAA,C;;;;;;;;;;;;;;;SAf3CiB,E;CAoBJ;AA7DmD,SAAAH,MAAAa,IAAA;EAAA,QAqCxBA,IAAA;AAAA","ignoreList":[]}