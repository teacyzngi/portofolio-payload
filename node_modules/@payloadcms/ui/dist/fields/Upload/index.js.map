{"version":3,"file":"index.js","names":["React","useMemo","BulkUploadProvider","useField","withCondition","useConfig","mergeFieldStyles","UploadInput","baseClass","UploadComponent","props","field","admin","allowCreate","className","description","isSortable","hasMany","label","localized","maxRows","relationTo","required","path","pathFromProps","readOnly","validate","config","displayPreview","memoizedValidate","useCallback","value","options","customComponents","AfterInput","BeforeInput","Description","Error","Label","disabled","filterOptions","setValue","showError","potentiallyStalePath","styles","_jsx","drawerSlugPrefix","api","routes","onChange","serverURL","style","UploadField"],"sources":["../../../src/fields/Upload/index.tsx"],"sourcesContent":["'use client'\n\nimport type { UploadFieldClientProps } from 'payload'\n\nimport React, { useMemo } from 'react'\n\nimport { BulkUploadProvider } from '../../elements/BulkUpload/index.js'\nimport { useField } from '../../forms/useField/index.js'\nimport { withCondition } from '../../forms/withCondition/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { mergeFieldStyles } from '../mergeFieldStyles.js'\nimport { UploadInput } from './Input.js'\nimport './index.scss'\n\nexport { UploadInput } from './Input.js'\nexport type { UploadInputProps } from './Input.js'\n\nexport const baseClass = 'upload'\n\nexport function UploadComponent(props: UploadFieldClientProps) {\n  const {\n    field,\n    field: {\n      admin: { allowCreate, className, description, isSortable } = {},\n      hasMany,\n      label,\n      localized,\n      maxRows,\n      relationTo,\n      required,\n    },\n    path: pathFromProps,\n    readOnly,\n    validate,\n  } = props\n\n  const { config } = useConfig()\n\n  const displayPreview = field.displayPreview\n\n  const memoizedValidate = React.useCallback(\n    (value, options) => {\n      if (typeof validate === 'function') {\n        return validate(value, { ...options, required })\n      }\n    },\n    [validate, required],\n  )\n\n  const {\n    customComponents: { AfterInput, BeforeInput, Description, Error, Label } = {},\n    disabled,\n    filterOptions,\n    path,\n    setValue,\n    showError,\n    value,\n  } = useField<string | string[]>({\n    potentiallyStalePath: pathFromProps,\n    validate: memoizedValidate,\n  })\n\n  const styles = useMemo(() => mergeFieldStyles(field), [field])\n\n  return (\n    <BulkUploadProvider drawerSlugPrefix={pathFromProps}>\n      <UploadInput\n        AfterInput={AfterInput}\n        allowCreate={allowCreate !== false}\n        api={config.routes.api}\n        BeforeInput={BeforeInput}\n        className={className}\n        Description={Description}\n        description={description}\n        displayPreview={displayPreview}\n        Error={Error}\n        filterOptions={filterOptions}\n        hasMany={hasMany}\n        isSortable={isSortable}\n        label={label}\n        Label={Label}\n        localized={localized}\n        maxRows={maxRows}\n        onChange={setValue}\n        path={path}\n        readOnly={readOnly || disabled}\n        relationTo={relationTo}\n        required={required}\n        serverURL={config.serverURL}\n        showError={showError}\n        style={styles}\n        value={value}\n      />\n    </BulkUploadProvider>\n  )\n}\n\nexport const UploadField = withCondition(UploadComponent)\n"],"mappings":"AAAA;;;AAIA,OAAOA,KAAA,IAASC,OAAO,QAAQ;AAE/B,SAASC,kBAAkB,QAAQ;AACnC,SAASC,QAAQ,QAAQ;AACzB,SAASC,aAAa,QAAQ;AAC9B,SAASC,SAAS,QAAQ;AAC1B,SAASC,gBAAgB,QAAQ;AACjC,SAASC,WAAW,QAAQ;AAC5B,OAAO;AAEP,SAASA,WAAW,QAAQ;AAG5B,OAAO,MAAMC,SAAA,GAAY;AAEzB,OAAO,SAASC,gBAAgBC,KAA6B;EAC3D,MAAM;IACJC,KAAK;IACLA,KAAA,EAAO;MACLC,KAAA,EAAO;QAAEC,WAAW;QAAEC,SAAS;QAAEC,WAAW;QAAEC;MAAU,CAAE,GAAG,CAAC,CAAC;MAC/DC,OAAO;MACPC,KAAK;MACLC,SAAS;MACTC,OAAO;MACPC,UAAU;MACVC;IAAQ,CACT;IACDC,IAAA,EAAMC,aAAa;IACnBC,QAAQ;IACRC;EAAQ,CACT,GAAGhB,KAAA;EAEJ,MAAM;IAAEiB;EAAM,CAAE,GAAGtB,SAAA;EAEnB,MAAMuB,cAAA,GAAiBjB,KAAA,CAAMiB,cAAc;EAE3C,MAAMC,gBAAA,GAAmB7B,KAAA,CAAM8B,WAAW,CACxC,CAACC,KAAA,EAAOC,OAAA;IACN,IAAI,OAAON,QAAA,KAAa,YAAY;MAClC,OAAOA,QAAA,CAASK,KAAA,EAAO;QAAE,GAAGC,OAAO;QAAEV;MAAS;IAChD;EACF,GACA,CAACI,QAAA,EAAUJ,QAAA,CAAS;EAGtB,MAAM;IACJW,gBAAA,EAAkB;MAAEC,UAAU;MAAEC,WAAW;MAAEC,WAAW;MAAEC,KAAK;MAAEC;IAAK,CAAE,GAAG,CAAC,CAAC;IAC7EC,QAAQ;IACRC,aAAa;IACbjB,IAAI;IACJkB,QAAQ;IACRC,SAAS;IACTX,KAAK,EAALA;EAAK,CACN,GAAG5B,QAAA,CAA4B;IAC9BwC,oBAAA,EAAsBnB,aAAA;IACtBE,QAAA,EAAUG;EACZ;EAEA,MAAMe,MAAA,GAAS3C,OAAA,CAAQ,MAAMK,gBAAA,CAAiBK,KAAA,GAAQ,CAACA,KAAA,CAAM;EAE7D,oBACEkC,IAAA,CAAC3C,kBAAA;IAAmB4C,gBAAA,EAAkBtB,aAAA;cACpC,aAAAqB,IAAA,CAACtC,WAAA;MACC2B,UAAA,EAAYA,UAAA;MACZrB,WAAA,EAAaA,WAAA,KAAgB;MAC7BkC,GAAA,EAAKpB,MAAA,CAAOqB,MAAM,CAACD,GAAG;MACtBZ,WAAA,EAAaA,WAAA;MACbrB,SAAA,EAAWA,SAAA;MACXsB,WAAA,EAAaA,WAAA;MACbrB,WAAA,EAAaA,WAAA;MACba,cAAA,EAAgBA,cAAA;MAChBS,KAAA,EAAOA,KAAA;MACPG,aAAA,EAAeA,aAAA;MACfvB,OAAA,EAASA,OAAA;MACTD,UAAA,EAAYA,UAAA;MACZE,KAAA,EAAOA,KAAA;MACPoB,KAAA,EAAOA,KAAA;MACPnB,SAAA,EAAWA,SAAA;MACXC,OAAA,EAASA,OAAA;MACT6B,QAAA,EAAUR,QAAA;MACVlB,IAAA,EAAMA,IAAA;MACNE,QAAA,EAAUA,QAAA,IAAYc,QAAA;MACtBlB,UAAA,EAAYA,UAAA;MACZC,QAAA,EAAUA,QAAA;MACV4B,SAAA,EAAWvB,MAAA,CAAOuB,SAAS;MAC3BR,SAAA,EAAWA,SAAA;MACXS,KAAA,EAAOP,MAAA;MACPb,KAAA,EAAOA;;;AAIf;AAEA,OAAO,MAAMqB,WAAA,GAAchD,aAAA,CAAcK,eAAA","ignoreList":[]}