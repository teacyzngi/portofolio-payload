{"version":3,"file":"index.js","names":["c","_c","formatFilesize","React","Button","useDocumentDrawer","ThumbnailComponent","useConfig","baseClass","RelationshipContent","props","$","id","allowEdit","allowRemove","alt","byteSize","className","collectionSlug","displayPreview","filename","mimeType","onRemove","reloadDoc","src","thumbnailSrc","withMeta","t0","x","y","undefined","config","collectionConfig","collections","find","collection","slug","t1","t2","DocumentDrawer","t3","openDrawer","t4","t5","doc","onSave","generateMetaText","mimeType_0","size","sections","push","join","metaText","previewAllowed","upload","t6","filter","Boolean","_jsxs","children","_jsx","fileSrc","href","target","buttonStyle","icon","iconStyle","onClick"],"sources":["../../../../src/fields/Upload/RelationshipContent/index.tsx"],"sourcesContent":["'use client'\n\nimport type { TypeWithID } from 'payload'\n\nimport { formatFilesize, isImage } from 'payload/shared'\nimport React from 'react'\n\nimport type { ReloadDoc } from '../types.js'\n\nimport { Button } from '../../../elements/Button/index.js'\nimport { useDocumentDrawer } from '../../../elements/DocumentDrawer/index.js'\nimport { ThumbnailComponent } from '../../../elements/Thumbnail/index.js'\nimport { useConfig } from '../../../providers/Config/index.js'\nimport './index.scss'\n\nconst baseClass = 'upload-relationship-details'\n\ntype Props = {\n  readonly allowEdit?: boolean\n  readonly allowRemove?: boolean\n  readonly alt: string\n  readonly byteSize: number\n  readonly className?: string\n  readonly collectionSlug: string\n  readonly displayPreview?: boolean\n  readonly filename: string\n  readonly id?: number | string\n  readonly mimeType: string\n  readonly onRemove: () => void\n  readonly reloadDoc: ReloadDoc\n  readonly src: string\n  readonly thumbnailSrc: string\n  readonly withMeta?: boolean\n  readonly x?: number\n  readonly y?: number\n}\nexport function RelationshipContent(props: Props) {\n  const {\n    id,\n    allowEdit,\n    allowRemove,\n    alt,\n    byteSize,\n    className,\n    collectionSlug,\n    displayPreview,\n    filename,\n    mimeType,\n    onRemove,\n    reloadDoc,\n    src,\n    thumbnailSrc,\n    withMeta = true,\n    x,\n    y,\n  } = props\n\n  const { config } = useConfig()\n  const collectionConfig =\n    'collections' in config\n      ? config.collections.find((collection) => collection.slug === collectionSlug)\n      : undefined\n\n  const [DocumentDrawer, _, { openDrawer }] = useDocumentDrawer({\n    id: src ? id : undefined,\n    collectionSlug,\n  })\n\n  const onSave = React.useCallback(\n    async ({ doc }: { doc: TypeWithID }) => reloadDoc(doc.id, collectionSlug),\n    [reloadDoc, collectionSlug],\n  )\n\n  function generateMetaText(mimeType: string, size: number): string {\n    const sections: string[] = []\n    if (size) {\n      sections.push(formatFilesize(size))\n    }\n\n    if (x && y) {\n      sections.push(`${x}x${y}`)\n    }\n\n    if (mimeType) {\n      sections.push(mimeType)\n    }\n\n    return sections.join(' â€” ')\n  }\n\n  const metaText = withMeta ? generateMetaText(mimeType, byteSize) : ''\n  const previewAllowed = displayPreview ?? collectionConfig?.upload?.displayPreview ?? true\n\n  return (\n    <div className={[baseClass, className].filter(Boolean).join(' ')}>\n      <div className={`${baseClass}__imageAndDetails`}>\n        {previewAllowed && (\n          <ThumbnailComponent\n            alt={alt}\n            className={`${baseClass}__thumbnail`}\n            filename={filename}\n            fileSrc={thumbnailSrc}\n            size=\"small\"\n          />\n        )}\n        <div className={`${baseClass}__details`}>\n          <p className={`${baseClass}__filename`}>\n            {src ? (\n              <a href={src} target=\"_blank\">\n                {filename}\n              </a>\n            ) : (\n              filename\n            )}\n          </p>\n          {withMeta ? <p className={`${baseClass}__meta`}>{metaText}</p> : null}\n        </div>\n      </div>\n\n      {allowEdit !== false || allowRemove !== false ? (\n        <div className={`${baseClass}__actions`}>\n          {allowEdit !== false ? (\n            <Button\n              buttonStyle=\"icon-label\"\n              className={`${baseClass}__edit`}\n              icon=\"edit\"\n              iconStyle=\"none\"\n              onClick={openDrawer}\n            />\n          ) : null}\n          {allowRemove !== false ? (\n            <Button\n              buttonStyle=\"icon-label\"\n              className={`${baseClass}__remove`}\n              icon=\"x\"\n              iconStyle=\"none\"\n              onClick={() => onRemove()}\n            />\n          ) : null}\n          <DocumentDrawer onSave={onSave} />\n        </div>\n      ) : null}\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}