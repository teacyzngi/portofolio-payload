import type { LabelFunction, OptionObject, StaticDescription, StaticLabel } from 'payload';
import React from 'react';
import type { ReactSelectAdapterProps } from '../../elements/ReactSelect/types.js';
import './index.scss';
export type SelectInputProps = {
    readonly AfterInput?: React.ReactNode;
    readonly BeforeInput?: React.ReactNode;
    readonly className?: string;
    readonly Description?: React.ReactNode;
    readonly description?: StaticDescription;
    readonly Error?: React.ReactNode;
    readonly filterOption?: ReactSelectAdapterProps['filterOption'];
    readonly hasMany?: boolean;
    readonly id?: string;
    readonly isClearable?: boolean;
    readonly isSortable?: boolean;
    readonly Label?: React.ReactNode;
    readonly label?: StaticLabel;
    readonly localized?: boolean;
    readonly name: string;
    readonly onChange?: ReactSelectAdapterProps['onChange'];
    readonly onInputChange?: ReactSelectAdapterProps['onInputChange'];
    readonly options?: OptionObject[];
    readonly path: string;
    readonly placeholder?: LabelFunction | string;
    readonly readOnly?: boolean;
    readonly required?: boolean;
    readonly showError?: boolean;
    readonly style?: React.CSSProperties;
    readonly value?: string | string[];
};
export declare const SelectInput: React.FC<SelectInputProps>;
//# sourceMappingURL=Input.d.ts.map