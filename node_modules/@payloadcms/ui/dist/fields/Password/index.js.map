{"version":3,"file":"index.js","names":["password","React","useCallback","useMemo","useField","withCondition","useConfig","useLocale","useTranslation","mergeFieldStyles","isFieldRTL","PasswordInput","PasswordFieldComponent","props","autoComplete","field","admin","className","disabled","disabledFromProps","placeholder","rtl","label","localized","required","inputRef","path","validate","t","locale","config","memoizedValidate","value","options","pathSegments","split","name","type","blockData","data","event","preferences","fields","req","payload","siblingData","customComponents","AfterInput","BeforeInput","Description","Error","Label","setValue","showError","renderRTL","fieldLocalized","fieldRTL","localizationConfig","localization","undefined","styles","_jsx","onChange","e","target","readOnly","style","PasswordField"],"sources":["../../../src/fields/Password/index.tsx"],"sourcesContent":["'use client'\nimport type { PasswordFieldValidation, PayloadRequest } from 'payload'\n\nimport { password } from 'payload/shared'\nimport React, { useCallback, useMemo } from 'react'\n\nimport type { PasswordFieldProps } from './types.js'\n\nimport { useField } from '../../forms/useField/index.js'\nimport { withCondition } from '../../forms/withCondition/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useLocale } from '../../providers/Locale/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { mergeFieldStyles } from '../mergeFieldStyles.js'\nimport './index.scss'\nimport { isFieldRTL } from '../shared/index.js'\nimport { PasswordInput } from './input.js'\n\nconst PasswordFieldComponent: React.FC<PasswordFieldProps> = (props) => {\n  const {\n    autoComplete,\n    field,\n    field: {\n      admin: {\n        className,\n        disabled: disabledFromProps,\n        placeholder,\n        rtl,\n      } = {} as PasswordFieldProps['field']['admin'],\n      label,\n      localized,\n      required,\n    } = {} as PasswordFieldProps['field'],\n    inputRef,\n    path,\n    validate,\n  } = props\n\n  const { t } = useTranslation()\n  const locale = useLocale()\n  const { config } = useConfig()\n\n  const memoizedValidate: PasswordFieldValidation = useCallback(\n    (value, options) => {\n      const pathSegments = path ? path.split('.') : []\n\n      if (typeof validate === 'function') {\n        return validate(value, { ...options, required })\n      }\n\n      return password(value, {\n        name: 'password',\n        type: 'text',\n        blockData: {},\n        data: {},\n        event: 'onChange',\n        path: pathSegments,\n        preferences: { fields: {} },\n        req: {\n          payload: {\n            config,\n          },\n          t,\n        } as unknown as PayloadRequest,\n        required: true,\n        siblingData: {},\n      })\n    },\n    [validate, config, t, required, path],\n  )\n\n  const {\n    customComponents: { AfterInput, BeforeInput, Description, Error, Label } = {},\n    disabled,\n    setValue,\n    showError,\n    value,\n  } = useField({\n    path,\n    validate: memoizedValidate,\n  })\n\n  const renderRTL = isFieldRTL({\n    fieldLocalized: false,\n    fieldRTL: rtl,\n    locale,\n    localizationConfig: config.localization || undefined,\n  })\n\n  const styles = useMemo(() => mergeFieldStyles(field), [field])\n\n  return (\n    <PasswordInput\n      AfterInput={AfterInput}\n      autoComplete={autoComplete}\n      BeforeInput={BeforeInput}\n      className={className}\n      Description={Description}\n      Error={Error}\n      inputRef={inputRef}\n      Label={Label}\n      label={label}\n      localized={localized}\n      onChange={(e) => {\n        setValue(e.target.value)\n      }}\n      path={path}\n      placeholder={placeholder}\n      readOnly={disabled || disabledFromProps}\n      required={required}\n      rtl={renderRTL}\n      showError={showError}\n      style={styles}\n      value={(value as string) || ''}\n    />\n  )\n}\n\nexport const PasswordField = withCondition(PasswordFieldComponent)\n"],"mappings":"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","ignoreList":[]}