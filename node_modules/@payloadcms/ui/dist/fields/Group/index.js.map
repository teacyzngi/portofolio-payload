{"version":3,"file":"index.js","names":["getTranslation","groupHasName","React","useMemo","useCollapsible","ErrorPill","RenderCustomComponent","FieldDescription","FieldLabel","useFormSubmitted","RenderFields","useField","withCondition","useTranslation","mergeFieldStyles","useRow","fieldBaseClass","useTabs","GroupProvider","useGroup","baseClass","GroupFieldComponent","props","field","admin","className","description","hideGutter","fields","label","indexPath","parentPath","parentSchemaPath","path","permissions","readOnly","schemaPath","schemaPathFromProps","type","name","i18n","isWithinCollapsible","isWithinGroup","isWithinRow","isWithinTab","customComponents","AfterInput","BeforeInput","Description","Label","errorPaths","submitted","errorCount","length","fieldHasErrors","isTopLevel","styles","_jsxs","filter","Boolean","join","id","replace","style","_jsx","CustomComponent","Fallback","as","localized","required","count","withMessage","margins","parentIndexPath","GroupField"],"sources":["../../../src/fields/Group/index.tsx"],"sourcesContent":["'use client'\n\nimport type { GroupFieldClientComponent } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { groupHasName } from 'payload/shared'\nimport React, { useMemo } from 'react'\n\nimport { useCollapsible } from '../../elements/Collapsible/provider.js'\nimport { ErrorPill } from '../../elements/ErrorPill/index.js'\nimport { RenderCustomComponent } from '../../elements/RenderCustomComponent/index.js'\nimport { FieldDescription } from '../../fields/FieldDescription/index.js'\nimport { FieldLabel } from '../../fields/FieldLabel/index.js'\nimport { useFormSubmitted } from '../../forms/Form/context.js'\nimport { RenderFields } from '../../forms/RenderFields/index.js'\nimport { useField } from '../../forms/useField/index.js'\nimport { withCondition } from '../../forms/withCondition/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { mergeFieldStyles } from '../mergeFieldStyles.js'\nimport './index.scss'\nimport { useRow } from '../Row/provider.js'\nimport { fieldBaseClass } from '../shared/index.js'\nimport { useTabs } from '../Tabs/provider.js'\nimport { GroupProvider, useGroup } from './provider.js'\n\nconst baseClass = 'group-field'\n\nexport const GroupFieldComponent: GroupFieldClientComponent = (props) => {\n  const {\n    field,\n    field: { admin: { className, description, hideGutter } = {}, fields, label },\n    indexPath,\n    parentPath,\n    parentSchemaPath,\n    path,\n    permissions,\n    readOnly,\n    schemaPath: schemaPathFromProps,\n  } = props\n\n  const schemaPath =\n    schemaPathFromProps ?? (field.type === 'group' && groupHasName(field) ? field.name : path)\n\n  const { i18n } = useTranslation()\n  const { isWithinCollapsible } = useCollapsible()\n  const isWithinGroup = useGroup()\n  const isWithinRow = useRow()\n  const isWithinTab = useTabs()\n\n  const { customComponents: { AfterInput, BeforeInput, Description, Label } = {}, errorPaths } =\n    useField({ path })\n\n  const submitted = useFormSubmitted()\n  const errorCount = errorPaths.length\n  const fieldHasErrors = submitted && errorCount > 0\n\n  const isTopLevel = !(isWithinCollapsible || isWithinGroup || isWithinRow)\n\n  const styles = useMemo(() => mergeFieldStyles(field), [field])\n\n  return (\n    <div\n      className={[\n        fieldBaseClass,\n        baseClass,\n        isTopLevel && `${baseClass}--top-level`,\n        isWithinCollapsible && `${baseClass}--within-collapsible`,\n        isWithinGroup && `${baseClass}--within-group`,\n        isWithinRow && `${baseClass}--within-row`,\n        isWithinTab && `${baseClass}--within-tab`,\n        !hideGutter && isWithinGroup && `${baseClass}--gutter`,\n        fieldHasErrors && `${baseClass}--has-error`,\n        className,\n      ]\n        .filter(Boolean)\n        .join(' ')}\n      id={`field-${path?.replace(/\\./g, '__')}`}\n      style={styles}\n    >\n      <GroupProvider>\n        <div className={`${baseClass}__wrap`}>\n          {Boolean(Label || Description || label || fieldHasErrors) && (\n            <div className={`${baseClass}__header`}>\n              {Boolean(Label || Description || label) && (\n                <header>\n                  <RenderCustomComponent\n                    CustomComponent={Label}\n                    Fallback={\n                      <h3 className={`${baseClass}__title`}>\n                        <FieldLabel\n                          as=\"span\"\n                          label={getTranslation(label, i18n)}\n                          localized={false}\n                          path={path}\n                          required={false}\n                        />\n                      </h3>\n                    }\n                  />\n                  <RenderCustomComponent\n                    CustomComponent={Description}\n                    Fallback={<FieldDescription description={description} path={path} />}\n                  />\n                </header>\n              )}\n              {fieldHasErrors && <ErrorPill count={errorCount} i18n={i18n} withMessage />}\n            </div>\n          )}\n          {BeforeInput}\n          {/* Render an unnamed group differently */}\n          {groupHasName(field) ? (\n            <RenderFields\n              fields={fields}\n              margins=\"small\"\n              parentIndexPath=\"\"\n              parentPath={path}\n              parentSchemaPath={schemaPath}\n              permissions={permissions === true ? permissions : permissions?.fields}\n              readOnly={readOnly}\n            />\n          ) : (\n            <RenderFields\n              fields={fields}\n              margins=\"small\"\n              parentIndexPath={indexPath}\n              parentPath={parentPath}\n              parentSchemaPath={parentSchemaPath}\n              permissions={permissions}\n              readOnly={readOnly}\n            />\n          )}\n        </div>\n      </GroupProvider>\n      {AfterInput}\n    </div>\n  )\n}\n\nexport { GroupProvider, useGroup }\n\nexport const GroupField = withCondition(GroupFieldComponent)\n"],"mappings":"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","ignoreList":[]}