{"version":3,"file":"types.js","names":[],"sources":["../../../src/fields/Textarea/types.ts"],"sourcesContent":["import type { StaticDescription, StaticLabel } from 'payload'\nimport type React from 'react'\n\nimport { type ChangeEvent } from 'react'\n\nexport type TextAreaInputProps = {\n  readonly AfterInput?: React.ReactNode\n  readonly BeforeInput?: React.ReactNode\n  readonly className?: string\n  readonly Description?: React.ReactNode\n  readonly description?: StaticDescription\n  readonly Error?: React.ReactNode\n  readonly inputRef?: React.RefObject<HTMLInputElement>\n  readonly Label?: React.ReactNode\n  readonly label?: StaticLabel\n  readonly localized?: boolean\n  readonly onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void\n  readonly onKeyDown?: React.KeyboardEventHandler<HTMLInputElement>\n  readonly path: string\n  readonly placeholder?: string\n  readonly readOnly?: boolean\n  readonly required?: boolean\n  readonly rows?: number\n  readonly rtl?: boolean\n  readonly showError?: boolean\n  readonly style?: React.CSSProperties\n  readonly value?: string\n  readonly valueToRender?: string\n}\n"],"mappings":"AAKA","ignoreList":[]}