{"version":3,"file":"index.js","names":["c","_c","React","useField","useTranslation","baseClass","SectionTitle","props","$","customOnChange","customValue","path","readOnly","t0","setValue","value","t","t1","Symbol","for","filter","Boolean","classes","join","t2","e","stopPropagation","preventDefault","target","onChange","t3","t4","_jsx","className","children","id","name","placeholder","type"],"sources":["../../../../src/fields/Blocks/SectionTitle/index.tsx"],"sourcesContent":["'use client'\nimport React from 'react'\n\nimport { useField } from '../../../forms/useField/index.js'\nimport { useTranslation } from '../../../providers/Translation/index.js'\nimport './index.scss'\n\nconst baseClass = 'section-title'\n\nexport type Props = {\n  customOnChange?: (e: React.ChangeEvent<HTMLInputElement>) => void\n  customValue?: string\n  path: string\n  readOnly: boolean\n}\n\n/**\n * An input field representing the block's `blockName` property - responsible for reading and saving the `blockName`\n * property from/into the provided path.\n */\nexport const SectionTitle: React.FC<Props> = (props) => {\n  const { customOnChange, customValue, path, readOnly } = props\n\n  const { setValue, value } = useField({ path })\n  const { t } = useTranslation()\n\n  const classes = [baseClass].filter(Boolean).join(' ')\n\n  const onChange =\n    customOnChange ||\n    ((e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      setValue(e.target.value)\n    })\n\n  return (\n    <div className={classes} data-value={customValue || value}>\n      <input\n        className={`${baseClass}__input`}\n        id={path}\n        name={path}\n        onChange={onChange}\n        placeholder={t('general:untitled')}\n        readOnly={readOnly}\n        type=\"text\"\n        value={customValue || (value as string) || ''}\n      />\n    </div>\n  )\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AACA,OAAOC,KAAA,MAAW;AAElB,SAASC,QAAQ,QAAQ;AACzB,SAASC,cAAc,QAAQ;AAC/B,OAAO;AAEP,MAAMC,SAAA,GAAY;AASlB;;;;AAIA,OAAO,MAAMC,YAAA,GAAgCC,KAAA;EAAA,MAAAC,CAAA,GAAAP,EAAA;EAC3C;IAAAQ,cAAA;IAAAC,WAAA;IAAAC,IAAA;IAAAC;EAAA,IAAwDL,KAAA;EAAA,IAAAM,EAAA;EAAA,IAAAL,CAAA,QAAAG,IAAA;IAEnBE,EAAA;MAAAF;IAAA;IAAOH,CAAA,MAAAG,IAAA;IAAAH,CAAA,MAAAK,EAAA;EAAA;IAAAA,EAAA,GAAAL,CAAA;EAAA;EAA5C;IAAAM,QAAA;IAAAC;EAAA,IAA4BZ,QAAA,CAASU,EAAO;EAC5C;IAAAG;EAAA,IAAcZ,cAAA;EAAA,IAAAa,EAAA;EAAA,IAAAT,CAAA,QAAAU,MAAA,CAAAC,GAAA;IAEEF,EAAA,IAAAZ,SAAA,EAAAe,MAAA,CAAAC,OAAmB;IAAAb,CAAA,MAAAS,EAAA;EAAA;IAAAA,EAAA,GAAAT,CAAA;EAAA;EAAnC,MAAAc,OAAA,GAAgBL,EAAmB,CAAAM,IAAA,CAAc;EAAA,IAAAC,EAAA;EAAA,IAAAhB,CAAA,QAAAC,cAAA,IAAAD,CAAA,QAAAM,QAAA;IAG/CU,EAAA,GAAAf,cAAA,KAAAgB,CAAA;MAEEA,CAAA,CAAAC,eAAA,CAAiB;MACjBD,CAAA,CAAAE,cAAA,CAAgB;MAChBb,QAAA,CAASW,CAAA,CAAAG,MAAA,CAAAb,KAAc;IAAA,EACzB;IAAAP,CAAA,MAAAC,cAAA;IAAAD,CAAA,MAAAM,QAAA;IAAAN,CAAA,MAAAgB,EAAA;EAAA;IAAAA,EAAA,GAAAhB,CAAA;EAAA;EANF,MAAAqB,QAAA,GACEL,EAKA;EAGqC,MAAAM,EAAA,GAAApB,WAAA,IAAeK,KAAA;EAAA,IAAAgB,EAAA;EAAA,IAAAvB,CAAA,QAAAE,WAAA,IAAAF,CAAA,QAAAqB,QAAA,IAAArB,CAAA,QAAAG,IAAA,IAAAH,CAAA,QAAAI,QAAA,IAAAJ,CAAA,SAAAQ,CAAA,IAAAR,CAAA,SAAAsB,EAAA,IAAAtB,CAAA,SAAAO,KAAA;IAApDgB,EAAA,GAAAC,IAAA,CAAC;MAAAC,SAAA,EAAeX,OAAA;MAAA,cAAqBQ,EAAe;MAAAI,QAAA,EAClDF,IAAA,CAAC;QAAAC,SAAA,EACY,GAAA5B,SAAA,SAAqB;QAAA8B,EAAA,EAC5BxB,IAAA;QAAAyB,IAAA,EACEzB,IAAA;QAAAkB,QAAA;QAAAQ,WAAA,EAEOrB,CAAA,CAAE;QAAAJ,QAAA;QAAA0B,IAAA,EAEV;QAAAvB,KAAA,EACEL,WAAA,IAAgBK,KAAA,IAAoB;MAAA,C;;;;;;;;;;;;;SAT/CgB,E;CAaJ","ignoreList":[]}