{"version":3,"file":"BlockRow.js","names":["c","_c","getTranslation","React","Collapsible","ErrorPill","Pill","ShimmerEffect","useFormSubmitted","RenderFields","RowLabel","useThrottledValue","useTranslation","RowActions","SectionTitle","baseClass","BlockRow","t0","$","addRow","attributes","block","blocks","copyRow","duplicateRow","errorCount","fields","hasMaxRows","isLoading","isLoadingFromProps","isSortable","Label","labels","listeners","moveRow","parentPath","pasteRow","path","permissions","readOnly","removeRow","row","rowCount","rowIndex","schemaPath","setCollapse","setNodeRef","transform","i18n","hasSubmitted","fieldHasErrors","showBlockName","admin","disableBlockName","t1","t2","filter","Boolean","classNames","join","blockPermissions","permissionsBlockSpecific","slug","t3","split","t4","blockType","collapsed","id","t5","_jsx","ref","style","children","actions","className","collapsibleStyle","dragHandleProps","undefined","header","height","width","_jsxs","CustomComponent","label","_Fragment","String","padStart","pillStyle","size","singular","count","withMessage","onToggle","margins","parentIndexPath","parentSchemaPath"],"sources":["../../../src/fields/Blocks/BlockRow.tsx"],"sourcesContent":["'use client'\nimport type { ClientBlock, ClientField, Labels, Row, SanitizedFieldPermissions } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport React from 'react'\n\nimport type { UseDraggableSortableReturn } from '../../elements/DraggableSortable/useDraggableSortable/types.js'\nimport type { RenderFieldsProps } from '../../forms/RenderFields/types.js'\n\nimport { Collapsible } from '../../elements/Collapsible/index.js'\nimport { ErrorPill } from '../../elements/ErrorPill/index.js'\nimport { Pill } from '../../elements/Pill/index.js'\nimport { ShimmerEffect } from '../../elements/ShimmerEffect/index.js'\nimport { useFormSubmitted } from '../../forms/Form/context.js'\nimport { RenderFields } from '../../forms/RenderFields/index.js'\nimport { RowLabel } from '../../forms/RowLabel/index.js'\nimport { useThrottledValue } from '../../hooks/useThrottledValue.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { RowActions } from './RowActions.js'\nimport { SectionTitle } from './SectionTitle/index.js'\n\nconst baseClass = 'blocks-field'\n\ntype BlocksFieldProps = {\n  addRow: (rowIndex: number, blockType: string) => Promise<void> | void\n  block: ClientBlock\n  blocks: (ClientBlock | string)[] | ClientBlock[]\n  copyRow: (rowIndex: number) => void\n  duplicateRow: (rowIndex: number) => void\n  errorCount: number\n  fields: ClientField[]\n  hasMaxRows?: boolean\n  isLoading?: boolean\n  isSortable?: boolean\n  Label?: React.ReactNode\n  labels: Labels\n  moveRow: (fromIndex: number, toIndex: number) => void\n  parentPath: string\n  pasteRow: (rowIndex: number) => void\n  path: string\n  permissions: SanitizedFieldPermissions\n  readOnly: boolean\n  removeRow: (rowIndex: number) => void\n  row: Row\n  rowCount: number\n  rowIndex: number\n  schemaPath: string\n  setCollapse: (id: string, collapsed: boolean) => void\n} & UseDraggableSortableReturn\n\nexport const BlockRow: React.FC<BlocksFieldProps> = ({\n  addRow,\n  attributes,\n  block,\n  blocks,\n  copyRow,\n  duplicateRow,\n  errorCount,\n  fields,\n  hasMaxRows,\n  isLoading: isLoadingFromProps,\n  isSortable,\n  Label,\n  labels,\n  listeners,\n  moveRow,\n  parentPath,\n  pasteRow,\n  path,\n  permissions,\n  readOnly,\n  removeRow,\n  row,\n  rowCount,\n  rowIndex,\n  schemaPath,\n  setCollapse,\n  setNodeRef,\n  transform,\n}) => {\n  const isLoading = useThrottledValue(isLoadingFromProps, 500)\n\n  const { i18n } = useTranslation()\n  const hasSubmitted = useFormSubmitted()\n\n  const fieldHasErrors = hasSubmitted && errorCount > 0\n\n  const showBlockName = !block.admin?.disableBlockName\n\n  const classNames = [\n    `${baseClass}__row`,\n    fieldHasErrors ? `${baseClass}__row--has-errors` : `${baseClass}__row--no-errors`,\n  ]\n    .filter(Boolean)\n    .join(' ')\n\n  let blockPermissions: RenderFieldsProps['permissions'] = undefined\n\n  if (permissions === true) {\n    blockPermissions = true\n  } else {\n    const permissionsBlockSpecific = permissions?.blocks?.[block.slug]\n    if (permissionsBlockSpecific === true) {\n      blockPermissions = true\n    } else {\n      blockPermissions = permissionsBlockSpecific?.fields\n    }\n  }\n\n  return (\n    <div\n      id={`${parentPath?.split('.').join('-')}-row-${rowIndex}`}\n      key={`${parentPath}-row-${rowIndex}`}\n      ref={setNodeRef}\n      style={{\n        transform,\n      }}\n    >\n      <Collapsible\n        actions={\n          !readOnly ? (\n            <RowActions\n              addRow={addRow}\n              blocks={blocks}\n              blockType={row.blockType}\n              copyRow={copyRow}\n              duplicateRow={duplicateRow}\n              fields={block.fields}\n              hasMaxRows={hasMaxRows}\n              isSortable={isSortable}\n              labels={labels}\n              moveRow={moveRow}\n              pasteRow={pasteRow}\n              removeRow={removeRow}\n              rowCount={rowCount}\n              rowIndex={rowIndex}\n            />\n          ) : undefined\n        }\n        className={classNames}\n        collapsibleStyle={fieldHasErrors ? 'error' : 'default'}\n        dragHandleProps={\n          isSortable\n            ? {\n                id: row.id,\n                attributes,\n                listeners,\n              }\n            : undefined\n        }\n        header={\n          isLoading ? (\n            <ShimmerEffect height=\"1rem\" width=\"8rem\" />\n          ) : (\n            <div className={`${baseClass}__block-header`}>\n              <RowLabel\n                CustomComponent={Label}\n                label={\n                  <>\n                    <span className={`${baseClass}__block-number`}>\n                      {String(rowIndex + 1).padStart(2, '0')}\n                    </span>\n                    <Pill\n                      className={`${baseClass}__block-pill ${baseClass}__block-pill-${row.blockType}`}\n                      pillStyle=\"white\"\n                      size=\"small\"\n                    >\n                      {getTranslation(block.labels.singular, i18n)}\n                    </Pill>\n                    {showBlockName && (\n                      <SectionTitle path={`${path}.blockName`} readOnly={readOnly} />\n                    )}\n                  </>\n                }\n                path={path}\n                rowNumber={rowIndex}\n              />\n              {fieldHasErrors && <ErrorPill count={errorCount} i18n={i18n} withMessage />}\n            </div>\n          )\n        }\n        isCollapsed={row.collapsed}\n        key={row.id}\n        onToggle={(collapsed) => setCollapse(row.id, collapsed)}\n      >\n        {isLoading ? (\n          <ShimmerEffect />\n        ) : (\n          <RenderFields\n            className={`${baseClass}__fields`}\n            fields={fields}\n            margins=\"small\"\n            parentIndexPath=\"\"\n            parentPath={path}\n            parentSchemaPath={schemaPath}\n            permissions={blockPermissions}\n            readOnly={readOnly}\n          />\n        )}\n      </Collapsible>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}