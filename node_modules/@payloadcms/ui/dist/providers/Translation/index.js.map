{"version":3,"file":"index.js","names":["c","_c","importDateFNSLocale","t","enUS","useRouter","React","createContext","use","useEffect","useState","Context","i18n","dateFNS","dateFNSKey","fallbackLanguage","language","key","translations","languageOptions","undefined","switchLanguage","TranslationProvider","t0","$","children","fallbackLang","switchLanguageServerAction","router","setDateFNS","t1","vars","nextT","t2","lang","refresh","t3","error","console","t4","loadDateFNS","imported","t5","_jsx","value","useTranslation"],"sources":["../../../src/providers/Translation/index.tsx"],"sourcesContent":["'use client'\nimport type {\n  AcceptedLanguages,\n  ClientTranslationKeys,\n  ClientTranslationsObject,\n  I18nClient,\n  I18nOptions,\n  Language,\n  TFunction,\n} from '@payloadcms/translations'\nimport type { Locale } from 'date-fns'\nimport type { LanguageOptions } from 'payload'\n\nimport { importDateFNSLocale, t } from '@payloadcms/translations'\nimport { enUS } from 'date-fns/locale/en-US'\nimport { useRouter } from 'next/navigation.js'\nimport React, { createContext, use, useEffect, useState } from 'react'\n\ntype ContextType<\n  TAdditionalTranslations = {},\n  TAdditionalClientTranslationKeys extends string = never,\n> = {\n  i18n: [TAdditionalClientTranslationKeys] extends [never]\n    ? I18nClient\n    : TAdditionalTranslations extends object\n      ? I18nClient<TAdditionalTranslations, TAdditionalClientTranslationKeys>\n      : I18nClient<ClientTranslationsObject, TAdditionalClientTranslationKeys>\n  languageOptions: LanguageOptions\n  switchLanguage?: (lang: AcceptedLanguages) => Promise<void>\n  t: TFunction<ClientTranslationKeys | Extract<TAdditionalClientTranslationKeys, string>>\n}\n\nconst Context = createContext<ContextType<any, any>>({\n  // Use `any` here to be replaced later with a more specific type when used\n  i18n: {\n    dateFNS: enUS,\n    dateFNSKey: 'en-US',\n    fallbackLanguage: 'en',\n    language: 'en',\n    t: (key) => key,\n    translations: {} as any,\n  },\n  languageOptions: undefined,\n  switchLanguage: undefined,\n  t: (key) => undefined,\n})\n\ntype Props = {\n  children: React.ReactNode\n  dateFNSKey: Language['dateFNSKey']\n  fallbackLang: I18nOptions['fallbackLanguage']\n  language: string\n  languageOptions: LanguageOptions\n  switchLanguageServerAction: (lang: string) => Promise<void>\n  translations: I18nClient['translations']\n}\n\nexport const TranslationProvider: React.FC<Props> = ({\n  children,\n  dateFNSKey,\n  fallbackLang,\n  language,\n  languageOptions,\n  switchLanguageServerAction,\n  translations,\n}) => {\n  const router = useRouter()\n  const [dateFNS, setDateFNS] = useState<Locale>()\n\n  const nextT: ContextType['t'] = React.useCallback(\n    (key, vars): string =>\n      t({\n        key,\n        translations,\n        vars,\n      }),\n    [translations],\n  )\n\n  const switchLanguage = React.useCallback(\n    async (lang: string) => {\n      try {\n        await switchLanguageServerAction(lang)\n        router.refresh()\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error(`Error loading language: \"${lang}\"`, error)\n      }\n    },\n    [switchLanguageServerAction, router],\n  )\n\n  useEffect(() => {\n    const loadDateFNS = async () => {\n      const imported = await importDateFNSLocale(dateFNSKey)\n\n      setDateFNS(imported)\n    }\n\n    void loadDateFNS()\n  }, [dateFNSKey])\n\n  return (\n    <Context\n      value={{\n        i18n: {\n          dateFNS,\n          dateFNSKey,\n          fallbackLanguage: fallbackLang,\n          language,\n          t: nextT,\n          translations,\n        },\n        languageOptions,\n        switchLanguage,\n        t: nextT,\n      }}\n    >\n      {children}\n    </Context>\n  )\n}\n\nexport const useTranslation = <\n  TAdditionalTranslations = {},\n  TAdditionalClientTranslationKeys extends string = never,\n>() => use<ContextType<TAdditionalTranslations, TAdditionalClientTranslationKeys>>(Context)\n"],"mappings":"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","ignoreList":[]}