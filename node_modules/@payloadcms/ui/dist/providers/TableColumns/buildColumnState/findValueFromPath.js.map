{"version":3,"file":"findValueFromPath.js","names":["findValueFromPath","doc","path","split","reduce","acc","key"],"sources":["../../../../src/providers/TableColumns/buildColumnState/findValueFromPath.ts"],"sourcesContent":["/**\n * Safely resolves a deeply nested value from a document using dot-notation accessor paths.\n *\n * Used in list views to retrieve field values, especially for fields hoisted from nested structures\n * like groups, where the accessor may be in the form of `group.someField`.\n *\n * @param doc - The document object to retrieve the value from.\n * @param path - A dot-separated accessor string (e.g., \"group.someField\").\n * @returns The resolved value at the specified path, or undefined if any segment is missing.\n */\nexport const findValueFromPath = (doc: Record<string, any>, path: string): any => {\n  return path.split('.').reduce((acc, key) => acc?.[key], doc)\n}\n"],"mappings":"AAAA;;;;;;;;;GAUA,OAAO,MAAMA,iBAAA,GAAoBA,CAACC,GAAA,EAA0BC,IAAA;EAC1D,OAAOA,IAAA,CAAKC,KAAK,CAAC,KAAKC,MAAM,CAAC,CAACC,GAAA,EAAKC,GAAA,KAAQD,GAAA,GAAMC,GAAA,CAAI,EAAEL,GAAA;AAC1D","ignoreList":[]}