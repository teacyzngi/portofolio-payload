{"version":3,"file":"types.js","names":[],"sources":["../../../src/providers/TableColumns/types.ts"],"sourcesContent":["import type { CollectionPreferences, Column } from 'payload'\n\nimport type { SortColumnProps } from '../../elements/SortColumn/index.js'\n\nexport interface ITableColumns {\n  columns: Column[]\n  LinkedCellOverride?: React.ReactNode\n  moveColumn: (args: { fromIndex: number; toIndex: number }) => Promise<void>\n  resetColumnsState: () => Promise<void>\n  setActiveColumns: (columns: string[]) => Promise<void>\n  toggleColumn: (column: string) => Promise<void>\n}\n\nexport type TableColumnsProviderProps = {\n  readonly children: React.ReactNode\n  readonly collectionSlug: string | string[]\n  readonly columnState: Column[]\n  /**\n   * @deprecated\n   */\n  readonly docs?: any[]\n  /**\n   * @deprecated\n   */\n  readonly enableRowSelections?: boolean\n  readonly LinkedCellOverride?: React.ReactNode\n  /**\n   * @deprecated\n   */\n  readonly listPreferences?: CollectionPreferences\n  /**\n   * @deprecated\n   */\n  readonly preferenceKey?: string\n  /**\n   * @deprecated\n   */\n  readonly renderRowTypes?: boolean\n  /**\n   * @deprecated\n   */\n  readonly setTable?: (Table: React.ReactNode) => void\n  /**\n   * @deprecated\n   */\n  readonly sortColumnProps?: Partial<SortColumnProps>\n  /**\n   * @deprecated\n   */\n  readonly tableAppearance?: 'condensed' | 'default'\n}\n"],"mappings":"AAaA","ignoreList":[]}