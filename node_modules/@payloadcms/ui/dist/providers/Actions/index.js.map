{"version":3,"file":"index.js","names":["c","_c","React","createContext","use","useState","ActionsContext","Actions","setViewActions","useActions","ActionsProvider","t0","$","children","viewActions","t1","_jsx","value"],"sources":["../../../src/providers/Actions/index.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, use, useState } from 'react'\n\ntype ActionsContextType = {\n  Actions: {\n    [key: string]: React.ReactNode\n  }\n  setViewActions: (actions: ActionsContextType['Actions']) => void\n}\n\nconst ActionsContext = createContext<ActionsContextType>({\n  Actions: {},\n  setViewActions: () => {},\n})\n\nexport const useActions = () => use(ActionsContext)\n\nexport const ActionsProvider: React.FC<{\n  readonly Actions?: {\n    [key: string]: React.ReactNode\n  }\n  readonly children: React.ReactNode\n}> = ({ Actions, children }) => {\n  const [viewActions, setViewActions] = useState(Actions)\n\n  return (\n    <ActionsContext\n      value={{\n        Actions: {\n          ...viewActions,\n          ...Actions,\n        },\n        setViewActions,\n      }}\n    >\n      {children}\n    </ActionsContext>\n  )\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AAEA,OAAOC,KAAA,IAASC,aAAa,EAAEC,GAAG,EAAEC,QAAQ,QAAQ;AASpD,MAAMC,cAAA,gBAAiBH,aAAA,CAAkC;EACvDI,OAAA,EAAS,CAAC;EACVC,cAAA,EAAgBA,CAAA,MAAO;AACzB;AAEA,OAAO,MAAMC,UAAA,GAAaA,CAAA,KAAML,GAAA,CAAIE,cAAA;AAEpC,OAAO,MAAMI,eAAA,GAKRC,EAAA;EAAA,MAAAC,CAAA,GAAAX,EAAA;EAAC;IAAAM,OAAA;IAAAM;EAAA,IAAAF,EAAqB;EACzB,OAAAG,WAAA,EAAAN,cAAA,IAAsCH,QAAA,CAASE,OAAA;EAAA,IAAAQ,EAAA;EAAA,IAAAH,CAAA,QAAAL,OAAA,IAAAK,CAAA,QAAAC,QAAA,IAAAD,CAAA,QAAAE,WAAA;IAG7CC,EAAA,GAAAC,IAAA,CAAAV,cAAA;MAAAW,KAAA;QAAAV,OAAA;UAAA,GAGSO,WAAW;UAAA,GACXP;QAAO;QAAAC;MAAA;MAAAK;IAAA,C;;;;;;;;SAJhBE,E;CAYJ","ignoreList":[]}