{"version":3,"file":"types.js","names":["React","DocumentTitleContext","createContext"],"sources":["../../../src/providers/DocumentInfo/types.ts"],"sourcesContent":["import type {\n  ClientCollectionConfig,\n  ClientGlobalConfig,\n  ClientUser,\n  Data,\n  DocumentPreferences,\n  FormState,\n  InsideFieldsPreferences,\n  SanitizedCollectionConfig,\n  SanitizedDocumentPermissions,\n  SanitizedGlobalConfig,\n  TypedUser,\n} from 'payload'\n\nimport React from 'react'\n\nimport type { GetDocPermissions } from './useGetDocPermissions.js'\n\nexport type DocumentInfoProps = {\n  readonly action?: string\n  readonly AfterDocument?: React.ReactNode\n  readonly AfterFields?: React.ReactNode\n  readonly apiURL?: string\n  readonly BeforeFields?: React.ReactNode\n  readonly collectionSlug?: SanitizedCollectionConfig['slug']\n  readonly currentEditor: TypedUser\n  readonly disableActions?: boolean\n  readonly disableCreate?: boolean\n  readonly disableLeaveWithoutSaving?: boolean\n  readonly docPermissions?: SanitizedDocumentPermissions\n  readonly globalSlug?: SanitizedGlobalConfig['slug']\n  readonly hasPublishedDoc: boolean\n  readonly hasPublishPermission?: boolean\n  readonly hasSavePermission?: boolean\n  readonly id?: number | string\n  readonly initialData?: Data\n  readonly initialState?: FormState\n  readonly isEditing?: boolean\n  readonly isLocked: boolean\n  readonly isTrashed?: boolean\n  readonly lastUpdateTime: number\n  readonly mostRecentVersionIsAutosaved: boolean\n  readonly redirectAfterCreate?: boolean\n  readonly redirectAfterDelete?: boolean\n  readonly redirectAfterDuplicate?: boolean\n  readonly redirectAfterRestore?: boolean\n  readonly unpublishedVersionCount: number\n  readonly Upload?: React.ReactNode\n  readonly versionCount: number\n}\n\nexport type DocumentInfoContext = {\n  currentEditor?: ClientUser | null | number | string\n  data?: Data\n  docConfig?: ClientCollectionConfig | ClientGlobalConfig\n  documentIsLocked?: boolean\n  documentLockState: React.RefObject<{\n    hasShownLockedModal: boolean\n    isLocked: boolean\n    user: ClientUser | number | string\n  } | null>\n  getDocPermissions: GetDocPermissions\n  getDocPreferences: () => Promise<DocumentPreferences>\n  incrementVersionCount: () => void\n  isInitializing: boolean\n  preferencesKey?: string\n  /**\n   * @deprecated This property is deprecated and will be removed in v4.\n   * Use `data` instead.\n   */\n  savedDocumentData?: Data\n  setCurrentEditor?: React.Dispatch<React.SetStateAction<ClientUser>>\n  setData: (data: Data) => void\n  setDocFieldPreferences: (\n    field: string,\n    fieldPreferences: { [key: string]: unknown } & Partial<InsideFieldsPreferences>,\n  ) => void\n  setDocumentIsLocked?: React.Dispatch<React.SetStateAction<boolean>>\n  /**\n   * @deprecated This property is deprecated and will be removed in v4.\n   * This is for performance reasons. Use the `DocumentTitleContext` instead\n   * via the `useDocumentTitle` hook.\n   * @example\n   * ```tsx\n   * import { useDocumentTitle } from '@payloadcms/ui'\n   * const { setDocumentTitle } = useDocumentTitle()\n   * ```\n   */\n  setDocumentTitle: React.Dispatch<React.SetStateAction<string>>\n  setHasPublishedDoc: React.Dispatch<React.SetStateAction<boolean>>\n  setLastUpdateTime: React.Dispatch<React.SetStateAction<number>>\n  setMostRecentVersionIsAutosaved: React.Dispatch<React.SetStateAction<boolean>>\n  setUnpublishedVersionCount: React.Dispatch<React.SetStateAction<number>>\n  setUploadStatus?: (status: 'failed' | 'idle' | 'uploading') => void\n  /**\n   * @deprecated This property is deprecated and will be removed in v4.\n   * This is for performance reasons. Use the `DocumentTitleContext` instead\n   * via the `useDocumentTitle` hook.\n   * @example\n   * ```tsx\n   * import { useDocumentTitle } from '@payloadcms/ui'\n   * const { title } = useDocumentTitle()\n   * ```\n   */\n  title: string\n  unlockDocument: (docID: number | string, slug: string) => Promise<void>\n  unpublishedVersionCount: number\n  updateDocumentEditor: (docID: number | string, slug: string, user: ClientUser) => Promise<void>\n  /**\n   * @deprecated This property is deprecated and will be removed in v4.\n   * Use `setData` instead.\n   */\n  updateSavedDocumentData: (data: Data) => void\n  uploadStatus?: 'failed' | 'idle' | 'uploading'\n  versionCount: number\n} & DocumentInfoProps\n\nexport const DocumentTitleContext = React.createContext<string>('')\n"],"mappings":"AAcA,OAAOA,KAAA,MAAW;AAuGlB,OAAO,MAAMC,oBAAA,GAAuBD,KAAA,CAAME,aAAa,CAAS","ignoreList":[]}