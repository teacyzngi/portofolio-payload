{"version":3,"file":"index.js","names":["useRouter","useSearchParams","qs","React","useCallback","useEffect","useMemo","useRef","useState","useListDrawerContext","useEffectEvent","useRouteTransition","parseSearchParams","useConfig","ListQueryContext","ListQueryModifiedContext","mergeQuery","sanitizeQuery","useListQuery","ListQueryProvider","children","collectionSlug","data","modifySearchParams","onQueryChange","onQueryChangeFromProps","orderableFieldName","query","queryFromProps","router","rawSearchParams","startRouteTransition","modified","setModified","getEntityConfig","collectionConfig","searchParams","contextRef","current","setQuery","limit","sort","refineListData","incomingQuery","undefined","newQuery","defaults","replace","stringify","columns","JSON","queryByGroup","addQueryPrefix","onChangeFn","handlePageChange","arg","page","handlePerPageChange","handleSearchChange","search","handleSortChange","handleWhereChange","where","mergeQueryFromPropsAndSyncToURL","window","location","history","replaceState","_jsx","value","isGroupingBy","Boolean","admin","groupBy"],"sources":["../../../src/providers/ListQuery/index.tsx"],"sourcesContent":["'use client'\nimport { useRouter, useSearchParams } from 'next/navigation.js'\nimport { type ListQuery, type Where } from 'payload'\nimport * as qs from 'qs-esm'\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\n\nimport type { IListQueryContext, ListQueryProps } from './types.js'\n\nimport { useListDrawerContext } from '../../elements/ListDrawer/Provider.js'\nimport { useEffectEvent } from '../../hooks/useEffectEvent.js'\nimport { useRouteTransition } from '../../providers/RouteTransition/index.js'\nimport { parseSearchParams } from '../../utilities/parseSearchParams.js'\nimport { useConfig } from '../Config/index.js'\nimport { ListQueryContext, ListQueryModifiedContext } from './context.js'\nimport { mergeQuery } from './mergeQuery.js'\nimport { sanitizeQuery } from './sanitizeQuery.js'\n\nexport { useListQuery } from './context.js'\n\nexport const ListQueryProvider: React.FC<ListQueryProps> = ({\n  children,\n  collectionSlug,\n  data,\n  modifySearchParams,\n  onQueryChange: onQueryChangeFromProps,\n  orderableFieldName,\n  query: queryFromProps,\n}) => {\n  // TODO: Investigate if this is still needed\n  'use no memo'\n  // TODO: Investigate if this is still needed\n\n  const router = useRouter()\n  const rawSearchParams = useSearchParams()\n  const { startRouteTransition } = useRouteTransition()\n  const [modified, setModified] = useState(false)\n  const { getEntityConfig } = useConfig()\n  const collectionConfig = getEntityConfig({ collectionSlug })\n\n  const searchParams = useMemo<ListQuery>(\n    () => sanitizeQuery(parseSearchParams(rawSearchParams)),\n    [rawSearchParams],\n  )\n\n  const contextRef = useRef({} as IListQueryContext)\n\n  contextRef.current.modified = modified\n\n  const { onQueryChange } = useListDrawerContext()\n\n  const [query, setQuery] = useState<ListQuery>(() => {\n    if (modifySearchParams) {\n      return searchParams\n    } else {\n      return {\n        limit: queryFromProps.limit,\n        sort: queryFromProps.sort,\n      }\n    }\n  })\n\n  const refineListData = useCallback(\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async (incomingQuery: ListQuery, modified?: boolean) => {\n      if (modified !== undefined) {\n        setModified(modified)\n      } else {\n        setModified(true)\n      }\n\n      const newQuery = mergeQuery(query, incomingQuery, {\n        defaults: {\n          limit: queryFromProps.limit,\n          sort: queryFromProps.sort,\n        },\n      })\n\n      if (modifySearchParams) {\n        startRouteTransition(() =>\n          router.replace(\n            `${qs.stringify(\n              {\n                ...newQuery,\n                columns: JSON.stringify(newQuery.columns),\n                queryByGroup: JSON.stringify(newQuery.queryByGroup),\n              },\n              { addQueryPrefix: true },\n            )}`,\n          ),\n        )\n      } else if (\n        typeof onQueryChange === 'function' ||\n        typeof onQueryChangeFromProps === 'function'\n      ) {\n        const onChangeFn = onQueryChange || onQueryChangeFromProps\n        onChangeFn(newQuery)\n      }\n\n      setQuery(newQuery)\n    },\n    [\n      query,\n      queryFromProps.limit,\n      queryFromProps.sort,\n      modifySearchParams,\n      onQueryChange,\n      onQueryChangeFromProps,\n      startRouteTransition,\n      router,\n    ],\n  )\n\n  const handlePageChange = useCallback(\n    async (arg: number) => {\n      await refineListData({ page: arg })\n    },\n    [refineListData],\n  )\n\n  const handlePerPageChange = React.useCallback(\n    async (arg: number) => {\n      await refineListData({ limit: arg, page: 1 })\n    },\n    [refineListData],\n  )\n\n  const handleSearchChange = useCallback(\n    async (arg: string) => {\n      const search = arg === '' ? undefined : arg\n      await refineListData({ search })\n    },\n    [refineListData],\n  )\n\n  const handleSortChange = useCallback(\n    async (sort: string) => {\n      await refineListData({ sort })\n    },\n    [refineListData],\n  )\n\n  const handleWhereChange = useCallback(\n    async (where: Where) => {\n      await refineListData({ where })\n    },\n    [refineListData],\n  )\n\n  const mergeQueryFromPropsAndSyncToURL = useEffectEvent(() => {\n    const newQuery = sanitizeQuery({ ...(query || {}), ...(queryFromProps || {}) })\n\n    const search = `?${qs.stringify({\n      ...newQuery,\n      columns: JSON.stringify(newQuery.columns),\n      queryByGroup: JSON.stringify(newQuery.queryByGroup),\n    })}`\n\n    if (window.location.search !== search) {\n      setQuery(newQuery)\n\n      // Important: do not use router.replace here to avoid re-rendering on initial load\n      window.history.replaceState(null, '', search)\n    }\n  })\n\n  // If `query` is updated externally, update the local state\n  // E.g. when HMR runs, these properties may be different\n  useEffect(() => {\n    if (modifySearchParams) {\n      mergeQueryFromPropsAndSyncToURL()\n    }\n  }, [modifySearchParams, queryFromProps])\n\n  return (\n    <ListQueryContext\n      value={{\n        collectionSlug,\n        data,\n        handlePageChange,\n        handlePerPageChange,\n        handleSearchChange,\n        handleSortChange,\n        handleWhereChange,\n        isGroupingBy: Boolean(collectionConfig?.admin?.groupBy && query?.groupBy),\n        orderableFieldName,\n        query,\n        refineListData,\n        setModified,\n        ...contextRef.current,\n      }}\n    >\n      <ListQueryModifiedContext value={modified}>{children}</ListQueryModifiedContext>\n    </ListQueryContext>\n  )\n}\n"],"mappings":"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","ignoreList":[]}