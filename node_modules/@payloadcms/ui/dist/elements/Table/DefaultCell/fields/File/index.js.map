{"version":3,"file":"index.js","names":["getBestFitFromSizes","isImage","React","Thumbnail","baseClass","FileCell","cellData","filename","collectionConfig","field","rowData","fieldPreviewAllowed","displayPreview","undefined","previewAllowed","upload","isFileImage","mimeType","fileSrc","thumbnailURL","url","sizes","width","_jsxs","className","_jsx","collectionSlug","slug","doc","size","uploadConfig","String","_Fragment"],"sources":["../../../../../../src/elements/Table/DefaultCell/fields/File/index.tsx"],"sourcesContent":["'use client'\nimport type {\n  ClientCollectionConfig,\n  DefaultCellComponentProps,\n  TextFieldClient,\n  UploadFieldClient,\n} from 'payload'\n\nimport { getBestFitFromSizes, isImage } from 'payload/shared'\nimport React from 'react'\n\nimport './index.scss'\nimport { Thumbnail } from '../../../../Thumbnail/index.js'\n\nconst baseClass = 'file'\n\nexport interface FileCellProps\n  extends DefaultCellComponentProps<TextFieldClient | UploadFieldClient> {\n  readonly collectionConfig: ClientCollectionConfig\n}\n\nexport const FileCell: React.FC<FileCellProps> = ({\n  cellData: filename,\n  collectionConfig,\n  field,\n  rowData,\n}) => {\n  const fieldPreviewAllowed = 'displayPreview' in field ? field.displayPreview : undefined\n  const previewAllowed = fieldPreviewAllowed ?? collectionConfig.upload?.displayPreview ?? true\n\n  if (previewAllowed) {\n    const isFileImage = isImage(rowData?.mimeType)\n    let fileSrc: string | undefined = isFileImage\n      ? rowData?.thumbnailURL || rowData?.url\n      : rowData?.thumbnailURL\n\n    if (isFileImage) {\n      fileSrc = getBestFitFromSizes({\n        sizes: rowData?.sizes,\n        thumbnailURL: rowData?.thumbnailURL,\n        url: rowData?.url,\n        width: rowData?.width,\n      })\n    }\n\n    return (\n      <div className={baseClass}>\n        <Thumbnail\n          className={`${baseClass}__thumbnail`}\n          collectionSlug={collectionConfig?.slug}\n          doc={{\n            ...rowData,\n            filename,\n          }}\n          fileSrc={fileSrc}\n          size=\"small\"\n          uploadConfig={collectionConfig?.upload}\n        />\n        <span className={`${baseClass}__filename`}>{String(filename)}</span>\n      </div>\n    )\n  } else {\n    return <>{String(filename)}</>\n  }\n}\n"],"mappings":"AAAA;;;AAQA,SAASA,mBAAmB,EAAEC,OAAO,QAAQ;AAC7C,OAAOC,KAAA,MAAW;AAElB,OAAO;AACP,SAASC,SAAS,QAAQ;AAE1B,MAAMC,SAAA,GAAY;AAOlB,OAAO,MAAMC,QAAA,GAAoCA,CAAC;EAChDC,QAAA,EAAUC,QAAQ;EAClBC,gBAAgB;EAChBC,KAAK;EACLC;AAAO,CACR;EACC,MAAMC,mBAAA,GAAsB,oBAAoBF,KAAA,GAAQA,KAAA,CAAMG,cAAc,GAAGC,SAAA;EAC/E,MAAMC,cAAA,GAAiBH,mBAAA,IAAuBH,gBAAA,CAAiBO,MAAM,EAAEH,cAAA,IAAkB;EAEzF,IAAIE,cAAA,EAAgB;IAClB,MAAME,WAAA,GAAcf,OAAA,CAAQS,OAAA,EAASO,QAAA;IACrC,IAAIC,OAAA,GAA8BF,WAAA,GAC9BN,OAAA,EAASS,YAAA,IAAgBT,OAAA,EAASU,GAAA,GAClCV,OAAA,EAASS,YAAA;IAEb,IAAIH,WAAA,EAAa;MACfE,OAAA,GAAUlB,mBAAA,CAAoB;QAC5BqB,KAAA,EAAOX,OAAA,EAASW,KAAA;QAChBF,YAAA,EAAcT,OAAA,EAASS,YAAA;QACvBC,GAAA,EAAKV,OAAA,EAASU,GAAA;QACdE,KAAA,EAAOZ,OAAA,EAASY;MAClB;IACF;IAEA,oBACEC,KAAA,CAAC;MAAIC,SAAA,EAAWpB,SAAA;8BACdqB,IAAA,CAACtB,SAAA;QACCqB,SAAA,EAAW,GAAGpB,SAAA,aAAsB;QACpCsB,cAAA,EAAgBlB,gBAAA,EAAkBmB,IAAA;QAClCC,GAAA,EAAK;UACH,GAAGlB,OAAO;UACVH;QACF;QACAW,OAAA,EAASA,OAAA;QACTW,IAAA,EAAK;QACLC,YAAA,EAActB,gBAAA,EAAkBO;uBAElCU,IAAA,CAAC;QAAKD,SAAA,EAAW,GAAGpB,SAAA,YAAqB;kBAAG2B,MAAA,CAAOxB,QAAA;;;EAGzD,OAAO;IACL,oBAAOkB,IAAA,CAAAO,SAAA;gBAAGD,MAAA,CAAOxB,QAAA;;EACnB;AACF","ignoreList":[]}