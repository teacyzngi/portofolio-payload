{"version":3,"file":"index.js","names":["React","useConfig","useTranslation","formatDate","DateCell","t0","cellData","field","t1","admin","t2","date","undefined","config","t3","t4","dateFormat","dateFormatFromRoot","displayFormat","i18n","_jsx","children","pattern"],"sources":["../../../../../../src/elements/Table/DefaultCell/fields/Date/index.tsx"],"sourcesContent":["'use client'\nimport type { DateFieldClient, DefaultCellComponentProps } from 'payload'\n\nimport React from 'react'\n\nimport { useConfig } from '../../../../../providers/Config/index.js'\nimport { useTranslation } from '../../../../../providers/Translation/index.js'\nimport { formatDate } from '../../../../../utilities/formatDocTitle/formatDateTitle.js'\n\nexport const DateCell: React.FC<DefaultCellComponentProps<DateFieldClient>> = ({\n  cellData,\n  field: { admin: { date } = {} },\n}) => {\n  const {\n    config: {\n      admin: { dateFormat: dateFormatFromRoot },\n    },\n  } = useConfig()\n\n  const dateFormat = date?.displayFormat || dateFormatFromRoot\n\n  const { i18n } = useTranslation()\n\n  return <span>{cellData && formatDate({ date: cellData, i18n, pattern: dateFormat })}</span>\n}\n"],"mappings":"AAAA;;;AAGA,OAAOA,KAAA,MAAW;AAElB,SAASC,SAAS,QAAQ;AAC1B,SAASC,cAAc,QAAQ;AAC/B,SAASC,UAAU,QAAQ;AAE3B,OAAO,MAAMC,QAAA,GAAiEC,EAAA;EAAC;IAAAC,QAAA;IAAAC,KAAA,EAAAC;EAAA,IAAAH,EAG9E;EADQ;IAAAI,KAAA,EAAAC;EAAA,IAAAF,EAAwB;EAAf;IAAAG;EAAA,IAAAD,EAAa,KAAAE,SAAA,QAAbF,EAAa;EAE7B;IAAAG,MAAA,EAAAC;EAAA,IAIIb,SAAA;EAHM;IAAAQ,KAAA,EAAAM;EAAA,IAAAD,EAEP;EADQ;IAAAE,UAAA,EAAAC;EAAA,IAAAF,EAAkC;EAI7C,MAAAC,UAAA,GAAmBL,IAAA,EAAAO,aAAA,IAAuBD,kBAAA;EAE1C;IAAAE;EAAA,IAAiBjB,cAAA;EAAA,OAEVkB,IAAA,CAAC;IAAAC,QAAA,EAAMf,QAAA,IAAYH,UAAA;MAAAQ,IAAA,EAAmBL,QAAA;MAAAa,IAAA;MAAAG,OAAA,EAAyBN;IAAA,CAAW;EAAA,C;CACnF","ignoreList":[]}