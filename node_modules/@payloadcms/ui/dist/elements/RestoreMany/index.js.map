{"version":3,"file":"index.js","names":["useModal","getTranslation","useRouter","useSearchParams","mergeListSearchAndWhere","qs","React","toast","CheckboxInput","useAuth","useConfig","useLocale","useRouteCache","SelectAllStatus","useSelection","useTranslation","requests","parseSearchParams","ConfirmationModal","ListSelectionButton","confirmManyRestoreDrawerSlug","baseClass","RestoreMany","props","collection","slug","viewType","permissions","config","collections","routes","serverURL","code","locale","router","clearRouteCache","searchParams","count","getSelectedIds","selectAll","toggleAll","openModal","i18n","t","restoreAsPublished","setRestoreAsPublished","useState","collectionPermissions","hasUpdatePermission","update","None","selectingAll","AllAvailable","selectedIDs","baseWhere","where","finalWhere","and","Array","isArray","deletedAt","exists","handleRestore","collectionConfig","find","c","whereConstraint","id","in","url","api","stringify","limit","trash","search","addQueryPrefix","body","versions","drafts","_status","restoreManyResponse","patch","JSON","headers","language","plural","singular","labels","json","restoredDocs","docs","length","successLabel","status","success","label","errors","error","message","description","map","e","join","err","replace","page","undefined","s","labelString","_jsxs","Fragment","_jsx","className","onClick","checked","name","onToggle","target","confirmingLabel","heading","modalSlug","onConfirm"],"sources":["../../../src/elements/RestoreMany/index.tsx"],"sourcesContent":["'use client'\nimport type { ClientCollectionConfig, ViewTypes, Where } from 'payload'\n\nimport { useModal } from '@faceless-ui/modal'\nimport { getTranslation } from '@payloadcms/translations'\nimport { useRouter, useSearchParams } from 'next/navigation.js'\nimport { mergeListSearchAndWhere } from 'payload/shared'\nimport * as qs from 'qs-esm'\nimport React from 'react'\nimport { toast } from 'sonner'\n\nimport { CheckboxInput } from '../../fields/Checkbox/Input.js'\nimport { useAuth } from '../../providers/Auth/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useLocale } from '../../providers/Locale/index.js'\nimport { useRouteCache } from '../../providers/RouteCache/index.js'\nimport { SelectAllStatus, useSelection } from '../../providers/Selection/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { requests } from '../../utilities/api.js'\nimport { parseSearchParams } from '../../utilities/parseSearchParams.js'\nimport { ConfirmationModal } from '../ConfirmationModal/index.js'\nimport { ListSelectionButton } from '../ListSelection/index.js'\nimport './index.scss'\n\nconst confirmManyRestoreDrawerSlug = `confirm-restore-many-docs`\n\nconst baseClass = 'restore-many'\n\nexport type Props = {\n  collection: ClientCollectionConfig\n  viewType?: ViewTypes\n}\n\nexport const RestoreMany: React.FC<Props> = (props) => {\n  const { collection: { slug } = {}, viewType } = props\n\n  const { permissions } = useAuth()\n  const {\n    config: { collections, routes, serverURL },\n  } = useConfig()\n  const { code: locale } = useLocale()\n  const router = useRouter()\n  const { clearRouteCache } = useRouteCache()\n  const searchParams = useSearchParams()\n  const { count, getSelectedIds, selectAll, toggleAll } = useSelection()\n  const { openModal } = useModal()\n\n  const { i18n, t } = useTranslation()\n\n  const [restoreAsPublished, setRestoreAsPublished] = React.useState(false)\n\n  const collectionPermissions = permissions?.collections?.[slug]\n  const hasUpdatePermission = collectionPermissions?.update\n\n  if (selectAll === SelectAllStatus.None || !hasUpdatePermission || viewType !== 'trash') {\n    return null\n  }\n\n  const selectingAll = selectAll === SelectAllStatus.AllAvailable\n  const selectedIDs = !selectingAll ? getSelectedIds() : []\n\n  const baseWhere = parseSearchParams(searchParams)?.where as Where\n\n  const finalWhere = {\n    and: [\n      ...(Array.isArray(baseWhere?.and) ? baseWhere.and : baseWhere ? [baseWhere] : []),\n      { deletedAt: { exists: true } },\n    ],\n  }\n\n  const handleRestore = async () => {\n    const collectionConfig = collections.find((c) => c.slug === slug)\n    if (!collectionConfig) {\n      return\n    }\n\n    let whereConstraint: Where\n\n    if (selectingAll) {\n      whereConstraint = finalWhere\n    } else {\n      whereConstraint = {\n        and: [{ id: { in: selectedIDs } }, { deletedAt: { exists: true } }],\n      }\n    }\n\n    const url = `${serverURL}${routes.api}/${slug}${qs.stringify(\n      {\n        limit: 0,\n        locale,\n        trash: true, // Ensure trashed docs are returned\n        where: mergeListSearchAndWhere({\n          collectionConfig,\n          search: parseSearchParams(searchParams)?.search as string,\n          where: whereConstraint,\n        }),\n      },\n      { addQueryPrefix: true },\n    )}`\n\n    const body: Record<string, unknown> = {\n      deletedAt: null,\n    }\n\n    // Only include _status if drafts are enabled\n    if (collectionConfig?.versions?.drafts) {\n      body._status = restoreAsPublished ? 'published' : 'draft'\n    }\n\n    const restoreManyResponse = await requests.patch(url, {\n      body: JSON.stringify(body),\n      headers: {\n        'Accept-Language': i18n.language,\n        'Content-Type': 'application/json',\n      },\n    })\n\n    try {\n      const { plural, singular } = collectionConfig.labels\n      const json = await restoreManyResponse.json()\n\n      const restoredDocs = json?.docs?.length || 0\n      const successLabel = restoredDocs > 1 ? plural : singular\n\n      if (restoreManyResponse.status < 400 || restoredDocs > 0) {\n        toast.success(\n          t('general:restoredCountSuccessfully', {\n            count: restoredDocs,\n            label: getTranslation(successLabel, i18n),\n          }),\n        )\n      }\n\n      if (json?.errors?.length > 0) {\n        toast.error(json.message, {\n          description: json.errors.map((e) => e.message).join('\\n'),\n        })\n      }\n    } catch (err) {\n      toast.error(t('error:unknown'))\n    }\n\n    toggleAll()\n\n    router.replace(\n      qs.stringify(\n        {\n          ...parseSearchParams(searchParams),\n          page: selectingAll ? '1' : undefined,\n        },\n        { addQueryPrefix: true },\n      ),\n    )\n\n    clearRouteCache()\n  }\n\n  const collectionConfig = collections.find(({ slug: s }) => s === slug)\n\n  const labelString = getTranslation(\n    count === 1 ? collectionConfig.labels.singular : collectionConfig.labels.plural,\n    i18n,\n  )\n\n  return (\n    <React.Fragment>\n      <ListSelectionButton\n        aria-label={t('general:restore')}\n        className=\"restore-documents__toggle\"\n        onClick={() => {\n          openModal(confirmManyRestoreDrawerSlug)\n        }}\n      >\n        {t('general:restore')}\n      </ListSelectionButton>\n      <ConfirmationModal\n        body={\n          <React.Fragment>\n            {t(\n              collectionConfig?.versions?.drafts\n                ? 'general:aboutToRestoreAsDraftCount'\n                : 'general:aboutToRestoreCount',\n              {\n                count,\n                label: labelString,\n              },\n            )}\n            {collectionConfig?.versions?.drafts && (\n              <div className={`${baseClass}__checkbox`}>\n                <CheckboxInput\n                  checked={restoreAsPublished}\n                  id=\"restore-as-published-many\"\n                  label={t('general:restoreAsPublished')}\n                  name=\"restore-as-published-many\"\n                  onToggle={(e) => setRestoreAsPublished(e.target.checked)}\n                />\n              </div>\n            )}\n          </React.Fragment>\n        }\n        className={baseClass}\n        confirmingLabel={t('general:restoring')}\n        heading={t('general:confirmRestoration')}\n        modalSlug={confirmManyRestoreDrawerSlug}\n        onConfirm={handleRestore}\n      />\n    </React.Fragment>\n  )\n}\n"],"mappings":"AAAA;;;AAGA,SAASA,QAAQ,QAAQ;AACzB,SAASC,cAAc,QAAQ;AAC/B,SAASC,SAAS,EAAEC,eAAe,QAAQ;AAC3C,SAASC,uBAAuB,QAAQ;AACxC,YAAYC,EAAA,MAAQ;AACpB,OAAOC,KAAA,MAAW;AAClB,SAASC,KAAK,QAAQ;AAEtB,SAASC,aAAa,QAAQ;AAC9B,SAASC,OAAO,QAAQ;AACxB,SAASC,SAAS,QAAQ;AAC1B,SAASC,SAAS,QAAQ;AAC1B,SAASC,aAAa,QAAQ;AAC9B,SAASC,eAAe,EAAEC,YAAY,QAAQ;AAC9C,SAASC,cAAc,QAAQ;AAC/B,SAASC,QAAQ,QAAQ;AACzB,SAASC,iBAAiB,QAAQ;AAClC,SAASC,iBAAiB,QAAQ;AAClC,SAASC,mBAAmB,QAAQ;AACpC,OAAO;AAEP,MAAMC,4BAAA,GAA+B,2BAA2B;AAEhE,MAAMC,SAAA,GAAY;AAOlB,OAAO,MAAMC,WAAA,GAAgCC,KAAA;EAC3C,MAAM;IAAEC,UAAA,EAAY;MAAEC;IAAI,CAAE,GAAG,CAAC,CAAC;IAAEC;EAAQ,CAAE,GAAGH,KAAA;EAEhD,MAAM;IAAEI;EAAW,CAAE,GAAGlB,OAAA;EACxB,MAAM;IACJmB,MAAA,EAAQ;MAAEC,WAAW;MAAEC,MAAM;MAAEC;IAAS;EAAE,CAC3C,GAAGrB,SAAA;EACJ,MAAM;IAAEsB,IAAA,EAAMC;EAAM,CAAE,GAAGtB,SAAA;EACzB,MAAMuB,MAAA,GAAShC,SAAA;EACf,MAAM;IAAEiC;EAAe,CAAE,GAAGvB,aAAA;EAC5B,MAAMwB,YAAA,GAAejC,eAAA;EACrB,MAAM;IAAEkC,KAAK;IAAEC,cAAc;IAAEC,SAAS;IAAEC;EAAS,CAAE,GAAG1B,YAAA;EACxD,MAAM;IAAE2B;EAAS,CAAE,GAAGzC,QAAA;EAEtB,MAAM;IAAE0C,IAAI;IAAEC;EAAC,CAAE,GAAG5B,cAAA;EAEpB,MAAM,CAAC6B,kBAAA,EAAoBC,qBAAA,CAAsB,GAAGvC,KAAA,CAAMwC,QAAQ,CAAC;EAEnE,MAAMC,qBAAA,GAAwBpB,WAAA,EAAaE,WAAA,GAAcJ,IAAA,CAAK;EAC9D,MAAMuB,mBAAA,GAAsBD,qBAAA,EAAuBE,MAAA;EAEnD,IAAIV,SAAA,KAAc1B,eAAA,CAAgBqC,IAAI,IAAI,CAACF,mBAAA,IAAuBtB,QAAA,KAAa,SAAS;IACtF,OAAO;EACT;EAEA,MAAMyB,YAAA,GAAeZ,SAAA,KAAc1B,eAAA,CAAgBuC,YAAY;EAC/D,MAAMC,WAAA,GAAc,CAACF,YAAA,GAAeb,cAAA,KAAmB,EAAE;EAEzD,MAAMgB,SAAA,GAAYrC,iBAAA,CAAkBmB,YAAA,GAAemB,KAAA;EAEnD,MAAMC,UAAA,GAAa;IACjBC,GAAA,EAAK,C,IACCC,KAAA,CAAMC,OAAO,CAACL,SAAA,EAAWG,GAAA,IAAOH,SAAA,CAAUG,GAAG,GAAGH,SAAA,GAAY,CAACA,SAAA,CAAU,GAAG,EAAE,GAChF;MAAEM,SAAA,EAAW;QAAEC,MAAA,EAAQ;MAAK;IAAE;EAElC;EAEA,MAAMC,aAAA,GAAgB,MAAAA,CAAA;IACpB,MAAMC,gBAAA,GAAmBlC,WAAA,CAAYmC,IAAI,CAAEC,CAAA,IAAMA,CAAA,CAAExC,IAAI,KAAKA,IAAA;IAC5D,IAAI,CAACsC,gBAAA,EAAkB;MACrB;IACF;IAEA,IAAIG,eAAA;IAEJ,IAAIf,YAAA,EAAc;MAChBe,eAAA,GAAkBV,UAAA;IACpB,OAAO;MACLU,eAAA,GAAkB;QAChBT,GAAA,EAAK,CAAC;UAAEU,EAAA,EAAI;YAAEC,EAAA,EAAIf;UAAY;QAAE,GAAG;UAAEO,SAAA,EAAW;YAAEC,MAAA,EAAQ;UAAK;QAAE;MACnE;IACF;IAEA,MAAMQ,GAAA,GAAM,GAAGtC,SAAA,GAAYD,MAAA,CAAOwC,GAAG,IAAI7C,IAAA,GAAOpB,EAAA,CAAGkE,SAAS,CAC1D;MACEC,KAAA,EAAO;MACPvC,MAAA;MACAwC,KAAA,EAAO;MACPlB,KAAA,EAAOnD,uBAAA,CAAwB;QAC7B2D,gBAAA;QACAW,MAAA,EAAQzD,iBAAA,CAAkBmB,YAAA,GAAesC,MAAA;QACzCnB,KAAA,EAAOW;MACT;IACF,GACA;MAAES,cAAA,EAAgB;IAAK,IACtB;IAEH,MAAMC,IAAA,GAAgC;MACpChB,SAAA,EAAW;IACb;IAEA;IACA,IAAIG,gBAAA,EAAkBc,QAAA,EAAUC,MAAA,EAAQ;MACtCF,IAAA,CAAKG,OAAO,GAAGnC,kBAAA,GAAqB,cAAc;IACpD;IAEA,MAAMoC,mBAAA,GAAsB,MAAMhE,QAAA,CAASiE,KAAK,CAACZ,GAAA,EAAK;MACpDO,IAAA,EAAMM,IAAA,CAAKX,SAAS,CAACK,IAAA;MACrBO,OAAA,EAAS;QACP,mBAAmBzC,IAAA,CAAK0C,QAAQ;QAChC,gBAAgB;MAClB;IACF;IAEA,IAAI;MACF,MAAM;QAAEC,MAAM;QAAEC;MAAQ,CAAE,GAAGvB,gBAAA,CAAiBwB,MAAM;MACpD,MAAMC,IAAA,GAAO,MAAMR,mBAAA,CAAoBQ,IAAI;MAE3C,MAAMC,YAAA,GAAeD,IAAA,EAAME,IAAA,EAAMC,MAAA,IAAU;MAC3C,MAAMC,YAAA,GAAeH,YAAA,GAAe,IAAIJ,MAAA,GAASC,QAAA;MAEjD,IAAIN,mBAAA,CAAoBa,MAAM,GAAG,OAAOJ,YAAA,GAAe,GAAG;QACxDlF,KAAA,CAAMuF,OAAO,CACXnD,CAAA,CAAE,qCAAqC;UACrCN,KAAA,EAAOoD,YAAA;UACPM,KAAA,EAAO9F,cAAA,CAAe2F,YAAA,EAAclD,IAAA;QACtC;MAEJ;MAEA,IAAI8C,IAAA,EAAMQ,MAAA,EAAQL,MAAA,GAAS,GAAG;QAC5BpF,KAAA,CAAM0F,KAAK,CAACT,IAAA,CAAKU,OAAO,EAAE;UACxBC,WAAA,EAAaX,IAAA,CAAKQ,MAAM,CAACI,GAAG,CAAEC,CAAA,IAAMA,CAAA,CAAEH,OAAO,EAAEI,IAAI,CAAC;QACtD;MACF;IACF,EAAE,OAAOC,GAAA,EAAK;MACZhG,KAAA,CAAM0F,KAAK,CAACtD,CAAA,CAAE;IAChB;IAEAH,SAAA;IAEAN,MAAA,CAAOsE,OAAO,CACZnG,EAAA,CAAGkE,SAAS,CACV;MACE,GAAGtD,iBAAA,CAAkBmB,YAAA,CAAa;MAClCqE,IAAA,EAAMtD,YAAA,GAAe,MAAMuD;IAC7B,GACA;MAAE/B,cAAA,EAAgB;IAAK;IAI3BxC,eAAA;EACF;EAEA,MAAM4B,kBAAA,GAAmBlC,WAAA,CAAYmC,IAAI,CAAC,CAAC;IAAEvC,IAAA,EAAMkF;EAAC,CAAE,KAAKA,CAAA,KAAMlF,IAAA;EAEjE,MAAMmF,WAAA,GAAc3G,cAAA,CAClBoC,KAAA,KAAU,IAAI0B,kBAAA,CAAiBwB,MAAM,CAACD,QAAQ,GAAGvB,kBAAA,CAAiBwB,MAAM,CAACF,MAAM,EAC/E3C,IAAA;EAGF,oBACEmE,KAAA,CAACvG,KAAA,CAAMwG,QAAQ;4BACbC,IAAA,CAAC5F,mBAAA;MACC,cAAYwB,CAAA,CAAE;MACdqE,SAAA,EAAU;MACVC,OAAA,EAASA,CAAA;QACPxE,SAAA,CAAUrB,4BAAA;MACZ;gBAECuB,CAAA,CAAE;qBAELoE,IAAA,CAAC7F,iBAAA;MACC0D,IAAA,eACEiC,KAAA,CAACvG,KAAA,CAAMwG,QAAQ;mBACZnE,CAAA,CACCoB,kBAAA,EAAkBc,QAAA,EAAUC,MAAA,GACxB,uCACA,+BACJ;UACEzC,KAAA;UACA0D,KAAA,EAAOa;QACT,IAED7C,kBAAA,EAAkBc,QAAA,EAAUC,MAAA,iBAC3BiC,IAAA,CAAC;UAAIC,SAAA,EAAW,GAAG3F,SAAA,YAAqB;oBACtC,aAAA0F,IAAA,CAACvG,aAAA;YACC0G,OAAA,EAAStE,kBAAA;YACTuB,EAAA,EAAG;YACH4B,KAAA,EAAOpD,CAAA,CAAE;YACTwE,IAAA,EAAK;YACLC,QAAA,EAAWf,GAAA,IAAMxD,qBAAA,CAAsBwD,GAAA,CAAEgB,MAAM,CAACH,OAAO;;;;MAMjEF,SAAA,EAAW3F,SAAA;MACXiG,eAAA,EAAiB3E,CAAA,CAAE;MACnB4E,OAAA,EAAS5E,CAAA,CAAE;MACX6E,SAAA,EAAWpG,4BAAA;MACXqG,SAAA,EAAW3D;;;AAInB","ignoreList":[]}