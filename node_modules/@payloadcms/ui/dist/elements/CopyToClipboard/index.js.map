{"version":3,"file":"index.js","names":["c","_c","React","useState","CopyIcon","useTranslation","Tooltip","baseClass","CopyToClipboard","t0","$","defaultMessage","successMessage","value","copied","setCopied","hovered","setHovered","t","t1","navigator","clipboard","writeText","t2","t3","Symbol","for","t4","_jsxs","className","onClick","onMouseEnter","onMouseLeave","type","children","_jsx","delay","undefined","show"],"sources":["../../../src/elements/CopyToClipboard/index.tsx"],"sourcesContent":["'use client'\nimport React, { useState } from 'react'\n\nimport { CopyIcon } from '../../icons/Copy/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { Tooltip } from '../Tooltip/index.js'\nimport './index.scss'\n\nconst baseClass = 'copy-to-clipboard'\n\nexport type Props = {\n  defaultMessage?: string\n  successMessage?: string\n  value?: string\n}\n\nexport const CopyToClipboard: React.FC<Props> = ({ defaultMessage, successMessage, value }) => {\n  const [copied, setCopied] = useState(false)\n  const [hovered, setHovered] = useState(false)\n  const { t } = useTranslation()\n\n  if (value) {\n    return (\n      <button\n        className={baseClass}\n        onClick={async () => {\n          await navigator.clipboard.writeText(value)\n          setCopied(true)\n        }}\n        onMouseEnter={() => {\n          setHovered(true)\n          setCopied(false)\n        }}\n        onMouseLeave={() => {\n          setHovered(false)\n          setCopied(false)\n        }}\n        type=\"button\"\n      >\n        <CopyIcon />\n        <Tooltip delay={copied ? 0 : undefined} show={hovered || copied}>\n          {copied && (successMessage ?? t('general:copied'))}\n          {!copied && (defaultMessage ?? t('general:copy'))}\n        </Tooltip>\n      </button>\n    )\n  }\n\n  return null\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AACA,OAAOC,KAAA,IAASC,QAAQ,QAAQ;AAEhC,SAASC,QAAQ,QAAQ;AACzB,SAASC,cAAc,QAAQ;AAC/B,SAASC,OAAO,QAAQ;AACxB,OAAO;AAEP,MAAMC,SAAA,GAAY;AAQlB,OAAO,MAAMC,eAAA,GAAmCC,EAAA;EAAA,MAAAC,CAAA,GAAAT,EAAA;EAAC;IAAAU,cAAA;IAAAC,cAAA;IAAAC;EAAA,IAAAJ,EAAyC;EACxF,OAAAK,MAAA,EAAAC,SAAA,IAA4BZ,QAAA,MAAS;EACrC,OAAAa,OAAA,EAAAC,UAAA,IAA8Bd,QAAA,MAAS;EACvC;IAAAe;EAAA,IAAcb,cAAA;EAAA,IAEVQ,KAAA;IAAA,IAAAM,EAAA;IAAA,IAAAT,CAAA,QAAAG,KAAA;MAIWM,EAAA,SAAAA,CAAA;QAAA,MACDC,SAAA,CAAAC,SAAA,CAAAC,SAAA,CAA8BT,KAAA;QACpCE,SAAA,KAAU;MAAA;MACZL,CAAA,MAAAG,KAAA;MAAAH,CAAA,MAAAS,EAAA;IAAA;MAAAA,EAAA,GAAAT,CAAA;IAAA;IAAA,IAAAa,EAAA;IAAA,IAAAC,EAAA;IAAA,IAAAd,CAAA,QAAAe,MAAA,CAAAC,GAAA;MACcH,EAAA,GAAAA,CAAA;QACZN,UAAA,KAAW;QACXF,SAAA,MAAU;MAAA;MAEES,EAAA,GAAAA,CAAA;QACZP,UAAA,MAAW;QACXF,SAAA,MAAU;MAAA;MACZL,CAAA,MAAAa,EAAA;MAAAb,CAAA,MAAAc,EAAA;IAAA;MAAAD,EAAA,GAAAb,CAAA;MAAAc,EAAA,GAAAd,CAAA;IAAA;IAAA,IAAAiB,EAAA;IAAA,IAAAjB,CAAA,QAAAI,MAAA,IAAAJ,CAAA,QAAAC,cAAA,IAAAD,CAAA,QAAAM,OAAA,IAAAN,CAAA,QAAAE,cAAA,IAAAF,CAAA,QAAAQ,CAAA,IAAAR,CAAA,QAAAS,EAAA;MAbFQ,EAAA,GAAAC,KAAA,CAAC;QAAAC,SAAA,EAAAtB,SAAA;QAAAuB,OAAA,EAEUX,EAGT;QAAAY,YAAA,EACcR,EAGd;QAAAS,YAAA,EACcR,EAGd;QAAAS,IAAA,EACK;QAAAC,QAAA,GAELC,IAAA,CAAA/B,QAAA,IAAC,GACDwB,KAAA,CAAAtB,OAAA;UAAA8B,KAAA,EAAgBtB,MAAA,OAAAuB,SAAa;UAAAC,IAAA,EAAiBtB,OAAA,IAAWF,MAAA;UAAAoB,QAAA,GACtDpB,MAAA,KAAWF,cAAA,IAAkBM,CAAA,CAAE,iBAAgB,GAC/C,CAACJ,MAAA,KAAWH,cAAA,IAAkBO,CAAA,CAAE,eAAc;QAAA,C;;;;;;;;;;;;WAnBnDS,E;;;CA0BN","ignoreList":[]}