{"version":3,"file":"DrawerContent.js","names":["c","_c","useModal","getTranslation","useRouter","useSearchParams","combineWhereConstraints","mergeListSearchAndWhere","unflatten","qs","React","useCallback","useEffect","useMemo","useState","useForm","Form","RenderField","FormSubmit","XIcon","useAuth","useConfig","DocumentInfoProvider","useLocale","OperationContext","useRouteCache","useServerFunctions","useTranslation","abortAndIgnore","handleAbortRef","parseSearchParams","FieldSelect","baseClass","Submit","t0","$","action","disabled","submit","t","t1","method","skipValidation","save","t2","_jsx","className","onClick","children","PublishButton","overrides","_status","SaveDraftButton","buttonStyle","EditManyDrawerContent","props","collection","fields","labels","plural","singular","count","drawerSlug","ids","onSuccess","onSuccessFromProps","selectAll","selectedFields","setSelectedFields","where","permissions","user","code","locale","closeModal","config","routes","api","apiRoute","serverURL","getFormState","i18n","isInitializing","setIsInitializing","router","abortFormStateRef","useRef","clearRouteCache","collectionPermissions","collections","slug","searchParams","select","reduce","acc","option","value","path","onChange","formState","prevFormState","submitted","controller","state","collectionSlug","docPermissions","docPreferences","operation","schemaPath","signal","current","abortFormState","queryString","whereConstraints","push","queryWithSearch","collectionConfig","search","get","id","not_equals","in","stringify","addQueryPrefix","replace","page","undefined","onFieldSelect","dispatchFields","selected","type","currentEditor","hasPublishedDoc","initialData","isLocked","lastUpdateTime","mostRecentVersionIsAutosaved","unpublishedVersionCount","versionCount","_jsxs","label","length","map","i","field","fieldPermissions","clientFieldConfig","indexPath","parentPath","parentSchemaPath","versions","drafts","Fragment"],"sources":["../../../src/elements/EditMany/DrawerContent.tsx"],"sourcesContent":["'use client'\n\nimport type { SelectType, Where } from 'payload'\n\nimport { useModal } from '@faceless-ui/modal'\nimport { getTranslation } from '@payloadcms/translations'\nimport { useRouter, useSearchParams } from 'next/navigation.js'\nimport { combineWhereConstraints, mergeListSearchAndWhere, unflatten } from 'payload/shared'\nimport * as qs from 'qs-esm'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\n\nimport type { FormProps } from '../../forms/Form/index.js'\nimport type { OnFieldSelect } from '../FieldSelect/index.js'\nimport type { FieldOption } from '../FieldSelect/reduceFieldOptions.js'\n\nimport { useForm } from '../../forms/Form/context.js'\nimport { Form } from '../../forms/Form/index.js'\nimport { RenderField } from '../../forms/RenderFields/RenderField.js'\nimport { FormSubmit } from '../../forms/Submit/index.js'\nimport { XIcon } from '../../icons/X/index.js'\nimport { useAuth } from '../../providers/Auth/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { DocumentInfoProvider } from '../../providers/DocumentInfo/index.js'\nimport { useLocale } from '../../providers/Locale/index.js'\nimport { OperationContext } from '../../providers/Operation/index.js'\nimport { useRouteCache } from '../../providers/RouteCache/index.js'\nimport { useServerFunctions } from '../../providers/ServerFunctions/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { abortAndIgnore, handleAbortRef } from '../../utilities/abortAndIgnore.js'\nimport { parseSearchParams } from '../../utilities/parseSearchParams.js'\nimport { FieldSelect } from '../FieldSelect/index.js'\nimport './index.scss'\nimport '../../forms/RenderFields/index.scss'\nimport { baseClass, type EditManyProps } from './index.js'\n\nconst Submit: React.FC<{\n  readonly action: string\n  readonly disabled: boolean\n}> = ({ action, disabled }) => {\n  const { submit } = useForm()\n  const { t } = useTranslation()\n\n  const save = useCallback(() => {\n    void submit({\n      action,\n      method: 'PATCH',\n      skipValidation: true,\n    })\n  }, [action, submit])\n\n  return (\n    <FormSubmit className={`${baseClass}__save`} disabled={disabled} onClick={save}>\n      {t('general:save')}\n    </FormSubmit>\n  )\n}\n\nconst PublishButton: React.FC<{\n  action: string\n  disabled: boolean\n}> = ({ action, disabled }) => {\n  const { submit } = useForm()\n  const { t } = useTranslation()\n\n  const save = useCallback(() => {\n    void submit({\n      action,\n      method: 'PATCH',\n      overrides: {\n        _status: 'published',\n      },\n      skipValidation: true,\n    })\n  }, [action, submit])\n\n  return (\n    <FormSubmit className={`${baseClass}__publish`} disabled={disabled} onClick={save}>\n      {t('version:publishChanges')}\n    </FormSubmit>\n  )\n}\n\nconst SaveDraftButton: React.FC<{\n  action: string\n  disabled: boolean\n}> = ({ action, disabled }) => {\n  const { submit } = useForm()\n  const { t } = useTranslation()\n\n  const save = useCallback(() => {\n    void submit({\n      action,\n      method: 'PATCH',\n      overrides: {\n        _status: 'draft',\n      },\n      skipValidation: true,\n    })\n  }, [action, submit])\n\n  return (\n    <FormSubmit\n      buttonStyle=\"secondary\"\n      className={`${baseClass}__draft`}\n      disabled={disabled}\n      onClick={save}\n    >\n      {t('version:saveDraft')}\n    </FormSubmit>\n  )\n}\n\ntype EditManyDrawerContentProps = {\n  /**\n   * The total count of selected items\n   */\n  count?: number\n  /**\n   * The slug of the drawer\n   */\n  drawerSlug: string\n  /**\n   * The IDs of the selected items\n   */\n  ids?: (number | string)[]\n  /**\n   * The function to call after a successful action\n   */\n  onSuccess?: () => void\n  /**\n   * Whether all items are selected\n   */\n  selectAll?: boolean\n  /**\n   * The fields that are selected to bulk edit\n   */\n  selectedFields: FieldOption[]\n  /**\n   * The function to set the selected fields to bulk edit\n   */\n  setSelectedFields: (fields: FieldOption[]) => void\n  where?: Where\n} & EditManyProps\n\nexport const EditManyDrawerContent: React.FC<EditManyDrawerContentProps> = (props) => {\n  const {\n    collection,\n    collection: { fields, labels: { plural, singular } } = {},\n    count,\n    drawerSlug,\n    ids,\n    onSuccess: onSuccessFromProps,\n    selectAll,\n    selectedFields,\n    setSelectedFields,\n    where,\n  } = props\n\n  const { permissions, user } = useAuth()\n  const { code: locale } = useLocale()\n\n  const { closeModal } = useModal()\n\n  const {\n    config: {\n      routes: { api: apiRoute },\n      serverURL,\n    },\n  } = useConfig()\n\n  const { getFormState } = useServerFunctions()\n\n  const { i18n, t } = useTranslation()\n\n  const [isInitializing, setIsInitializing] = useState(false)\n\n  const router = useRouter()\n  const abortFormStateRef = React.useRef<AbortController>(null)\n  const { clearRouteCache } = useRouteCache()\n  const collectionPermissions = permissions?.collections?.[collection.slug]\n  const searchParams = useSearchParams()\n\n  const select = useMemo<SelectType>(() => {\n    return unflatten(\n      selectedFields.reduce((acc, option) => {\n        acc[option.value.path] = true\n        return acc\n      }, {} as SelectType),\n    )\n  }, [selectedFields])\n\n  const onChange: FormProps['onChange'][0] = useCallback(\n    async ({ formState: prevFormState, submitted }) => {\n      const controller = handleAbortRef(abortFormStateRef)\n\n      const { state } = await getFormState({\n        collectionSlug: collection.slug,\n        docPermissions: collectionPermissions,\n        docPreferences: null,\n        formState: prevFormState,\n        operation: 'update',\n        schemaPath: collection.slug,\n        select,\n        signal: controller.signal,\n        skipValidation: !submitted,\n      })\n\n      abortFormStateRef.current = null\n\n      return state\n    },\n    [getFormState, collection, collectionPermissions, select],\n  )\n\n  useEffect(() => {\n    const abortFormState = abortFormStateRef.current\n\n    return () => {\n      abortAndIgnore(abortFormState)\n    }\n  }, [])\n\n  const queryString = useMemo((): string => {\n    const whereConstraints: Where[] = []\n\n    if (where) {\n      whereConstraints.push(where)\n    }\n\n    const queryWithSearch = mergeListSearchAndWhere({\n      collectionConfig: collection,\n      search: searchParams.get('search'),\n    })\n\n    if (queryWithSearch) {\n      whereConstraints.push(queryWithSearch)\n    }\n\n    if (selectAll) {\n      // Match the current filter/search, or default to all docs\n      whereConstraints.push(\n        (parseSearchParams(searchParams)?.where as Where) || {\n          id: {\n            not_equals: '',\n          },\n        },\n      )\n    } else {\n      // If we're not selecting all, we need to select specific docs\n      whereConstraints.push({\n        id: {\n          in: ids || [],\n        },\n      })\n    }\n\n    return qs.stringify(\n      {\n        locale,\n        where: combineWhereConstraints(whereConstraints),\n      },\n      { addQueryPrefix: true },\n    )\n  }, [collection, searchParams, selectAll, ids, locale, where])\n\n  const onSuccess = () => {\n    router.replace(\n      qs.stringify(\n        {\n          ...parseSearchParams(searchParams),\n          page: selectAll ? '1' : undefined,\n        },\n        { addQueryPrefix: true },\n      ),\n    )\n    clearRouteCache()\n    closeModal(drawerSlug)\n\n    if (typeof onSuccessFromProps === 'function') {\n      onSuccessFromProps()\n    }\n  }\n\n  const onFieldSelect = useCallback<OnFieldSelect>(\n    async ({ dispatchFields, formState, selected }) => {\n      setIsInitializing(true)\n\n      setSelectedFields(selected || [])\n\n      const { state } = await getFormState({\n        collectionSlug: collection.slug,\n        docPermissions: collectionPermissions,\n        docPreferences: null,\n        formState,\n        operation: 'update',\n        schemaPath: collection.slug,\n        select: unflatten(\n          selected.reduce((acc, option) => {\n            acc[option.value.path] = true\n            return acc\n          }, {} as SelectType),\n        ),\n        skipValidation: true,\n      })\n\n      dispatchFields({\n        type: 'UPDATE_MANY',\n        formState: state,\n      })\n\n      setIsInitializing(false)\n    },\n    [getFormState, collection.slug, collectionPermissions, setSelectedFields],\n  )\n\n  return (\n    <DocumentInfoProvider\n      collectionSlug={collection.slug}\n      currentEditor={user}\n      hasPublishedDoc={false}\n      id={null}\n      initialData={{}}\n      isLocked={false}\n      lastUpdateTime={0}\n      mostRecentVersionIsAutosaved={false}\n      unpublishedVersionCount={0}\n      versionCount={0}\n    >\n      <OperationContext value=\"update\">\n        <div className={`${baseClass}__main`}>\n          <div className={`${baseClass}__header`}>\n            <h2 className={`${baseClass}__header__title`}>\n              {t('general:editingLabel', {\n                count,\n                label: getTranslation(count > 1 ? plural : singular, i18n),\n              })}\n            </h2>\n            <button\n              aria-label={t('general:close')}\n              className={`${baseClass}__header__close`}\n              id={`close-drawer__${drawerSlug}`}\n              onClick={() => closeModal(drawerSlug)}\n              type=\"button\"\n            >\n              <XIcon />\n            </button>\n          </div>\n          <Form\n            className={`${baseClass}__form`}\n            isInitializing={isInitializing}\n            onChange={[onChange]}\n            onSuccess={onSuccess}\n          >\n            <FieldSelect\n              fields={fields}\n              onChange={onFieldSelect}\n              permissions={collectionPermissions.fields}\n            />\n            {selectedFields.length === 0 ? null : (\n              <div className=\"render-fields\">\n                {selectedFields.map((option, i) => {\n                  const {\n                    value: { field, fieldPermissions, path },\n                  } = option\n\n                  return (\n                    <RenderField\n                      clientFieldConfig={field}\n                      indexPath=\"\"\n                      key={`${path}-${i}`}\n                      parentPath=\"\"\n                      parentSchemaPath=\"\"\n                      path={path}\n                      permissions={fieldPermissions}\n                    />\n                  )\n                })}\n              </div>\n            )}\n            <div className={`${baseClass}__sidebar-wrap`}>\n              <div className={`${baseClass}__sidebar`}>\n                <div className={`${baseClass}__sidebar-sticky-wrap`}>\n                  <div className={`${baseClass}__document-actions`}>\n                    {collection?.versions?.drafts ? (\n                      <React.Fragment>\n                        <SaveDraftButton\n                          action={`${serverURL}${apiRoute}/${collection.slug}${queryString}&draft=true`}\n                          disabled={selectedFields.length === 0}\n                        />\n                        <PublishButton\n                          action={`${serverURL}${apiRoute}/${collection.slug}${queryString}&draft=true`}\n                          disabled={selectedFields.length === 0}\n                        />\n                      </React.Fragment>\n                    ) : (\n                      <Submit\n                        action={`${serverURL}${apiRoute}/${collection.slug}${queryString}`}\n                        disabled={selectedFields.length === 0}\n                      />\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Form>\n        </div>\n      </OperationContext>\n    </DocumentInfoProvider>\n  )\n}\n"],"mappings":"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","ignoreList":[]}