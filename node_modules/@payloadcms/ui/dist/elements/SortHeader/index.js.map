{"version":3,"file":"index.js","names":["c","_c","React","useEffect","useRef","SortDownIcon","SortUpIcon","useListQuery","useTranslation","baseClass","useSort","$","handleSortChange","orderableFieldName","query","querySort","Array","isArray","sort","isActive","t0","t1","current","t2","handleSortPress","t3","SortHeader","props","appearance","t","filter","Boolean","join","_jsx","className","children","direction","label","onClick","type"],"sources":["../../../src/elements/SortHeader/index.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect, useRef } from 'react'\n\nimport { SortDownIcon, SortUpIcon } from '../../icons/Sort/index.js'\nimport { useListQuery } from '../../providers/ListQuery/index.js'\nimport './index.scss'\nimport { useTranslation } from '../../providers/Translation/index.js'\n\nexport type SortHeaderProps = {\n  readonly appearance?: 'condensed' | 'default'\n  readonly disable?: boolean\n}\n\nconst baseClass = 'sort-header'\n\nfunction useSort() {\n  const { handleSortChange, orderableFieldName, query } = useListQuery()\n  const querySort = Array.isArray(query.sort) ? query.sort[0] : query.sort\n  const sort = useRef<'asc' | 'desc'>(querySort === `-${orderableFieldName}` ? 'desc' : 'asc')\n  const isActive = querySort === `-${orderableFieldName}` || querySort === orderableFieldName\n\n  // This is necessary if you initialize the page without sort url param\n  // but your preferences are to sort by -_order.\n  // Since sort isn't updated, the arrow would incorrectly point upward.\n  useEffect(() => {\n    if (!isActive) {\n      return\n    }\n    sort.current = querySort === `-${orderableFieldName}` ? 'desc' : 'asc'\n  }, [orderableFieldName, querySort, isActive])\n\n  const handleSortPress = () => {\n    // If it's already sorted by the \"_order\" field, toggle between \"asc\" and \"desc\"\n    if (isActive) {\n      void handleSortChange(sort.current === 'asc' ? `-${orderableFieldName}` : orderableFieldName)\n      sort.current = sort.current === 'asc' ? 'desc' : 'asc'\n      return\n    }\n    // If NOT sorted by the \"_order\" field, sort by that field but do not toggle the current value of \"asc\" or \"desc\".\n    void handleSortChange(sort.current === 'asc' ? orderableFieldName : `-${orderableFieldName}`)\n  }\n\n  return { handleSortPress, isActive, sort }\n}\n\nexport const SortHeader: React.FC<SortHeaderProps> = (props) => {\n  const { appearance } = props\n  const { handleSortPress, isActive, sort } = useSort()\n  const { t } = useTranslation()\n\n  return (\n    <div\n      className={[baseClass, appearance && `${baseClass}--appearance-${appearance}`]\n        .filter(Boolean)\n        .join(' ')}\n    >\n      <div className={`${baseClass}__buttons`}>\n        {sort.current === 'desc' ? (\n          <button\n            aria-label={t('general:sortByLabelDirection', {\n              direction: t('general:ascending'),\n              label: 'Order',\n            })}\n            className={`${baseClass}__button ${baseClass}__${sort.current} ${isActive ? `${baseClass}--active` : ''}`}\n            onClick={handleSortPress}\n            type=\"button\"\n          >\n            <SortDownIcon />\n          </button>\n        ) : (\n          <button\n            aria-label={t('general:sortByLabelDirection', {\n              direction: t('general:descending'),\n              label: 'Order',\n            })}\n            className={`${baseClass}__button ${baseClass}__${sort.current} ${isActive ? `${baseClass}--active` : ''}`}\n            onClick={handleSortPress}\n            type=\"button\"\n          >\n            <SortUpIcon />\n          </button>\n        )}\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}