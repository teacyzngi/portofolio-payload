{"version":3,"file":"DrawerContent.js","names":["useModal","React","useCallback","useEffect","useRef","useState","toast","LoadingOverlay","useConfig","useLocale","useServerFunctions","useTranslation","abortAndIgnore","handleAbortRef","DocumentDrawerContextProvider","DocumentDrawerContent","id","docID","collectionSlug","disableActions","drawerSlug","initialData","onDelete","onDeleteFromProps","onDuplicate","onDuplicateFromProps","onSave","onSaveFromProps","overrideEntityVisibility","redirectAfterCreate","redirectAfterDelete","redirectAfterDuplicate","redirectAfterRestore","getEntityConfig","locale","collectionConfig","abortGetDocumentViewRef","closeModal","t","renderDocument","DocumentView","setDocumentView","undefined","isLoading","setIsLoading","hasInitialized","getDocumentView","showLoadingIndicator","controller","fetchDocumentView","result","signal","Document","error","message","current","args","operation","doc","clearDoc","abortGetDocumentView","_jsx"],"sources":["../../../src/elements/DocumentDrawer/DrawerContent.tsx"],"sourcesContent":["'use client'\n\nimport { useModal } from '@faceless-ui/modal'\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { toast } from 'sonner'\n\nimport type { DocumentDrawerProps } from './types.js'\n\nimport { LoadingOverlay } from '../../elements/Loading/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useLocale } from '../../providers/Locale/index.js'\nimport { useServerFunctions } from '../../providers/ServerFunctions/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { abortAndIgnore, handleAbortRef } from '../../utilities/abortAndIgnore.js'\nimport { DocumentDrawerContextProvider } from './Provider.js'\n\nexport const DocumentDrawerContent: React.FC<DocumentDrawerProps> = ({\n  id: docID,\n  collectionSlug,\n  disableActions,\n  drawerSlug,\n  initialData,\n  onDelete: onDeleteFromProps,\n  onDuplicate: onDuplicateFromProps,\n  onSave: onSaveFromProps,\n  overrideEntityVisibility = true,\n  redirectAfterCreate,\n  redirectAfterDelete,\n  redirectAfterDuplicate,\n  redirectAfterRestore,\n}) => {\n  const { getEntityConfig } = useConfig()\n  const locale = useLocale()\n\n  const [collectionConfig] = useState(() => getEntityConfig({ collectionSlug }))\n\n  const abortGetDocumentViewRef = React.useRef<AbortController>(null)\n\n  const { closeModal } = useModal()\n  const { t } = useTranslation()\n\n  const { renderDocument } = useServerFunctions()\n\n  const [DocumentView, setDocumentView] = useState<React.ReactNode>(undefined)\n  const [isLoading, setIsLoading] = useState(true)\n\n  const hasInitialized = useRef(false)\n\n  const getDocumentView = useCallback(\n    (docID?: DocumentDrawerProps['id'], showLoadingIndicator: boolean = false) => {\n      const controller = handleAbortRef(abortGetDocumentViewRef)\n\n      const fetchDocumentView = async () => {\n        if (showLoadingIndicator) {\n          setIsLoading(true)\n        }\n\n        try {\n          const result = await renderDocument({\n            collectionSlug,\n            disableActions,\n            docID,\n            drawerSlug,\n            initialData,\n            locale,\n            overrideEntityVisibility,\n            redirectAfterCreate,\n            redirectAfterDelete: redirectAfterDelete !== undefined ? redirectAfterDelete : false,\n            redirectAfterDuplicate:\n              redirectAfterDuplicate !== undefined ? redirectAfterDuplicate : false,\n            redirectAfterRestore: redirectAfterRestore !== undefined ? redirectAfterRestore : false,\n            signal: controller.signal,\n          })\n\n          if (result?.Document) {\n            setDocumentView(result.Document)\n            setIsLoading(false)\n          }\n        } catch (error) {\n          toast.error(error?.message || t('error:unspecific'))\n          closeModal(drawerSlug)\n        }\n\n        abortGetDocumentViewRef.current = null\n      }\n\n      void fetchDocumentView()\n    },\n    [\n      collectionSlug,\n      disableActions,\n      drawerSlug,\n      initialData,\n      redirectAfterDelete,\n      redirectAfterDuplicate,\n      redirectAfterRestore,\n      renderDocument,\n      redirectAfterCreate,\n      closeModal,\n      overrideEntityVisibility,\n      t,\n      locale,\n    ],\n  )\n\n  const onSave = useCallback<DocumentDrawerProps['onSave']>(\n    (args) => {\n      if (args.operation === 'create') {\n        getDocumentView(args.doc.id)\n      }\n\n      if (typeof onSaveFromProps === 'function') {\n        void onSaveFromProps({\n          ...args,\n          collectionConfig,\n        })\n      }\n    },\n    [onSaveFromProps, collectionConfig, getDocumentView],\n  )\n\n  const onDuplicate = useCallback<DocumentDrawerProps['onDuplicate']>(\n    (args) => {\n      getDocumentView(args.doc.id)\n\n      if (typeof onDuplicateFromProps === 'function') {\n        void onDuplicateFromProps({\n          ...args,\n          collectionConfig,\n        })\n      }\n    },\n    [onDuplicateFromProps, collectionConfig, getDocumentView],\n  )\n\n  const onDelete = useCallback<DocumentDrawerProps['onDelete']>(\n    (args) => {\n      if (typeof onDeleteFromProps === 'function') {\n        void onDeleteFromProps({\n          ...args,\n          collectionConfig,\n        })\n      }\n\n      closeModal(drawerSlug)\n    },\n    [onDeleteFromProps, closeModal, drawerSlug, collectionConfig],\n  )\n\n  const clearDoc = useCallback(() => {\n    getDocumentView(undefined, true)\n  }, [getDocumentView])\n\n  useEffect(() => {\n    if (!DocumentView && !hasInitialized.current) {\n      getDocumentView(docID, true)\n      hasInitialized.current = true\n    }\n  }, [DocumentView, getDocumentView, docID])\n\n  // Cleanup any pending requests when the component unmounts\n  useEffect(() => {\n    const abortGetDocumentView = abortGetDocumentViewRef.current\n\n    return () => {\n      abortAndIgnore(abortGetDocumentView)\n    }\n  }, [])\n\n  if (isLoading) {\n    return <LoadingOverlay />\n  }\n\n  return (\n    <DocumentDrawerContextProvider\n      clearDoc={clearDoc}\n      drawerSlug={drawerSlug}\n      onDelete={onDelete}\n      onDuplicate={onDuplicate}\n      onSave={onSave}\n    >\n      {DocumentView}\n    </DocumentDrawerContextProvider>\n  )\n}\n"],"mappings":"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","ignoreList":[]}