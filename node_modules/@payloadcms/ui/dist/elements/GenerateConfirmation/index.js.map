{"version":3,"file":"index.js","names":["c","_c","useModal","React","useCallback","toast","useDocumentInfo","useTranslation","Button","ConfirmationModal","Translation","GenerateConfirmation","props","$","highlightField","setKey","id","toggleModal","t","modalSlug","t0","success","handleGenerate","t1","t2","_jsxs","Fragment","children","_jsx","buttonStyle","onClick","size","body","elements","1","_temp","i18nKey","heading","onConfirm"],"sources":["../../../src/elements/GenerateConfirmation/index.tsx"],"sourcesContent":["'use client'\nimport { useModal } from '@faceless-ui/modal'\nimport React, { useCallback } from 'react'\nimport { toast } from 'sonner'\n\nimport { useDocumentInfo } from '../../providers/DocumentInfo/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { Button } from '../Button/index.js'\nimport { ConfirmationModal } from '../ConfirmationModal/index.js'\nimport { Translation } from '../Translation/index.js'\n\nexport type GenerateConfirmationProps = {\n  highlightField: (Boolean) => void\n  setKey: () => void\n}\n\nexport function GenerateConfirmation(props: GenerateConfirmationProps) {\n  const { highlightField, setKey } = props\n\n  const { id } = useDocumentInfo()\n  const { toggleModal } = useModal()\n  const { t } = useTranslation()\n\n  const modalSlug = `generate-confirmation-${id}`\n\n  const handleGenerate = useCallback(() => {\n    setKey()\n    toast.success(t('authentication:newAPIKeyGenerated'))\n    highlightField(true)\n  }, [highlightField, setKey, t])\n\n  return (\n    <React.Fragment>\n      <Button\n        buttonStyle=\"secondary\"\n        onClick={() => {\n          toggleModal(modalSlug)\n        }}\n        size=\"small\"\n      >\n        {t('authentication:generateNewAPIKey')}\n      </Button>\n      <ConfirmationModal\n        body={\n          <Translation\n            elements={{\n              1: ({ children }) => <strong>{children}</strong>,\n            }}\n            i18nKey=\"authentication:generatingNewAPIKeyWillInvalidate\"\n            t={t}\n          />\n        }\n        confirmLabel={t('authentication:generate')}\n        heading={t('authentication:confirmGeneration')}\n        modalSlug={modalSlug}\n        onConfirm={handleGenerate}\n      />\n    </React.Fragment>\n  )\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AACA,SAASC,QAAQ,QAAQ;AACzB,OAAOC,KAAA,IAASC,WAAW,QAAQ;AACnC,SAASC,KAAK,QAAQ;AAEtB,SAASC,eAAe,QAAQ;AAChC,SAASC,cAAc,QAAQ;AAC/B,SAASC,MAAM,QAAQ;AACvB,SAASC,iBAAiB,QAAQ;AAClC,SAASC,WAAW,QAAQ;AAO5B,OAAO,SAAAC,qBAAAC,KAAA;EAAA,MAAAC,CAAA,GAAAZ,EAAA;EACL;IAAAa,cAAA;IAAAC;EAAA,IAAmCH,KAAA;EAEnC;IAAAI;EAAA,IAAeV,eAAA;EACf;IAAAW;EAAA,IAAwBf,QAAA;EACxB;IAAAgB;EAAA,IAAcX,cAAA;EAEd,MAAAY,SAAA,GAAkB,yBAAyBH,EAAA,EAAI;EAAA,IAAAI,EAAA;EAAA,IAAAP,CAAA,QAAAC,cAAA,IAAAD,CAAA,QAAAE,MAAA,IAAAF,CAAA,QAAAK,CAAA;IAEZE,EAAA,GAAAA,CAAA;MACjCL,MAAA;MACAV,KAAA,CAAAgB,OAAA,CAAcH,CAAA,CAAE;MAChBJ,cAAA,KAAe;IAAA;IACjBD,CAAA,MAAAC,cAAA;IAAAD,CAAA,MAAAE,MAAA;IAAAF,CAAA,MAAAK,CAAA;IAAAL,CAAA,MAAAO,EAAA;EAAA;IAAAA,EAAA,GAAAP,CAAA;EAAA;EAJA,MAAAS,cAAA,GAAuBF,EAIO;EAAA,IAAAG,EAAA;EAAA,IAAAV,CAAA,QAAAM,SAAA,IAAAN,CAAA,QAAAI,WAAA;IAMfM,EAAA,GAAAA,CAAA;MACPN,WAAA,CAAYE,SAAA;IAAA;IACdN,CAAA,MAAAM,SAAA;IAAAN,CAAA,MAAAI,WAAA;IAAAJ,CAAA,MAAAU,EAAA;EAAA;IAAAA,EAAA,GAAAV,CAAA;EAAA;EAAA,IAAAW,EAAA;EAAA,IAAAX,CAAA,QAAAS,cAAA,IAAAT,CAAA,QAAAM,SAAA,IAAAN,CAAA,QAAAK,CAAA,IAAAL,CAAA,SAAAU,EAAA;IALJC,EAAA,GAAAC,KAAA,CAAAtB,KAAA,CAAAuB,QAAA;MAAAC,QAAA,GACEC,IAAA,CAAApB,MAAA;QAAAqB,WAAA,EACc;QAAAC,OAAA,EACHP,EAET;QAAAQ,IAAA,EACK;QAAAJ,QAAA,EAEJT,CAAA,CAAE;MAAA,C,GAELU,IAAA,CAAAnB,iBAAA;QAAAuB,IAAA,EAEIJ,IAAA,CAAAlB,WAAA;UAAAuB,QAAA;YAAAC,CAAA,EAAAC;UAAA;UAAAC,OAAA,EAIU;UAAAlB;QAAA,C;sBAIEA,CAAA,CAAE;QAAAmB,OAAA,EACPnB,CAAA,CAAE;QAAAC,SAAA;QAAAmB,SAAA,EAEAhB;MAAA,C;;;;;;;;;;SAvBfE,E;;AAhBG,SAAAW,MAAAf,EAAA;EA8BW;IAAAO;EAAA,IAAAP,EAAY;EAAA,OAAKQ,IAAA,CAAC;IAAAD;EAAA,C","ignoreList":[]}