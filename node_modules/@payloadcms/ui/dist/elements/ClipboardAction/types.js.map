{"version":3,"file":"types.js","names":[],"sources":["../../../src/elements/ClipboardAction/types.ts"],"sourcesContent":["import type { TFunction } from '@payloadcms/translations'\nimport type { ClientBlock, ClientField, FormStateWithoutComponents } from 'payload'\n\nexport type ClipboardCopyBlocksSchema = {\n  schemaBlocks: ClientBlock[]\n}\n\nexport type ClipboardCopyBlocksData = {\n  blocks: ClientBlock[]\n  type: 'blocks'\n}\n\nexport type ClipboardCopyFieldsSchema = {\n  schemaFields: ClientField[]\n}\n\nexport type ClipboardCopyFieldsData = {\n  fields: ClientField[]\n  type: 'array'\n}\n\nexport type ClipboardCopyData = {\n  path: string\n  rowIndex?: number\n} & (ClipboardCopyBlocksData | ClipboardCopyFieldsData)\n\nexport type ClipboardCopyActionArgs = {\n  getDataToCopy: () => FormStateWithoutComponents\n  t: TFunction\n} & ClipboardCopyData\n\nexport type ClipboardPasteData = {\n  data: FormStateWithoutComponents\n  path: string\n  rowIndex?: number\n} & (ClipboardCopyBlocksData | ClipboardCopyFieldsData)\n\nexport type OnPasteFn = (data: ClipboardPasteData) => void\n\nexport type ClipboardPasteActionArgs = {\n  onPaste: OnPasteFn\n  path: string\n  t: TFunction\n} & (ClipboardCopyBlocksSchema | ClipboardCopyFieldsSchema)\n\nexport type ClipboardPasteActionValidateArgs = {\n  fieldPath: string\n} & (\n  | {\n      schemaBlocks: ClientBlock[]\n      type: 'blocks'\n    }\n  | {\n      schemaFields: ClientField[]\n      type: 'array'\n    }\n) &\n  ClipboardPasteData\n"],"mappings":"AA6CA","ignoreList":[]}