{"version":3,"file":"index.js","names":["c","_c","getTranslation","useRouter","qs","React","Fragment","useConfig","useLocale","useLocaleLoading","useRouteTransition","useTranslation","Popup","PopupList","LocalizerLabel","baseClass","Localizer","props","$","className","config","t0","localization","router","startRouteTransition","setLocaleIsLoading","i18n","locale","locales","t1","filter","Boolean","t2","join","t3","t4","t5","close","_jsx","ButtonGroup","children","map","localeOption","localeOptionLabel","label","Button","active","code","disabled","onClick","searchParams","URLSearchParams","window","location","search","url","stringify","parse","toString","depth","ignoreQueryPrefix","addQueryPrefix","push","_jsxs","button","horizontalAlign","render"],"sources":["../../../src/elements/Localizer/index.tsx"],"sourcesContent":["'use client'\nimport { getTranslation } from '@payloadcms/translations'\nimport { useRouter } from 'next/navigation.js'\nimport * as qs from 'qs-esm'\nimport React, { Fragment } from 'react'\n\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useLocale, useLocaleLoading } from '../../providers/Locale/index.js'\nimport { useRouteTransition } from '../../providers/RouteTransition/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { Popup, PopupList } from '../Popup/index.js'\nimport './index.scss'\nimport { LocalizerLabel } from './LocalizerLabel/index.js'\n\nconst baseClass = 'localizer'\n\nexport const Localizer: React.FC<{\n  className?: string\n}> = (props) => {\n  const { className } = props\n  const {\n    config: { localization },\n  } = useConfig()\n\n  const router = useRouter()\n  const { startRouteTransition } = useRouteTransition()\n\n  const { setLocaleIsLoading } = useLocaleLoading()\n\n  const { i18n } = useTranslation()\n  const locale = useLocale()\n\n  if (localization) {\n    const { locales } = localization\n\n    return (\n      <div className={[baseClass, className].filter(Boolean).join(' ')}>\n        <Popup\n          button={<LocalizerLabel />}\n          horizontalAlign=\"right\"\n          render={({ close }) => (\n            <PopupList.ButtonGroup>\n              {locales.map((localeOption) => {\n                const localeOptionLabel = getTranslation(localeOption.label, i18n)\n\n                return (\n                  <PopupList.Button\n                    active={locale.code === localeOption.code}\n                    disabled={locale.code === localeOption.code}\n                    key={localeOption.code}\n                    onClick={() => {\n                      setLocaleIsLoading(true)\n                      close()\n\n                      // can't use `useSearchParams` here because it is stale due to `window.history.pushState` in `ListQueryProvider`\n                      const searchParams = new URLSearchParams(window.location.search)\n\n                      const url = qs.stringify(\n                        {\n                          ...qs.parse(searchParams.toString(), {\n                            depth: 10,\n                            ignoreQueryPrefix: true,\n                          }),\n                          locale: localeOption.code,\n                        },\n                        { addQueryPrefix: true },\n                      )\n\n                      startRouteTransition(() => {\n                        router.push(url)\n                      })\n                    }}\n                  >\n                    {localeOptionLabel !== localeOption.code ? (\n                      <Fragment>\n                        {localeOptionLabel}\n                        &nbsp;\n                        <span\n                          className={`${baseClass}__locale-code`}\n                          data-locale={localeOption.code}\n                        >\n                          {`(${localeOption.code})`}\n                        </span>\n                      </Fragment>\n                    ) : (\n                      <span className={`${baseClass}__locale-code`} data-locale={localeOption.code}>\n                        {localeOptionLabel}\n                      </span>\n                    )}\n                  </PopupList.Button>\n                )\n              })}\n            </PopupList.ButtonGroup>\n          )}\n          showScrollbar\n          size=\"large\"\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n"],"mappings":"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","ignoreList":[]}