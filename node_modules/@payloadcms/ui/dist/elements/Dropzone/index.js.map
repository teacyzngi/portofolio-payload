{"version":3,"file":"index.js","names":["React","handleDragOver","e","preventDefault","stopPropagation","baseClass","Dropzone","children","className","disabled","dropzoneStyle","multipleFiles","onChange","dropRef","useRef","dragging","setDragging","useState","addFiles","useCallback","files","length","dataTransfer","DataTransfer","items","add","handlePaste","clipboardData","handleDragEnter","handleDragLeave","handleDrop","clearData","useEffect","div","current","addEventListener","removeEventListener","classes","filter","Boolean","join","_jsx","ref"],"sources":["../../../src/elements/Dropzone/index.tsx"],"sourcesContent":["'use client'\nimport React from 'react'\n\nimport './index.scss'\n\nconst handleDragOver = (e: DragEvent) => {\n  e.preventDefault()\n  e.stopPropagation()\n}\n\nconst baseClass = 'dropzone'\n\nexport type Props = {\n  readonly children?: React.ReactNode\n  readonly className?: string\n  readonly disabled?: boolean\n  readonly dropzoneStyle?: 'default' | 'none'\n  readonly multipleFiles?: boolean\n  readonly onChange: (e: FileList) => void\n}\n\nexport function Dropzone({\n  children,\n  className,\n  disabled = false,\n  dropzoneStyle = 'default',\n  multipleFiles,\n  onChange,\n}: Props) {\n  const dropRef = React.useRef<HTMLDivElement>(null)\n  const [dragging, setDragging] = React.useState(false)\n\n  const addFiles = React.useCallback(\n    (files: FileList) => {\n      if (!multipleFiles && files.length > 1) {\n        const dataTransfer = new DataTransfer()\n        dataTransfer.items.add(files[0])\n        onChange(dataTransfer.files)\n      } else {\n        onChange(files)\n      }\n    },\n    [multipleFiles, onChange],\n  )\n\n  const handlePaste = React.useCallback(\n    (e: ClipboardEvent) => {\n      e.preventDefault()\n      e.stopPropagation()\n\n      if (e.clipboardData.files && e.clipboardData.files.length > 0) {\n        addFiles(e.clipboardData.files)\n      }\n    },\n    [addFiles],\n  )\n\n  const handleDragEnter = React.useCallback((e: DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    setDragging(true)\n  }, [])\n\n  const handleDragLeave = React.useCallback((e: DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    setDragging(false)\n  }, [])\n\n  const handleDrop = React.useCallback(\n    (e: DragEvent) => {\n      e.preventDefault()\n      e.stopPropagation()\n      setDragging(false)\n\n      if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n        addFiles(e.dataTransfer.files)\n        setDragging(false)\n\n        e.dataTransfer.clearData()\n      }\n    },\n    [addFiles],\n  )\n\n  React.useEffect(() => {\n    const div = dropRef.current\n\n    if (div && !disabled) {\n      div.addEventListener('dragenter', handleDragEnter)\n      div.addEventListener('dragleave', handleDragLeave)\n      div.addEventListener('dragover', handleDragOver)\n      div.addEventListener('drop', handleDrop)\n      div.addEventListener('paste', handlePaste)\n\n      return () => {\n        div.removeEventListener('dragenter', handleDragEnter)\n        div.removeEventListener('dragleave', handleDragLeave)\n        div.removeEventListener('dragover', handleDragOver)\n        div.removeEventListener('drop', handleDrop)\n        div.removeEventListener('paste', handlePaste)\n      }\n    }\n\n    return () => null\n  }, [disabled, handleDragEnter, handleDragLeave, handleDrop, handlePaste])\n\n  const classes = [\n    baseClass,\n    className,\n    dragging ? 'dragging' : '',\n    `dropzoneStyle--${dropzoneStyle}`,\n  ]\n    .filter(Boolean)\n    .join(' ')\n\n  return (\n    <div className={classes} ref={dropRef}>\n      {children}\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}