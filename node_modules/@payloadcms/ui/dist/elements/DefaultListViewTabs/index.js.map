{"version":3,"file":"index.js","names":["c","_c","getTranslation","useRouter","formatAdminURL","React","usePreferences","useTranslation","Button","baseClass","DefaultListViewTabs","t0","$","collectionConfig","config","onChange","viewType","i18n","t","setPreference","router","isTrashEnabled","trash","isFoldersEnabled","folders","t1","slug","newViewType","listViewType","path","bb21","url","adminRoute","routes","admin","serverURL","push","handleViewChange","allButtonLabel","labels","plural","t2","t3","Symbol","for","allButtonId","toLowerCase","replace","t4","t5","filter","Boolean","t6","_jsxs","className","children","buttonStyle","join","disabled","el","id","onClick","_jsx"],"sources":["../../../src/elements/DefaultListViewTabs/index.tsx"],"sourcesContent":["'use client'\n\nimport type { ClientCollectionConfig, ClientConfig, ViewTypes } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { useRouter } from 'next/navigation.js'\nimport { formatAdminURL } from 'payload/shared'\nimport React from 'react'\n\nimport { usePreferences } from '../../providers/Preferences/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { Button } from '../Button/index.js'\nimport './index.scss'\n\nconst baseClass = 'default-list-view-tabs'\n\ntype DefaultListViewTabsProps = {\n  collectionConfig: ClientCollectionConfig\n  config: ClientConfig\n  onChange?: (viewType: ViewTypes) => void\n  viewType?: ViewTypes\n}\n\nexport const DefaultListViewTabs: React.FC<DefaultListViewTabsProps> = ({\n  collectionConfig,\n  config,\n  onChange,\n  viewType,\n}) => {\n  const { i18n, t } = useTranslation()\n  const { setPreference } = usePreferences()\n  const router = useRouter()\n  const isTrashEnabled = collectionConfig.trash\n  const isFoldersEnabled = collectionConfig.folders && config.folders\n\n  if (!isTrashEnabled && !isFoldersEnabled) {\n    return null\n  }\n\n  const handleViewChange = async (newViewType: ViewTypes) => {\n    if (onChange) {\n      onChange(newViewType)\n    }\n\n    if (newViewType === 'list' || newViewType === 'folders') {\n      await setPreference(`collection-${collectionConfig.slug}`, {\n        listViewType: newViewType,\n      })\n    }\n\n    let path: `/${string}` = `/collections/${collectionConfig.slug}`\n    switch (newViewType) {\n      case 'folders':\n        if (config.folders) {\n          path = `/collections/${collectionConfig.slug}/${config.folders.slug}`\n        }\n        break\n      case 'trash':\n        path = `/collections/${collectionConfig.slug}/trash`\n        break\n    }\n\n    const url = formatAdminURL({\n      adminRoute: config.routes.admin,\n      path,\n      serverURL: config.serverURL,\n    })\n\n    router.push(url)\n  }\n\n  const allButtonLabel = `${t('general:all')} ${getTranslation(collectionConfig?.labels?.plural, i18n)}`\n  const allButtonId = allButtonLabel.toLowerCase().replace(/\\s+/g, '-')\n\n  return (\n    <div className={baseClass}>\n      <Button\n        buttonStyle=\"tab\"\n        className={[`${baseClass}__button`, viewType === 'list' && `${baseClass}__button--active`]\n          .filter(Boolean)\n          .join(' ')}\n        disabled={viewType === 'list'}\n        el=\"button\"\n        id={allButtonId}\n        onClick={() => handleViewChange('list')}\n      >\n        {t('general:all')} {getTranslation(collectionConfig?.labels?.plural, i18n)}\n      </Button>\n\n      {isFoldersEnabled && (\n        <Button\n          buttonStyle=\"tab\"\n          className={[\n            `${baseClass}__button`,\n            viewType === 'folders' && `${baseClass}__button--active`,\n          ]\n            .filter(Boolean)\n            .join(' ')}\n          disabled={viewType === 'folders'}\n          el=\"button\"\n          onClick={() => handleViewChange('folders')}\n        >\n          {t('folder:byFolder')}\n        </Button>\n      )}\n\n      {isTrashEnabled && (\n        <Button\n          buttonStyle=\"tab\"\n          className={[\n            `${baseClass}__button`,\n            viewType === 'trash' && `${baseClass}__button--active`,\n          ]\n            .filter(Boolean)\n            .join(' ')}\n          disabled={viewType === 'trash'}\n          el=\"button\"\n          id=\"trash-view-pill\"\n          onClick={() => handleViewChange('trash')}\n        >\n          {t('general:trash')}\n        </Button>\n      )}\n    </div>\n  )\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AAIA,SAASC,cAAc,QAAQ;AAC/B,SAASC,SAAS,QAAQ;AAC1B,SAASC,cAAc,QAAQ;AAC/B,OAAOC,KAAA,MAAW;AAElB,SAASC,cAAc,QAAQ;AAC/B,SAASC,cAAc,QAAQ;AAC/B,SAASC,MAAM,QAAQ;AACvB,OAAO;AAEP,MAAMC,SAAA,GAAY;AASlB,OAAO,MAAMC,mBAAA,GAA0DC,EAAA;EAAA,MAAAC,CAAA,GAAAX,EAAA;EAAC;IAAAY,gBAAA;IAAAC,MAAA;IAAAC,QAAA;IAAAC;EAAA,IAAAL,EAKvE;EACC;IAAAM,IAAA;IAAAC;EAAA,IAAoBX,cAAA;EACpB;IAAAY;EAAA,IAA0Bb,cAAA;EAC1B,MAAAc,MAAA,GAAejB,SAAA;EACf,MAAAkB,cAAA,GAAuBR,gBAAA,CAAAS,KAAA;EACvB,MAAAC,gBAAA,GAAyBV,gBAAA,CAAAW,OAAA,IAA4BV,MAAA,CAAAU,OAAc;EAAA,IAE/D,CAACH,cAAA,KAAmBE,gBAAA;IAAA;EAAA;EAAA,IAAAE,EAAA;EAAA,IAAAb,CAAA,QAAAC,gBAAA,CAAAa,IAAA,IAAAd,CAAA,QAAAE,MAAA,IAAAF,CAAA,QAAAG,QAAA,IAAAH,CAAA,QAAAQ,MAAA,IAAAR,CAAA,QAAAO,aAAA;IAICM,EAAA,SAAAE,WAAA;MAAA,IACnBZ,QAAA;QACFA,QAAA,CAASY,WAAA;MAAA;MAAA,IAGPA,WAAA,KAAgB,UAAUA,WAAA,KAAgB;QAAA,MACtCR,aAAA,CAAc,cAAcN,gBAAA,CAAAa,IAAA,EAAuB;UAAAE,YAAA,EACzCD;QAAA,CAChB;MAAA;MAGF,IAAAE,IAAA,GAAyB,gBAAgBhB,gBAAA,CAAAa,IAAA,EAAuB;MAAAI,IAAA,UACxDH,WAAA;QAAA,KACD;UAAA;YAAA,IACCb,MAAA,CAAAU,OAAA;cACFK,IAAA,CAAAA,CAAA,CAAOA,gBAAgBhB,gBAAA,CAAAa,IAAA,IAAyBZ,MAAA,CAAAU,OAAA,CAAAE,IAAA,EAAqB;YAArE;YAAA,MAAAI,IAAA;UAAA;QAAA,KAGC;UAAA;YACHD,IAAA,CAAAA,CAAA,CAAOA,gBAAgBhB,gBAAA,CAAAa,IAAA,QAA6B;UAApD;MAAA;MAIJ,MAAAK,GAAA,GAAY3B,cAAA;QAAA4B,UAAA,EACElB,MAAA,CAAAmB,MAAA,CAAAC,KAAA;QAAAL,IAAA;QAAAM,SAAA,EAEDrB,MAAA,CAAAqB;MAAA,CACb;MAEAf,MAAA,CAAAgB,IAAA,CAAYL,GAAA;IAAA;IACdnB,CAAA,MAAAC,gBAAA,CAAAa,IAAA;IAAAd,CAAA,MAAAE,MAAA;IAAAF,CAAA,MAAAG,QAAA;IAAAH,CAAA,MAAAQ,MAAA;IAAAR,CAAA,MAAAO,aAAA;IAAAP,CAAA,MAAAa,EAAA;EAAA;IAAAA,EAAA,GAAAb,CAAA;EAAA;EA9BA,MAAAyB,gBAAA,GAAyBZ,EA8BzB;EAEA,MAAAa,cAAA,GAAuB,GAAGpB,CAAA,CAAE,kBAAkBhB,cAAA,CAAeW,gBAAA,EAAA0B,MAAA,EAAAC,MAAA,EAAkCvB,IAAA,GAAO;EAAA,IAAAwB,EAAA;EAAA,IAAA7B,CAAA,QAAA0B,cAAA,IAAA1B,CAAA,QAAAC,gBAAA,CAAA0B,MAAA,EAAAC,MAAA,IAAA5B,CAAA,QAAAyB,gBAAA,IAAAzB,CAAA,QAAAK,IAAA,IAAAL,CAAA,SAAAW,gBAAA,IAAAX,CAAA,SAAAS,cAAA,IAAAT,CAAA,SAAAM,CAAA,IAAAN,CAAA,SAAAI,QAAA;IAAA,IAAA0B,EAAA;IAAA,IAAA9B,CAAA,SAAA+B,MAAA,CAAAC,GAAA;MAC7CF,EAAA;MAAA9B,CAAA,OAAA8B,EAAA;IAAA;MAAAA,EAAA,GAAA9B,CAAA;IAAA;IAAzD,MAAAiC,WAAA,GAAoBP,cAAA,CAAAQ,WAAA,CAA0B,EAAAC,OAAA,CAAWL,EAAA,EAAQ;IAMvB,MAAAM,EAAA,GAAAhC,QAAA,KAAa,UAAU,GAAAP,SAAA,kBAA8B;IAAA,IAAAwC,EAAA;IAAA,IAAArC,CAAA,SAAAoC,EAAA;MAA9EC,EAAA,IAAC,GAAAxC,SAAA,UAAsB,EAAEuC,EAAqD,EAAAE,MAAA,CAAAC,OAC/E;MAAAvC,CAAA,OAAAoC,EAAA;MAAApC,CAAA,OAAAqC,EAAA;IAAA;MAAAA,EAAA,GAAArC,CAAA;IAAA;IAAA,IAAAwC,EAAA;IAAA,IAAAxC,CAAA,SAAAyB,gBAAA;MAKDe,EAAA,GAAAA,CAAA,KAAMf,gBAAA,CAAiB;MAAAzB,CAAA,OAAAyB,gBAAA;MAAAzB,CAAA,OAAAwC,EAAA;IAAA;MAAAA,EAAA,GAAAxC,CAAA;IAAA;IATpC6B,EAAA,GAAAY,KAAA,CAAC;MAAAC,SAAA,EAAA7C,SAAA;MAAA8C,QAAA,GACCF,KAAA,CAAA7C,MAAA;QAAAgD,WAAA,EACc;QAAAF,SAAA,EACDL,EACD,CAAAQ,IAAA,CACF;QAAAC,QAAA,EACE1C,QAAA,KAAa;QAAA2C,EAAA,EACpB;QAAAC,EAAA,EACCf,WAAA;QAAAgB,OAAA,EACKT,EAAuB;QAAAG,QAAA,GAE/BrC,CAAA,CAAE,gBAAe,KAAEhB,cAAA,CAAeW,gBAAA,EAAA0B,MAAA,EAAAC,MAAA,EAAkCvB,IAAA;MAAA,C,GAGtEM,gBAAA,IACCuC,IAAA,CAAAtD,MAAA;QAAAgD,WAAA,EACc;QAAAF,SAAA,EACD,CACT,GAAA7C,SAAA,UAAsB,EACtBO,QAAA,KAAa,aAAa,GAAAP,SAAA,kBAA8B,EAAAyC,MAAA,CAAAC,OAEhD,EAAAM,IAAA,CACF;QAAAC,QAAA,EACE1C,QAAA,KAAa;QAAA2C,EAAA,EACpB;QAAAE,OAAA,EAAAA,CAAA,KACYxB,gBAAA,CAAiB;QAAAkB,QAAA,EAE/BrC,CAAA,CAAE;MAAA,C,GAING,cAAA,IACCyC,IAAA,CAAAtD,MAAA;QAAAgD,WAAA,EACc;QAAAF,SAAA,EACD,CACT,GAAA7C,SAAA,UAAsB,EACtBO,QAAA,KAAa,WAAW,GAAAP,SAAA,kBAA8B,EAAAyC,MAAA,CAAAC,OAE9C,EAAAM,IAAA,CACF;QAAAC,QAAA,EACE1C,QAAA,KAAa;QAAA2C,EAAA,EACpB;QAAAC,EAAA,EACA;QAAAC,OAAA,EAAAA,CAAA,KACYxB,gBAAA,CAAiB;QAAAkB,QAAA,EAE/BrC,CAAA,CAAE;MAAA,C;;;;;;;;;;;;;;SA7CTuB,E;CAkDJ","ignoreList":[]}