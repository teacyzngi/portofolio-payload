{"version":3,"file":"index.js","names":["c","_c","getTranslation","React","useTranslation","ReactSelect","formatOptions","Select","t0","$","disabled","field","t1","isClearable","onChange","operator","options","optionsFromProps","value","admin","t2","placeholder","i18n","t3","setOptions","useState","t4","Symbol","for","isMulti","includes","valueToRender","Array","isArray","t5","val","matchingOption","find","option","label","map","option_0","matchingOption_0","selectedOption","newValue","_temp","onSelect","t6","t7","useEffect","t8","t9","t10","option_2","_jsx","option_1"],"sources":["../../../../../src/elements/WhereBuilder/Condition/Select/index.tsx"],"sourcesContent":["'use client'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport React from 'react'\n\nimport type { SelectFilterProps as Props } from './types.js'\n\nimport { useTranslation } from '../../../../providers/Translation/index.js'\nimport { ReactSelect } from '../../../ReactSelect/index.js'\nimport { formatOptions } from './formatOptions.js'\n\nexport const Select: React.FC<Props> = ({\n  disabled,\n  field: {\n    admin: { placeholder },\n  },\n  isClearable,\n  onChange,\n  operator,\n  options: optionsFromProps,\n  value,\n}) => {\n  const { i18n } = useTranslation()\n  const [options, setOptions] = React.useState(formatOptions(optionsFromProps))\n\n  const isMulti = ['in', 'not_in'].includes(operator)\n  let valueToRender\n\n  if (isMulti && Array.isArray(value)) {\n    valueToRender = value.map((val) => {\n      const matchingOption = options.find((option) => option.value === val)\n      return {\n        label: matchingOption ? getTranslation(matchingOption.label, i18n) : val,\n        value: matchingOption?.value ?? val,\n      }\n    })\n  } else if (value) {\n    const matchingOption = options.find((option) => option.value === value)\n    valueToRender = {\n      label: matchingOption ? getTranslation(matchingOption.label, i18n) : value,\n      value: matchingOption?.value ?? value,\n    }\n  }\n\n  const onSelect = React.useCallback(\n    (selectedOption) => {\n      let newValue\n\n      if (!selectedOption) {\n        newValue = null\n      } else if (isMulti) {\n        if (Array.isArray(selectedOption)) {\n          newValue = selectedOption.map((option) => option.value)\n        } else {\n          newValue = []\n        }\n      } else {\n        newValue = selectedOption.value\n      }\n\n      onChange(newValue)\n    },\n    [isMulti, onChange],\n  )\n\n  React.useEffect(() => {\n    setOptions(formatOptions(optionsFromProps))\n  }, [optionsFromProps])\n\n  React.useEffect(() => {\n    if (!isMulti && Array.isArray(value)) {\n      onChange(value[0])\n    }\n  }, [isMulti, onChange, value])\n\n  return (\n    <ReactSelect\n      disabled={disabled}\n      isClearable={isClearable}\n      isMulti={isMulti}\n      onChange={onSelect}\n      options={options.map((option) => ({ ...option, label: getTranslation(option.label, i18n) }))}\n      placeholder={placeholder}\n      value={valueToRender}\n    />\n  )\n}\n"],"mappings":"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","ignoreList":[]}