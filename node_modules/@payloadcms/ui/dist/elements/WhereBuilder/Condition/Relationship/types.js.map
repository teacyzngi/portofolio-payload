{"version":3,"file":"types.js","names":[],"sources":["../../../../../src/elements/WhereBuilder/Condition/Relationship/types.ts"],"sourcesContent":["import type { I18nClient } from '@payloadcms/translations'\nimport type {\n  ClientCollectionConfig,\n  PaginatedDocs,\n  RelationshipFieldClient,\n  ResolvedFilterOptions,\n} from 'payload'\n\nimport type { DefaultFilterProps } from '../types.js'\n\nexport type RelationshipFilterProps = {\n  readonly field: RelationshipFieldClient\n  readonly filterOptions: ResolvedFilterOptions\n} & DefaultFilterProps\n\nexport type Option = {\n  label: string\n  options?: Option[]\n  relationTo?: string | string[]\n  value: string\n}\n\ntype CLEAR = {\n  i18n: I18nClient\n  required: boolean\n  type: 'CLEAR'\n}\n\ntype ADD = {\n  collection: ClientCollectionConfig\n  data: PaginatedDocs<any>\n  hasMultipleRelations: boolean\n  i18n: I18nClient\n  relation: string\n  type: 'ADD'\n}\n\nexport type Action = ADD | CLEAR\n\nexport type ValueWithRelation = {\n  relationTo: string\n  value: string\n}\n\nexport type GetResults = (args: {\n  lastFullyLoadedRelation?: number\n  lastLoadedPage?: number\n  search?: string\n}) => Promise<void>\n"],"mappings":"AA4CA","ignoreList":[]}