{"version":3,"file":"index.js","names":["qs","React","useCallback","useEffect","useReducer","useState","useDebounce","useEffectEvent","useConfig","useLocale","useTranslation","ReactSelect","optionsReducer","baseClass","maxResultsPerRequest","RelationshipFilter","props","disabled","field","admin","isSortable","placeholder","hasMany","relationTo","filterOptions","onChange","value","config","routes","api","serverURL","getEntityConfig","hasMultipleRelations","Array","isArray","options","dispatchOptions","search","setSearch","debouncedSearch","errorLoading","setErrorLoading","hasLoadedFirstOptions","setHasLoadedFirstOptions","i18n","t","locale","relationSlugs","loadedRelationships","useRef","Map","map","relation","hasLoadedAll","nextPage","addOptions","data","collection","collectionSlug","type","loadOptions","abortController","relationSlug","loadedRelationship","current","get","fieldToSearch","useAsTitle","where","and","query","depth","limit","code","page","select","push","like","response","fetch","stringify","addQueryPrefix","credentials","headers","language","signal","ok","json","docs","length","set","e","aborted","console","error","handleScrollToBottom","relationshipToLoad","entries","next","AbortController","findOptionsByValue","val","matchedOption","forEach","opt","some","subOpt","find","undefined","valueWithRelation","handleInputChange","input","required","addOptionByID","id","relations","abortControllers","controller","abort","_err","matchedOptions","option","i","classes","filter","Boolean","join","valueToRender","_jsx","className","isMulti","selected","onInputChange","onMenuScrollToBottom"],"sources":["../../../../../src/elements/WhereBuilder/Condition/Relationship/index.tsx"],"sourcesContent":["'use client'\nimport type { PaginatedDocs, Where } from 'payload'\n\nimport * as qs from 'qs-esm'\nimport React, { useCallback, useEffect, useReducer, useState } from 'react'\n\nimport type { Option } from '../../../ReactSelect/types.js'\nimport type { RelationshipFilterProps as Props, ValueWithRelation } from './types.js'\n\nimport { useDebounce } from '../../../../hooks/useDebounce.js'\nimport { useEffectEvent } from '../../../../hooks/useEffectEvent.js'\nimport { useConfig } from '../../../../providers/Config/index.js'\nimport { useLocale } from '../../../../providers/Locale/index.js'\nimport { useTranslation } from '../../../../providers/Translation/index.js'\nimport { ReactSelect } from '../../../ReactSelect/index.js'\nimport optionsReducer from './optionsReducer.js'\nimport './index.scss'\n\nconst baseClass = 'condition-value-relationship'\n\nconst maxResultsPerRequest = 10\n\nexport const RelationshipFilter: React.FC<Props> = (props) => {\n  const {\n    disabled,\n    field: { admin: { isSortable, placeholder } = {}, hasMany, relationTo },\n    filterOptions,\n    onChange,\n    value,\n  } = props\n\n  const {\n    config: {\n      routes: { api },\n      serverURL,\n    },\n    getEntityConfig,\n  } = useConfig()\n\n  const hasMultipleRelations = Array.isArray(relationTo)\n  const [options, dispatchOptions] = useReducer(optionsReducer, [])\n  const [search, setSearch] = useState('')\n  const debouncedSearch = useDebounce(search, 300)\n  const [errorLoading, setErrorLoading] = useState('')\n  const [hasLoadedFirstOptions, setHasLoadedFirstOptions] = useState(false)\n  const { i18n, t } = useTranslation()\n  const locale = useLocale()\n\n  const relationSlugs = hasMultipleRelations ? relationTo : [relationTo]\n\n  const loadedRelationships = React.useRef<\n    Map<\n      string,\n      {\n        hasLoadedAll: boolean\n        nextPage: number\n      }\n    >\n  >(\n    new Map(\n      relationSlugs.map((relation) => [\n        relation,\n        {\n          hasLoadedAll: false,\n          nextPage: 1,\n        },\n      ]),\n    ),\n  )\n\n  const addOptions = useCallback(\n    (data, relation) => {\n      const collection = getEntityConfig({ collectionSlug: relation })\n      dispatchOptions({ type: 'ADD', collection, data, hasMultipleRelations, i18n, relation })\n    },\n    [hasMultipleRelations, i18n, getEntityConfig],\n  )\n\n  const loadOptions = useEffectEvent(\n    async ({\n      abortController,\n      relationSlug,\n    }: {\n      abortController: AbortController\n      relationSlug: string\n    }) => {\n      const loadedRelationship = loadedRelationships.current.get(relationSlug)\n\n      if (relationSlug && !loadedRelationship.hasLoadedAll) {\n        const collection = getEntityConfig({\n          collectionSlug: relationSlug,\n        })\n\n        const fieldToSearch = collection?.admin?.useAsTitle || 'id'\n\n        const where: Where = {\n          and: [],\n        }\n\n        const query = {\n          depth: 0,\n          limit: maxResultsPerRequest,\n          locale: locale.code,\n          page: loadedRelationship.nextPage,\n          select: {\n            [fieldToSearch]: true,\n          },\n          where,\n        }\n\n        if (filterOptions && filterOptions?.[relationSlug]) {\n          query.where.and.push(filterOptions[relationSlug])\n        }\n\n        if (debouncedSearch) {\n          query.where.and.push({\n            [fieldToSearch]: {\n              like: debouncedSearch,\n            },\n          })\n        }\n\n        try {\n          const response = await fetch(\n            `${serverURL}${api}/${relationSlug}${qs.stringify(query, { addQueryPrefix: true })}`,\n            {\n              credentials: 'include',\n              headers: {\n                'Accept-Language': i18n.language,\n              },\n              signal: abortController.signal,\n            },\n          )\n\n          if (response.ok) {\n            const data: PaginatedDocs = await response.json()\n            if (data.docs.length > 0) {\n              addOptions(data, relationSlug)\n\n              if (data.nextPage) {\n                loadedRelationships.current.set(relationSlug, {\n                  hasLoadedAll: false,\n                  nextPage: data.nextPage,\n                })\n              } else {\n                loadedRelationships.current.set(relationSlug, {\n                  hasLoadedAll: true,\n                  nextPage: null,\n                })\n              }\n            }\n          } else {\n            setErrorLoading(t('error:unspecific'))\n          }\n        } catch (e) {\n          if (!abortController.signal.aborted) {\n            console.error(e) // eslint-disable-line no-console\n          }\n        }\n      }\n\n      setHasLoadedFirstOptions(true)\n    },\n  )\n\n  const handleScrollToBottom = React.useCallback(() => {\n    const relationshipToLoad = loadedRelationships.current.entries().next().value\n\n    if (relationshipToLoad[0] && !relationshipToLoad[1].hasLoadedAll) {\n      const abortController = new AbortController()\n\n      void loadOptions({\n        abortController,\n        relationSlug: relationshipToLoad[0],\n      })\n    }\n  }, [])\n\n  const findOptionsByValue = useCallback((): Option | Option[] => {\n    if (value) {\n      if (hasMany) {\n        if (Array.isArray(value)) {\n          return value.map((val) => {\n            if (hasMultipleRelations) {\n              let matchedOption: Option\n\n              options.forEach((opt) => {\n                if (opt.options) {\n                  opt.options.some((subOpt) => {\n                    if (subOpt?.value == val.value) {\n                      matchedOption = subOpt\n                      return true\n                    }\n\n                    return false\n                  })\n                }\n              })\n\n              return matchedOption\n            }\n\n            return options.find((opt) => opt.value == val)\n          })\n        }\n\n        return undefined\n      }\n\n      if (hasMultipleRelations) {\n        let matchedOption: Option\n\n        const valueWithRelation = value as ValueWithRelation\n\n        options.forEach((opt) => {\n          if (opt?.options) {\n            opt.options.some((subOpt) => {\n              if (subOpt?.value == valueWithRelation.value) {\n                matchedOption = subOpt\n                return true\n              }\n              return false\n            })\n          }\n        })\n\n        return matchedOption\n      }\n\n      return options.find((opt) => opt.value == value)\n    }\n\n    return undefined\n  }, [hasMany, hasMultipleRelations, value, options])\n\n  const handleInputChange = useCallback(\n    (input: string) => {\n      if (input !== search) {\n        dispatchOptions({ type: 'CLEAR', i18n, required: false })\n\n        const relationSlugs = Array.isArray(relationTo) ? relationTo : [relationTo]\n\n        loadedRelationships.current = new Map(\n          relationSlugs.map((relation) => [\n            relation,\n            {\n              hasLoadedAll: false,\n              nextPage: 1,\n            },\n          ]),\n        )\n\n        setSearch(input)\n      }\n    },\n    [i18n, relationTo, search],\n  )\n\n  const addOptionByID = useCallback(\n    async (id, relation) => {\n      if (!errorLoading && id !== 'null' && id && relation) {\n        const response = await fetch(`${serverURL}${api}/${relation}/${id}?depth=0`, {\n          credentials: 'include',\n          headers: {\n            'Accept-Language': i18n.language,\n          },\n        })\n\n        if (response.ok) {\n          const data = await response.json()\n          addOptions({ docs: [data] }, relation)\n        } else {\n          // eslint-disable-next-line no-console\n          console.error(t('error:loadingDocument', { id }))\n        }\n      }\n    },\n    [i18n, addOptions, api, errorLoading, serverURL, t],\n  )\n\n  /**\n   * When `relationTo` changes externally, reset the options and reload them from scratch\n   * The `loadOptions` dependency is a useEffectEvent which has no dependencies of its own\n   * This means we can safely depend on it without it triggering this effect to run\n   * This is useful because this effect should _only_ run when `relationTo` changes\n   */\n  useEffect(() => {\n    const relations = Array.isArray(relationTo) ? relationTo : [relationTo]\n\n    loadedRelationships.current = new Map(\n      relations.map((relation) => [\n        relation,\n        {\n          hasLoadedAll: false,\n          nextPage: 1,\n        },\n      ]),\n    )\n\n    dispatchOptions({ type: 'CLEAR', i18n, required: false })\n    setHasLoadedFirstOptions(false)\n\n    const abortControllers: AbortController[] = []\n\n    relations.forEach((relation) => {\n      const abortController = new AbortController()\n\n      void loadOptions({\n        abortController,\n        relationSlug: relation,\n      })\n\n      abortControllers.push(abortController)\n    })\n\n    return () => {\n      abortControllers.forEach((controller) => {\n        if (controller.signal) {\n          try {\n            controller.abort()\n          } catch (_err) {\n            // swallow error\n          }\n        }\n      })\n    }\n  }, [i18n, relationTo, debouncedSearch, filterOptions])\n\n  /**\n   * Load any other options that might exist in the value that were not loaded already\n   */\n  useEffect(() => {\n    if (value && hasLoadedFirstOptions) {\n      if (hasMany) {\n        const matchedOptions = findOptionsByValue()\n\n        ;((matchedOptions as Option[]) || []).forEach((option, i) => {\n          if (!option) {\n            if (hasMultipleRelations) {\n              void addOptionByID(value[i].value, value[i].relationTo)\n            } else {\n              void addOptionByID(value[i], relationTo)\n            }\n          }\n        })\n      } else {\n        const matchedOption = findOptionsByValue()\n\n        if (!matchedOption) {\n          if (hasMultipleRelations) {\n            const valueWithRelation = value as ValueWithRelation\n            void addOptionByID(valueWithRelation.value, valueWithRelation.relationTo)\n          } else {\n            void addOptionByID(value, relationTo)\n          }\n        }\n      }\n    }\n  }, [\n    addOptionByID,\n    findOptionsByValue,\n    hasMany,\n    hasMultipleRelations,\n    relationTo,\n    value,\n    hasLoadedFirstOptions,\n  ])\n\n  const classes = ['field-type', baseClass, errorLoading && 'error-loading']\n    .filter(Boolean)\n    .join(' ')\n\n  const valueToRender = (findOptionsByValue() || value) as Option\n\n  return (\n    <div className={classes}>\n      {errorLoading ? (\n        <div className={`${baseClass}__error-loading`}>{errorLoading}</div>\n      ) : (\n        <ReactSelect\n          disabled={disabled}\n          isMulti={hasMany}\n          isSortable={isSortable}\n          onChange={(selected) => {\n            if (!selected) {\n              onChange(null)\n              return\n            }\n\n            if (hasMany && Array.isArray(selected)) {\n              onChange(\n                selected\n                  ? selected.map((option) => {\n                      if (hasMultipleRelations) {\n                        return {\n                          relationTo: option?.relationTo,\n                          value: option?.value,\n                        }\n                      }\n\n                      return option?.value\n                    })\n                  : null,\n              )\n            } else if (hasMultipleRelations && !Array.isArray(selected)) {\n              onChange({\n                relationTo: selected?.relationTo,\n                value: selected?.value,\n              })\n            } else if (!Array.isArray(selected)) {\n              onChange(selected?.value)\n            }\n          }}\n          onInputChange={handleInputChange}\n          onMenuScrollToBottom={handleScrollToBottom}\n          options={options}\n          placeholder={placeholder}\n          value={valueToRender}\n        />\n      )}\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}