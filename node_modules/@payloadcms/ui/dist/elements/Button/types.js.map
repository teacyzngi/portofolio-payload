{"version":3,"file":"types.js","names":[],"sources":["../../../src/elements/Button/types.ts"],"sourcesContent":["import type { ElementType, MouseEvent } from 'react'\nimport type React from 'react'\n\ntype secondaryAction = {\n  label: string\n  onClick: (event: MouseEvent) => void\n}\n\nexport type Props = {\n  'aria-label'?: string\n  buttonId?: string\n  buttonStyle?:\n    | 'error'\n    | 'icon-label'\n    | 'none'\n    | 'pill'\n    | 'primary'\n    | 'secondary'\n    | 'subtle'\n    | 'tab'\n    | 'transparent'\n  children?: React.ReactNode\n  className?: string\n  disabled?: boolean\n  el?: 'anchor' | 'link' | ElementType\n  /**\n   * Setting to `true` will allow the submenu to be opened when the button is disabled\n   */\n  enableSubMenu?: boolean\n  extraButtonProps?: Record<string, any>\n  icon?: ['chevron' | 'edit' | 'plus' | 'x'] | React.ReactNode\n  iconPosition?: 'left' | 'right'\n  iconStyle?: 'none' | 'with-border' | 'without-border'\n  id?: string\n  /**\n   * @deprecated\n   * This prop is deprecated and will be removed in the next major version.\n   * Components now import their own `Link` directly from `next/link`.\n   */\n  Link?: React.ElementType\n  margin?: boolean\n  newTab?: boolean\n  onClick?: (event: MouseEvent) => void\n  onMouseDown?: (event: MouseEvent) => void\n  /**\n   * Enables form submission via an onClick handler. This is only needed if\n   * type=\"submit\" does not trigger form submission, e.g. if the button DOM\n   * element is not a direct child of the form element.\n   *\n   * @default false\n   */\n  programmaticSubmit?: boolean\n  ref?: React.RefObject<HTMLAnchorElement | HTMLButtonElement | null>\n  round?: boolean\n  secondaryActions?: secondaryAction | secondaryAction[]\n  size?: 'large' | 'medium' | 'small' | 'xsmall'\n  SubMenuPopupContent?: (props: { close: () => void }) => React.ReactNode\n  to?: string\n  tooltip?: string\n  type?: 'button' | 'submit'\n  url?: string\n}\n"],"mappings":"AAQA","ignoreList":[]}