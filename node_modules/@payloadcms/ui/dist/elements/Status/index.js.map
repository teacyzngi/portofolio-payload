{"version":3,"file":"index.js","names":["useModal","React","useCallback","toast","useForm","useConfig","useDocumentInfo","useLocale","useTranslation","requests","Button","ConfirmationModal","baseClass","Status","id","collectionSlug","docPermissions","globalSlug","hasPublishedDoc","incrementVersionCount","isTrashed","setHasPublishedDoc","setMostRecentVersionIsAutosaved","setUnpublishedVersionCount","unpublishedVersionCount","toggleModal","config","routes","api","serverURL","reset","resetForm","code","locale","i18n","t","unPublishModalSlug","revertModalSlug","statusToRender","displayStatusKey","performAction","action","url","method","body","_status","publishedDoc","get","headers","language","then","res","json","JSON","stringify","status","data","result","doc","success","message","errors","error","err","canUpdate","update","_jsx","className","title","_jsxs","Fragment","buttonStyle","onClick","confirmingLabel","heading","modalSlug","onConfirm"],"sources":["../../../src/elements/Status/index.tsx"],"sourcesContent":["'use client'\nimport { useModal } from '@faceless-ui/modal'\nimport React, { useCallback } from 'react'\nimport { toast } from 'sonner'\n\nimport { useForm } from '../../forms/Form/context.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useDocumentInfo } from '../../providers/DocumentInfo/index.js'\nimport { useLocale } from '../../providers/Locale/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { requests } from '../../utilities/api.js'\nimport { Button } from '../Button/index.js'\nimport { ConfirmationModal } from '../ConfirmationModal/index.js'\nimport './index.scss'\n\nconst baseClass = 'status'\n\nexport const Status: React.FC = () => {\n  const {\n    id,\n    collectionSlug,\n    docPermissions,\n    globalSlug,\n    hasPublishedDoc,\n    incrementVersionCount,\n    isTrashed,\n    setHasPublishedDoc,\n    setMostRecentVersionIsAutosaved,\n    setUnpublishedVersionCount,\n    unpublishedVersionCount,\n  } = useDocumentInfo()\n\n  const { toggleModal } = useModal()\n\n  const {\n    config: {\n      routes: { api },\n      serverURL,\n    },\n  } = useConfig()\n\n  const { reset: resetForm } = useForm()\n  const { code: locale } = useLocale()\n  const { i18n, t } = useTranslation()\n\n  const unPublishModalSlug = `confirm-un-publish-${id}`\n  const revertModalSlug = `confirm-revert-${id}`\n\n  let statusToRender: 'changed' | 'draft' | 'published'\n\n  if (unpublishedVersionCount > 0 && hasPublishedDoc) {\n    statusToRender = 'changed'\n  } else if (!hasPublishedDoc) {\n    statusToRender = 'draft'\n  } else if (hasPublishedDoc && unpublishedVersionCount <= 0) {\n    statusToRender = 'published'\n  }\n\n  const displayStatusKey = isTrashed\n    ? hasPublishedDoc\n      ? 'previouslyPublished'\n      : 'previouslyDraft'\n    : statusToRender\n\n  const performAction = useCallback(\n    async (action: 'revert' | 'unpublish') => {\n      let url\n      let method\n      let body\n\n      if (action === 'unpublish') {\n        body = {\n          _status: 'draft',\n        }\n      }\n\n      if (collectionSlug) {\n        url = `${serverURL}${api}/${collectionSlug}/${id}?locale=${locale}&fallback-locale=null&depth=0`\n        method = 'patch'\n      }\n\n      if (globalSlug) {\n        url = `${serverURL}${api}/globals/${globalSlug}?locale=${locale}&fallback-locale=null&depth=0`\n        method = 'post'\n      }\n\n      if (action === 'revert') {\n        const publishedDoc = await requests\n          .get(url, {\n            headers: {\n              'Accept-Language': i18n.language,\n              'Content-Type': 'application/json',\n            },\n          })\n          .then((res) => res.json())\n\n        body = publishedDoc\n      }\n\n      const res = await requests[method](url, {\n        body: JSON.stringify(body),\n        headers: {\n          'Accept-Language': i18n.language,\n          'Content-Type': 'application/json',\n        },\n      })\n\n      if (res.status === 200) {\n        let data\n        const json = await res.json()\n\n        if (globalSlug) {\n          data = json.result\n        } else if (collectionSlug) {\n          data = json.doc\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        resetForm(data)\n        toast.success(json.message)\n        incrementVersionCount()\n        setMostRecentVersionIsAutosaved(false)\n\n        if (action === 'unpublish') {\n          setHasPublishedDoc(false)\n        } else if (action === 'revert') {\n          setUnpublishedVersionCount(0)\n        }\n      } else {\n        try {\n          const json = await res.json()\n          if (json.errors?.[0]?.message) {\n            toast.error(json.errors[0].message)\n          } else if (json.error) {\n            toast.error(json.error)\n          } else {\n            toast.error(t('error:unPublishingDocument'))\n          }\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        } catch (err) {\n          toast.error(t('error:unPublishingDocument'))\n        }\n      }\n    },\n    [\n      api,\n      collectionSlug,\n      globalSlug,\n      id,\n      i18n.language,\n      incrementVersionCount,\n      locale,\n      resetForm,\n      serverURL,\n      setUnpublishedVersionCount,\n      setMostRecentVersionIsAutosaved,\n      t,\n      setHasPublishedDoc,\n    ],\n  )\n\n  const canUpdate = docPermissions?.update\n\n  if (statusToRender) {\n    return (\n      <div\n        className={baseClass}\n        title={`${t('version:status')}: ${t(`version:${displayStatusKey}`)}`}\n      >\n        <div className={`${baseClass}__value-wrap`}>\n          <span className={`${baseClass}__label`}>{t('version:status')}:&nbsp;</span>\n          <span className={`${baseClass}__value`}>{t(`version:${displayStatusKey}`)}</span>\n          {!isTrashed && canUpdate && statusToRender === 'published' && (\n            <React.Fragment>\n              &nbsp;&mdash;&nbsp;\n              <Button\n                buttonStyle=\"none\"\n                className={`${baseClass}__action`}\n                id={`action-unpublish`}\n                onClick={() => toggleModal(unPublishModalSlug)}\n              >\n                {t('version:unpublish')}\n              </Button>\n              <ConfirmationModal\n                body={t('version:aboutToUnpublish')}\n                confirmingLabel={t('version:unpublishing')}\n                heading={t('version:confirmUnpublish')}\n                modalSlug={unPublishModalSlug}\n                onConfirm={() => performAction('unpublish')}\n              />\n            </React.Fragment>\n          )}\n          {!isTrashed &&\n            canUpdate &&\n            hasPublishedDoc &&\n            statusToRender === 'changed' && (\n              <React.Fragment>\n                &nbsp;&mdash;&nbsp;\n                <Button\n                  buttonStyle=\"none\"\n                  className={`${baseClass}__action`}\n                  id=\"action-revert-to-published\"\n                  onClick={() => toggleModal(revertModalSlug)}\n                >\n                  {t('version:revertToPublished')}\n                </Button>\n                <ConfirmationModal\n                  body={t('version:aboutToRevertToPublished')}\n                  confirmingLabel={t('version:reverting')}\n                  heading={t('version:confirmRevertToSaved')}\n                  modalSlug={revertModalSlug}\n                  onConfirm={() => performAction('revert')}\n                />\n              </React.Fragment>\n            )}\n        </div>\n      </div>\n    )\n  }\n\n  return null\n}\n"],"mappings":"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","ignoreList":[]}