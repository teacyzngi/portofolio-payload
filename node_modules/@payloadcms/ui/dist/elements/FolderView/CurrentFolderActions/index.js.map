{"version":3,"file":"index.js","names":["useModal","getTranslation","useRouter","React","toast","Dots","useConfig","useFolder","useRouteCache","useRouteTransition","useTranslation","ConfirmationModal","useDocumentDrawer","Popup","PopupList","Translation","MoveItemsToFolderDrawer","moveToFolderDrawerSlug","confirmDeleteDrawerSlug","baseClass","CurrentFolderActions","className","router","startRouteTransition","breadcrumbs","currentFolder","folderCollectionConfig","folderCollectionSlug","folderFieldName","folderID","getFolderRoute","moveToFolder","FolderDocumentDrawer","closeDrawer","closeFolderDrawer","openDrawer","openFolderDrawer","id","collectionSlug","clearRouteCache","config","routes","serverURL","closeModal","openModal","i18n","t","deleteCurrentFolder","useCallback","fetch","api","credentials","method","push","length","_jsxs","_Fragment","_jsx","button","filter","Boolean","join","render","ButtonGroup","Button","onClick","label","labels","singular","action","drawerSlug","folderAssignedCollections","value","folderType","fromFolderID","fromFolderName","_folderOrDocumentTitle","itemsToMove","onConfirm","name","toFolderID","success","folderName","title","body","elements","1","children","i18nKey","variables","confirmingLabel","heading","modalSlug","onSave"],"sources":["../../../../src/elements/FolderView/CurrentFolderActions/index.tsx"],"sourcesContent":["import { useModal } from '@faceless-ui/modal'\nimport { getTranslation } from '@payloadcms/translations'\nimport { useRouter } from 'next/navigation.js'\nimport React from 'react'\nimport { toast } from 'sonner'\n\nimport { Dots } from '../../../icons/Dots/index.js'\nimport { useConfig } from '../../../providers/Config/index.js'\nimport { useFolder } from '../../../providers/Folders/index.js'\nimport { useRouteCache } from '../../../providers/RouteCache/index.js'\nimport { useRouteTransition } from '../../../providers/RouteTransition/index.js'\nimport { useTranslation } from '../../../providers/Translation/index.js'\nimport { ConfirmationModal } from '../../ConfirmationModal/index.js'\nimport { useDocumentDrawer } from '../../DocumentDrawer/index.js'\nimport { Popup, PopupList } from '../../Popup/index.js'\nimport { Translation } from '../../Translation/index.js'\nimport { MoveItemsToFolderDrawer } from '../Drawers/MoveToFolder/index.js'\n\nconst moveToFolderDrawerSlug = 'move-to-folder--current-folder'\nconst confirmDeleteDrawerSlug = 'confirm-many-delete'\n\nconst baseClass = 'current-folder-actions'\n\ntype Props = {\n  className?: string\n}\nexport function CurrentFolderActions({ className }: Props) {\n  const router = useRouter()\n  const { startRouteTransition } = useRouteTransition()\n  const {\n    breadcrumbs,\n    currentFolder,\n    folderCollectionConfig,\n    folderCollectionSlug,\n    folderFieldName,\n    folderID,\n    getFolderRoute,\n    moveToFolder,\n  } = useFolder()\n  const [FolderDocumentDrawer, , { closeDrawer: closeFolderDrawer, openDrawer: openFolderDrawer }] =\n    useDocumentDrawer({\n      id: folderID,\n      collectionSlug: folderCollectionSlug,\n    })\n  const { clearRouteCache } = useRouteCache()\n  const { config } = useConfig()\n  const { routes, serverURL } = config\n  const { closeModal, openModal } = useModal()\n  const { i18n, t } = useTranslation()\n\n  const deleteCurrentFolder = React.useCallback(async () => {\n    await fetch(`${serverURL}${routes.api}/${folderCollectionSlug}/${folderID}?depth=0`, {\n      credentials: 'include',\n      method: 'DELETE',\n    })\n    startRouteTransition(() => {\n      router.push(getFolderRoute(breadcrumbs[breadcrumbs.length - 2]?.id || null))\n    })\n  }, [\n    breadcrumbs,\n    folderCollectionSlug,\n    folderID,\n    getFolderRoute,\n    router,\n    serverURL,\n    routes.api,\n    startRouteTransition,\n  ])\n\n  if (!folderID) {\n    return null\n  }\n\n  return (\n    <>\n      <Popup\n        button={<Dots />}\n        className={[baseClass, className].filter(Boolean).join(' ')}\n        render={() => (\n          <PopupList.ButtonGroup>\n            <PopupList.Button\n              onClick={() => {\n                openFolderDrawer()\n              }}\n            >\n              {t('general:editLabel', {\n                label: getTranslation(folderCollectionConfig.labels.singular, i18n),\n              })}\n            </PopupList.Button>\n            <PopupList.Button\n              onClick={() => {\n                openModal(moveToFolderDrawerSlug)\n              }}\n            >\n              {t('folder:moveFolder')}\n            </PopupList.Button>\n            <PopupList.Button\n              onClick={() => {\n                openModal(confirmDeleteDrawerSlug)\n              }}\n            >\n              {t('folder:deleteFolder')}\n            </PopupList.Button>\n          </PopupList.ButtonGroup>\n        )}\n      />\n      <MoveItemsToFolderDrawer\n        action=\"moveItemToFolder\"\n        drawerSlug={moveToFolderDrawerSlug}\n        folderAssignedCollections={currentFolder?.value.folderType}\n        folderCollectionSlug={folderCollectionSlug}\n        folderFieldName={folderFieldName}\n        fromFolderID={currentFolder?.value.id}\n        fromFolderName={currentFolder?.value._folderOrDocumentTitle}\n        itemsToMove={[currentFolder]}\n        onConfirm={async ({ id, name }) => {\n          await moveToFolder({\n            itemsToMove: [currentFolder],\n            toFolderID: id,\n          })\n          if (id) {\n            // moved to folder\n            toast.success(\n              t('folder:itemHasBeenMoved', {\n                folderName: `\"${name}\"`,\n                title: currentFolder.value._folderOrDocumentTitle,\n              }),\n            )\n          } else {\n            // moved to root\n            toast.success(\n              t('folder:itemHasBeenMovedToRoot', {\n                title: currentFolder.value._folderOrDocumentTitle,\n              }),\n            )\n          }\n          closeModal(moveToFolderDrawerSlug)\n        }}\n        title={currentFolder.value._folderOrDocumentTitle}\n      />\n\n      <ConfirmationModal\n        body={\n          <Translation\n            elements={{\n              '1': ({ children }) => <strong>{children}</strong>,\n            }}\n            i18nKey=\"general:aboutToDelete\"\n            t={t}\n            variables={{\n              label: getTranslation(folderCollectionConfig.labels.singular, i18n),\n              title: currentFolder.value._folderOrDocumentTitle,\n            }}\n          />\n        }\n        confirmingLabel={t('general:deleting')}\n        heading={t('general:confirmDeletion')}\n        modalSlug={confirmDeleteDrawerSlug}\n        onConfirm={deleteCurrentFolder}\n      />\n\n      <FolderDocumentDrawer\n        onSave={() => {\n          closeFolderDrawer()\n          clearRouteCache()\n        }}\n      />\n    </>\n  )\n}\n"],"mappings":"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","ignoreList":[]}