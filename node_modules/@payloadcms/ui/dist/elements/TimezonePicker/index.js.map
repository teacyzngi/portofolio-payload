{"version":3,"file":"index.js","names":["useMemo","FieldLabel","useTranslation","ReactSelect","formatOptions","TimezonePicker","props","id","onChange","onChangeFromProps","options","optionsFromProps","required","selectedTimezone","selectedTimezoneFromProps","t","find","value","_jsxs","className","_jsx","htmlFor","label","unstyled","inputId","isClearable","isCreatable","val"],"sources":["../../../src/elements/TimezonePicker/index.tsx"],"sourcesContent":["'use client'\n\nimport type { OptionObject } from 'payload'\nimport type React from 'react'\n\nimport { useMemo } from 'react'\n\nimport type { Props } from './types.js'\n\nimport { FieldLabel } from '../../fields/FieldLabel/index.js'\nimport './index.scss'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { ReactSelect } from '../ReactSelect/index.js'\nimport { formatOptions } from '../WhereBuilder/Condition/Select/formatOptions.js'\n\nexport const TimezonePicker: React.FC<Props> = (props) => {\n  const {\n    id,\n    onChange: onChangeFromProps,\n    options: optionsFromProps,\n    required,\n    selectedTimezone: selectedTimezoneFromProps,\n  } = props\n\n  const { t } = useTranslation()\n\n  const options = formatOptions(optionsFromProps)\n\n  const selectedTimezone = useMemo(() => {\n    return options.find((t) => {\n      const value = typeof t === 'string' ? t : t.value\n      return value === (selectedTimezoneFromProps || 'UTC')\n    })\n  }, [options, selectedTimezoneFromProps])\n\n  return (\n    <div className=\"timezone-picker-wrapper\">\n      <FieldLabel\n        htmlFor={id}\n        label={`${t('general:timezone')} ${required ? '*' : ''}`}\n        required={required}\n        unstyled\n      />\n      <ReactSelect\n        className=\"timezone-picker\"\n        inputId={id}\n        isClearable={true}\n        isCreatable={false}\n        onChange={(val: OptionObject) => {\n          if (onChangeFromProps) {\n            onChangeFromProps(val?.value || '')\n          }\n        }}\n        options={options}\n        value={selectedTimezone}\n      />\n    </div>\n  )\n}\n"],"mappings":"AAAA;;;AAKA,SAASA,OAAO,QAAQ;AAIxB,SAASC,UAAU,QAAQ;AAC3B,OAAO;AACP,SAASC,cAAc,QAAQ;AAC/B,SAASC,WAAW,QAAQ;AAC5B,SAASC,aAAa,QAAQ;AAE9B,OAAO,MAAMC,cAAA,GAAmCC,KAAA;EAC9C,MAAM;IACJC,EAAE;IACFC,QAAA,EAAUC,iBAAiB;IAC3BC,OAAA,EAASC,gBAAgB;IACzBC,QAAQ;IACRC,gBAAA,EAAkBC;EAAyB,CAC5C,GAAGR,KAAA;EAEJ,MAAM;IAAES;EAAC,CAAE,GAAGb,cAAA;EAEd,MAAMQ,OAAA,GAAUN,aAAA,CAAcO,gBAAA;EAE9B,MAAME,gBAAA,GAAmBb,OAAA,CAAQ;IAC/B,OAAOU,OAAA,CAAQM,IAAI,CAAED,GAAA;MACnB,MAAME,KAAA,GAAQ,OAAOF,GAAA,KAAM,WAAWA,GAAA,GAAIA,GAAA,CAAEE,KAAK;MACjD,OAAOA,KAAA,MAAWH,yBAAA,IAA6B,KAAI;IACrD;EACF,GAAG,CAACJ,OAAA,EAASI,yBAAA,CAA0B;EAEvC,oBACEI,KAAA,CAAC;IAAIC,SAAA,EAAU;4BACbC,IAAA,CAACnB,UAAA;MACCoB,OAAA,EAASd,EAAA;MACTe,KAAA,EAAO,GAAGP,CAAA,CAAE,uBAAuBH,QAAA,GAAW,MAAM,IAAI;MACxDA,QAAA,EAAUA,QAAA;MACVW,QAAQ;qBAEVH,IAAA,CAACjB,WAAA;MACCgB,SAAA,EAAU;MACVK,OAAA,EAASjB,EAAA;MACTkB,WAAA,EAAa;MACbC,WAAA,EAAa;MACblB,QAAA,EAAWmB,GAAA;QACT,IAAIlB,iBAAA,EAAmB;UACrBA,iBAAA,CAAkBkB,GAAA,EAAKV,KAAA,IAAS;QAClC;MACF;MACAP,OAAA,EAASA,OAAA;MACTO,KAAA,EAAOJ;;;AAIf","ignoreList":[]}