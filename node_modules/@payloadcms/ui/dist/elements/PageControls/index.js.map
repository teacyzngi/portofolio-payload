{"version":3,"file":"index.js","names":["c","_c","isNumber","React","Fragment","Pagination","PerPage","useListQuery","useTranslation","baseClass","PageControlsComponent","t0","$","AfterPageControls","collectionConfig","data","handlePageChange","handlePerPageChange","limit","i18n","t1","admin","pagination","limits","hasNextPage","hasPrevPage","nextPage","page","pagingCounter","prevPage","totalDocs","totalPages","_jsxs","className","children","_jsx","numberOfNeighbors","onChange","t","handleChange","resetPage","PageControls","defaultLimit","initialLimit","query","t2"],"sources":["../../../src/elements/PageControls/index.tsx"],"sourcesContent":["'use client'\nimport type { ClientCollectionConfig, PaginatedDocs } from 'payload'\n\nimport { isNumber } from 'payload/shared'\nimport React, { Fragment } from 'react'\n\nimport type { IListQueryContext } from '../../providers/ListQuery/types.js'\n\nimport { Pagination } from '../../elements/Pagination/index.js'\nimport { PerPage } from '../../elements/PerPage/index.js'\nimport { useListQuery } from '../../providers/ListQuery/context.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport './index.scss'\n\nconst baseClass = 'page-controls'\n\n/**\n * @internal\n */\nexport const PageControlsComponent: React.FC<{\n  AfterPageControls?: React.ReactNode\n  collectionConfig: ClientCollectionConfig\n  data: PaginatedDocs\n  handlePageChange?: IListQueryContext['handlePageChange']\n  handlePerPageChange?: IListQueryContext['handlePerPageChange']\n  limit?: number\n}> = ({\n  AfterPageControls,\n  collectionConfig,\n  data,\n  handlePageChange,\n  handlePerPageChange,\n  limit,\n}) => {\n  const { i18n } = useTranslation()\n\n  return (\n    <div className={baseClass}>\n      <Pagination\n        hasNextPage={data.hasNextPage}\n        hasPrevPage={data.hasPrevPage}\n        limit={data.limit}\n        nextPage={data.nextPage}\n        numberOfNeighbors={1}\n        onChange={handlePageChange}\n        page={data.page}\n        prevPage={data.prevPage}\n        totalPages={data.totalPages}\n      />\n      {data.totalDocs > 0 && (\n        <Fragment>\n          <div className={`${baseClass}__page-info`}>\n            {data.page * data.limit - (data.limit - 1)}-\n            {data.totalPages > 1 && data.totalPages !== data.page\n              ? data.limit * data.page\n              : data.totalDocs}{' '}\n            {i18n.t('general:of')} {data.totalDocs}\n          </div>\n          <PerPage\n            handleChange={handlePerPageChange}\n            limit={limit}\n            limits={collectionConfig?.admin?.pagination?.limits}\n            resetPage={data.totalDocs <= data.pagingCounter}\n          />\n          {AfterPageControls}\n        </Fragment>\n      )}\n    </div>\n  )\n}\n\n/**\n * These page controls are controlled by the global ListQuery state.\n * To override thi behavior, build your own wrapper around PageControlsComponent.\n *\n * @internal\n */\nexport const PageControls: React.FC<{\n  AfterPageControls?: React.ReactNode\n  collectionConfig: ClientCollectionConfig\n}> = ({ AfterPageControls, collectionConfig }) => {\n  const {\n    data,\n    defaultLimit: initialLimit,\n    handlePageChange,\n    handlePerPageChange,\n    query,\n  } = useListQuery()\n\n  return (\n    <PageControlsComponent\n      AfterPageControls={AfterPageControls}\n      collectionConfig={collectionConfig}\n      data={data}\n      handlePageChange={handlePageChange}\n      handlePerPageChange={handlePerPageChange}\n      limit={isNumber(query.limit) ? query.limit : initialLimit}\n    />\n  )\n}\n"],"mappings":"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","ignoreList":[]}