{"version":3,"file":"index.js","names":["c","_c","getTranslation","usePathname","useRouter","useSearchParams","sortableFieldTypes","fieldAffectsData","qs","React","useEffect","useState","useTranslation","ReactSelect","baseClass","SortComplex","props","$","collection","handleChange","modifySearchQuery","t0","undefined","router","pathname","searchParams","i18n","t","sortOptions","setSortOptions","t1","fields","reduce","field","indexOf","type","label","name","value","sortFields","sortField","setSortField","t2","initialSort","sortOrder","setSortOrder","t3","t4","newSortValue","get","search","stringify","sort","addQueryPrefix","replace","t5","t6","t7","t8","incomingSort","_jsx","className","children","Fragment","_jsxs","onChange","options"],"sources":["../../../src/elements/SortComplex/index.tsx"],"sourcesContent":["'use client'\nimport type { OptionObject, SanitizedCollectionConfig } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\n// TODO: abstract the `next/navigation` dependency out from this component\nimport { usePathname, useRouter, useSearchParams } from 'next/navigation.js'\nimport { sortableFieldTypes } from 'payload'\nimport { fieldAffectsData } from 'payload/shared'\nimport * as qs from 'qs-esm'\nimport React, { useEffect, useState } from 'react'\n\nexport type SortComplexProps = {\n  collection: SanitizedCollectionConfig\n  handleChange?: (sort: string) => void\n  modifySearchQuery?: boolean\n  sort?: string\n}\n\nimport type { Option } from '../ReactSelect/index.js'\n\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { ReactSelect } from '../ReactSelect/index.js'\nimport './index.scss'\n\nconst baseClass = 'sort-complex'\n\nexport const SortComplex: React.FC<SortComplexProps> = (props) => {\n  const { collection, handleChange, modifySearchQuery = true } = props\n\n  const router = useRouter()\n  const pathname = usePathname()\n  const searchParams = useSearchParams()\n  const { i18n, t } = useTranslation()\n  const [sortOptions, setSortOptions] = useState<OptionObject[]>()\n\n  const [sortFields] = useState(() =>\n    collection.fields.reduce((fields, field) => {\n      if (fieldAffectsData(field) && sortableFieldTypes.indexOf(field.type) > -1) {\n        return [\n          ...fields,\n          { label: getTranslation(field.label || field.name, i18n), value: field.name },\n        ]\n      }\n      return fields\n    }, []),\n  )\n\n  const [sortField, setSortField] = useState(sortFields[0])\n  const [initialSort] = useState<Option>(() => ({ label: t('general:descending'), value: '-' }))\n  const [sortOrder, setSortOrder] = useState(initialSort)\n\n  useEffect(() => {\n    if (sortField?.value) {\n      const newSortValue = `${sortOrder.value}${sortField.value}`\n\n      if (handleChange) {\n        handleChange(newSortValue)\n      }\n\n      if (searchParams.get('sort') !== newSortValue && modifySearchQuery) {\n        const search = qs.stringify(\n          {\n            ...searchParams,\n            sort: newSortValue,\n          },\n          { addQueryPrefix: true },\n        )\n\n        router.replace(`${pathname}${search}`)\n      }\n    }\n  }, [pathname, router, searchParams, sortField, sortOrder, modifySearchQuery, handleChange])\n\n  useEffect(() => {\n    setSortOptions([\n      { label: t('general:ascending'), value: '' },\n      { label: t('general:descending'), value: '-' },\n    ])\n  }, [i18n, t])\n\n  return (\n    <div className={baseClass}>\n      <React.Fragment>\n        <div className={`${baseClass}__wrap`}>\n          <div className={`${baseClass}__select`}>\n            <div className={`${baseClass}__label`}>{t('general:columnToSort')}</div>\n            <ReactSelect onChange={setSortField} options={sortFields} value={sortField} />\n          </div>\n          <div className={`${baseClass}__select`}>\n            <div className={`${baseClass}__label`}>{t('general:order')}</div>\n            <ReactSelect\n              onChange={(incomingSort: Option) => {\n                setSortOrder(incomingSort || initialSort)\n              }}\n              options={sortOptions}\n              value={sortOrder}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}