{"version":3,"file":"usePayloadAPI.js","names":["c","_c","qs","useEffect","useRef","useState","useLocale","useTranslation","requests","usePayloadAPI","url","t0","$","t1","undefined","options","initialData","initialParams","t2","t3","i18n","t4","data","setData","params","setParams","isLoading","setIsLoading","isError","setIsError","code","locale","hasInitialized","t5","stringify","addQueryPrefix","search","t6","language","current","abortController","AbortController","fetchData","response","get","headers","signal","status","json","t7","aborted","abort","t8","_err","t9","t10","t11","Symbol","for","t12"],"sources":["../../src/hooks/usePayloadAPI.ts"],"sourcesContent":["'use client'\nimport type React from 'react'\n\nimport * as qs from 'qs-esm'\nimport { useEffect, useRef, useState } from 'react'\n\nimport { useLocale } from '../providers/Locale/index.js'\nimport { useTranslation } from '../providers/Translation/index.js'\nimport { requests } from '../utilities/api.js'\n\ntype Result = [\n  {\n    data: any\n    isError: boolean\n    isLoading: boolean\n  },\n  {\n    setParams: React.Dispatch<unknown>\n  },\n]\n\ntype Options = {\n  initialData?: any\n  initialParams?: unknown\n}\n\ntype UsePayloadAPI = (url: string, options?: Options) => Result\n\nexport const usePayloadAPI: UsePayloadAPI = (url, options = {}) => {\n  const { initialData, initialParams = {} } = options\n\n  const { i18n } = useTranslation()\n  const [data, setData] = useState(initialData || {})\n  const [params, setParams] = useState(initialParams)\n  const [isLoading, setIsLoading] = useState(!initialData)\n  const [isError, setIsError] = useState(false)\n  const { code: locale } = useLocale()\n  const hasInitialized = useRef(false)\n\n  const search = qs.stringify(\n    {\n      locale,\n      ...(typeof params === 'object' ? params : {}),\n    },\n    {\n      addQueryPrefix: true,\n    },\n  )\n\n  // If `initialData`, no need to make a request\n  useEffect(() => {\n    if (initialData && !hasInitialized.current) {\n      hasInitialized.current = true\n      return\n    }\n\n    const abortController = new AbortController()\n\n    const fetchData = async () => {\n      setIsError(false)\n      setIsLoading(true)\n\n      try {\n        const response = await requests.get(`${url}${search}`, {\n          headers: {\n            'Accept-Language': i18n.language,\n          },\n          signal: abortController.signal,\n        })\n\n        if (response.status > 201) {\n          setIsError(true)\n        }\n\n        const json = await response.json()\n\n        setData(json)\n        setIsLoading(false)\n      } catch (error) {\n        if (!abortController.signal.aborted) {\n          setIsError(true)\n          setIsLoading(false)\n        }\n      }\n    }\n\n    if (url) {\n      void fetchData()\n    } else {\n      setIsError(false)\n      setIsLoading(false)\n    }\n\n    return () => {\n      try {\n        abortController.abort()\n      } catch (_err) {\n        // swallow error\n      }\n    }\n  }, [url, locale, search, i18n.language, initialData])\n\n  // If `initialData` changes, reset the state\n  useEffect(() => {\n    if (initialData && hasInitialized.current) {\n      setData(initialData)\n    }\n  }, [initialData])\n\n  return [{ data, isError, isLoading }, { setParams }]\n}\n"],"mappings":"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","ignoreList":[]}