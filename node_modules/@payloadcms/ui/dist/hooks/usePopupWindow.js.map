{"version":3,"file":"usePopupWindow.js","names":["c","_c","useCallback","useEffect","useRef","useState","useConfig","usePopupWindow","props","$","eventType","onMessage","url","isReceivingMessage","isOpen","setIsOpen","config","t0","serverURL","popupRef","t1","t2","receiveMessage","event","origin","window","location","data","type","current","searchParams","addEventListener","removeEventListener","t3","e","preventDefault","features","height","left","menubar","popup","toolbar","top","width","popupOptions","Object","entries","reduce","str","t4","key","value","strCopy","v","Math","round","innerHeight","v_0","innerWidth","slice","newWindow","open","openPopupWindow","t5","timer","closed","clearInterval","t6","isPopupOpen"],"sources":["../../src/hooks/usePopupWindow.ts"],"sourcesContent":["'use client'\nimport type React from 'react'\n\nimport { useCallback, useEffect, useRef, useState } from 'react'\n\nimport { useConfig } from '../providers/Config/index.js'\n\nexport interface PopupMessage {\n  searchParams: {\n    [key: string]: string | undefined\n    code: string\n    installation_id: string\n    state: string\n  }\n  type: string\n}\n\nexport const usePopupWindow = (props: {\n  eventType?: string\n\n  onMessage?: (searchParams: PopupMessage['searchParams']) => Promise<void>\n  url: string\n}): {\n  isPopupOpen: boolean\n  openPopupWindow: () => void\n  popupRef?: React.RefObject<null | Window>\n} => {\n  const { eventType, onMessage, url } = props\n  const isReceivingMessage = useRef(false)\n  const [isOpen, setIsOpen] = useState(false)\n\n  const {\n    config: { serverURL },\n  } = useConfig()\n\n  const popupRef = useRef<null | Window>(null)\n\n  // Optionally broadcast messages back out to the parent component\n  useEffect(() => {\n    const receiveMessage = async (event: MessageEvent): Promise<void> => {\n      if (\n        event.origin !== window.location.origin ||\n        event.origin !== url ||\n        event.origin !== serverURL\n      ) {\n        // console.warn(`Message received by ${event.origin}; IGNORED.`) // eslint-disable-line no-console\n        return\n      }\n\n      if (\n        typeof onMessage === 'function' &&\n        event.data?.type === eventType &&\n        !isReceivingMessage.current\n      ) {\n        isReceivingMessage.current = true\n        await onMessage(event.data?.searchParams)\n        isReceivingMessage.current = false\n      }\n    }\n\n    if (isOpen && popupRef.current) {\n      window.addEventListener('message', receiveMessage, false)\n    }\n\n    return () => {\n      window.removeEventListener('message', receiveMessage)\n    }\n  }, [onMessage, eventType, url, serverURL, isOpen])\n\n  // Customize the size, position, and style of the popup window\n  const openPopupWindow = useCallback(\n    (e?: MouseEvent) => {\n      if (e) {\n        e.preventDefault()\n      }\n\n      const features = {\n        height: 700,\n        left: 'auto',\n        menubar: 'no',\n        popup: 'yes',\n        toolbar: 'no',\n        top: 'auto',\n        width: 800,\n      }\n\n      const popupOptions = Object.entries(features)\n        .reduce((str, [key, value]) => {\n          let strCopy = str\n          if (value === 'auto') {\n            if (key === 'top') {\n              const v = Math.round(window.innerHeight / 2 - features.height / 2)\n              strCopy += `top=${v},`\n            } else if (key === 'left') {\n              const v = Math.round(window.innerWidth / 2 - features.width / 2)\n              strCopy += `left=${v},`\n            }\n            return strCopy\n          }\n\n          strCopy += `${key}=${value},`\n          return strCopy\n        }, '')\n        .slice(0, -1) // remove last ',' (comma)\n\n      const newWindow = window.open(url, '_blank', popupOptions)\n\n      popupRef.current = newWindow\n\n      setIsOpen(true)\n    },\n    [url],\n  )\n\n  // this is the most stable and widely supported way to check if a popup window is no longer open\n  // we poll its ref every x ms and use the popup window's `closed` property\n  useEffect(() => {\n    let timer: NodeJS.Timeout\n\n    if (isOpen) {\n      timer = setInterval(function () {\n        if (popupRef.current.closed) {\n          clearInterval(timer)\n          setIsOpen(false)\n        }\n      }, 1000)\n    } else {\n      clearInterval(timer)\n    }\n\n    return () => {\n      if (timer) {\n        clearInterval(timer)\n      }\n    }\n  }, [isOpen, popupRef])\n\n  return {\n    isPopupOpen: isOpen,\n    openPopupWindow,\n    popupRef,\n  }\n}\n"],"mappings":"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","ignoreList":[]}