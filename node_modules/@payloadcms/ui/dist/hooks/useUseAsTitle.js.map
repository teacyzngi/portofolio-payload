{"version":3,"file":"useUseAsTitle.js","names":["c","_c","flattenTopLevelFields","useTranslation","useUseTitleField","collection","$","admin","t0","fields","useAsTitle","i18n","t1","topLevelFields","moveSubFieldsToTop","find","field","name"],"sources":["../../src/hooks/useUseAsTitle.ts"],"sourcesContent":["'use client'\nimport type { ClientCollectionConfig, ClientField } from 'payload'\n\nimport { flattenTopLevelFields } from 'payload/shared'\n\nimport { useTranslation } from '../providers/Translation/index.js'\n\nexport const useUseTitleField = (collection: ClientCollectionConfig): ClientField => {\n  const {\n    admin: { useAsTitle },\n    fields,\n  } = collection\n\n  const { i18n } = useTranslation()\n\n  const topLevelFields = flattenTopLevelFields(fields, {\n    i18n,\n    moveSubFieldsToTop: true,\n  }) as ClientField[]\n\n  return topLevelFields?.find((field) => 'name' in field && field.name === useAsTitle)\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;AAGA,SAASC,qBAAqB,QAAQ;AAEtC,SAASC,cAAc,QAAQ;AAE/B,OAAO,MAAMC,gBAAA,GAAmBC,UAAA;EAAA,MAAAC,CAAA,GAAAL,EAAA;EAC9B;IAAAM,KAAA,EAAAC,EAAA;IAAAC;EAAA,IAGIJ,UAAA;EAFK;IAAAK;EAAA,IAAAF,EAAc;EAIvB;IAAAG;EAAA,IAAiBR,cAAA;EAAA,IAAAS,EAAA;EAAA,IAAAN,CAAA,QAAAG,MAAA,IAAAH,CAAA,QAAAK,IAAA,IAAAL,CAAA,QAAAI,UAAA;IAEjB,MAAAG,cAAA,GAAuBX,qBAAA,CAAsBO,MAAA;MAAAE,IAAA;MAAAG,kBAAA;IAAA,CAG7C;IAEOF,EAAA,GAAAC,cAAA,EAAAE,IAAA,CAAAC,KAAA,IAAgC,UAAUA,KAAA,IAASA,KAAA,CAAAC,IAAA,KAAeP,UAAA;IAAAJ,CAAA,MAAAG,MAAA;IAAAH,CAAA,MAAAK,IAAA;IAAAL,CAAA,MAAAI,UAAA;IAAAJ,CAAA,MAAAM,EAAA;EAAA;IAAAA,EAAA,GAAAN,CAAA;EAAA;EAAA,OAAlEM,EAAkE;AAAA,CAC3E","ignoreList":[]}