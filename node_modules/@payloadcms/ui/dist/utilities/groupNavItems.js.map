{"version":3,"file":"groupNavItems.js","names":["getTranslation","EntityType","groupNavItems","entities","permissions","i18n","result","reduce","groups","entityToGroup","entity","admin","group","type","toLowerCase","slug","read","translatedGroup","labelOrFunction","labels","plural","label","t","existingGroup","find","matchedGroup","push","defaultGroup","filter","length"],"sources":["../../src/utilities/groupNavItems.ts"],"sourcesContent":["import type { I18nClient } from '@payloadcms/translations'\nimport type {\n  SanitizedCollectionConfig,\n  SanitizedGlobalConfig,\n  SanitizedPermissions,\n  StaticLabel,\n} from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\n\nexport enum EntityType {\n  collection = 'collections',\n  global = 'globals',\n}\n\nexport type EntityToGroup =\n  | {\n      entity: SanitizedCollectionConfig\n      type: EntityType.collection\n    }\n  | {\n      entity: SanitizedGlobalConfig\n      type: EntityType.global\n    }\n\nexport type NavGroupType = {\n  entities: {\n    label: StaticLabel\n    slug: string\n    type: EntityType\n  }[]\n  label: string\n}\n\nexport function groupNavItems(\n  entities: EntityToGroup[],\n  permissions: SanitizedPermissions,\n  i18n: I18nClient,\n): NavGroupType[] {\n  const result = entities.reduce(\n    (groups, entityToGroup) => {\n      // Skip entities where admin.group is explicitly false\n      if (entityToGroup.entity?.admin?.group === false) {\n        return groups\n      }\n\n      if (permissions?.[entityToGroup.type.toLowerCase()]?.[entityToGroup.entity.slug]?.read) {\n        const translatedGroup = getTranslation(entityToGroup.entity.admin.group, i18n)\n\n        const labelOrFunction =\n          'labels' in entityToGroup.entity\n            ? entityToGroup.entity.labels.plural\n            : entityToGroup.entity.label\n\n        const label =\n          typeof labelOrFunction === 'function'\n            ? labelOrFunction({ i18n, t: i18n.t })\n            : labelOrFunction\n\n        if (entityToGroup.entity.admin.group) {\n          const existingGroup = groups.find(\n            (group) => getTranslation(group.label, i18n) === translatedGroup,\n          ) as NavGroupType\n\n          let matchedGroup: NavGroupType = existingGroup\n\n          if (!existingGroup) {\n            matchedGroup = { entities: [], label: translatedGroup }\n            groups.push(matchedGroup)\n          }\n\n          matchedGroup.entities.push({\n            slug: entityToGroup.entity.slug,\n            type: entityToGroup.type,\n            label,\n          })\n        } else {\n          const defaultGroup = groups.find((group) => {\n            return getTranslation(group.label, i18n) === i18n.t(`general:${entityToGroup.type}`)\n          }) as NavGroupType\n          defaultGroup.entities.push({\n            slug: entityToGroup.entity.slug,\n            type: entityToGroup.type,\n            label,\n          })\n        }\n      }\n\n      return groups\n    },\n    [\n      {\n        entities: [],\n        label: i18n.t('general:collections'),\n      },\n      {\n        entities: [],\n        label: i18n.t('general:globals'),\n      },\n    ],\n  )\n\n  return result.filter((group) => group.entities.length > 0)\n}\n"],"mappings":"AAQA,SAASA,cAAc,QAAQ;AAE/B,OAAO,IAAAC,UAAK,0BAAAA,UAAA;;;SAAAA,UAAA;;AAwBZ,OAAO,SAASC,cACdC,QAAyB,EACzBC,WAAiC,EACjCC,IAAgB;EAEhB,MAAMC,MAAA,GAASH,QAAA,CAASI,MAAM,CAC5B,CAACC,MAAA,EAAQC,aAAA;IACP;IACA,IAAIA,aAAA,CAAcC,MAAM,EAAEC,KAAA,EAAOC,KAAA,KAAU,OAAO;MAChD,OAAOJ,MAAA;IACT;IAEA,IAAIJ,WAAA,GAAcK,aAAA,CAAcI,IAAI,CAACC,WAAW,GAAG,GAAGL,aAAA,CAAcC,MAAM,CAACK,IAAI,CAAC,EAAEC,IAAA,EAAM;MACtF,MAAMC,eAAA,GAAkBjB,cAAA,CAAeS,aAAA,CAAcC,MAAM,CAACC,KAAK,CAACC,KAAK,EAAEP,IAAA;MAEzE,MAAMa,eAAA,GACJ,YAAYT,aAAA,CAAcC,MAAM,GAC5BD,aAAA,CAAcC,MAAM,CAACS,MAAM,CAACC,MAAM,GAClCX,aAAA,CAAcC,MAAM,CAACW,KAAK;MAEhC,MAAMA,KAAA,GACJ,OAAOH,eAAA,KAAoB,aACvBA,eAAA,CAAgB;QAAEb,IAAA;QAAMiB,CAAA,EAAGjB,IAAA,CAAKiB;MAAE,KAClCJ,eAAA;MAEN,IAAIT,aAAA,CAAcC,MAAM,CAACC,KAAK,CAACC,KAAK,EAAE;QACpC,MAAMW,aAAA,GAAgBf,MAAA,CAAOgB,IAAI,CAC9BZ,KAAA,IAAUZ,cAAA,CAAeY,KAAA,CAAMS,KAAK,EAAEhB,IAAA,MAAUY,eAAA;QAGnD,IAAIQ,YAAA,GAA6BF,aAAA;QAEjC,IAAI,CAACA,aAAA,EAAe;UAClBE,YAAA,GAAe;YAAEtB,QAAA,EAAU,EAAE;YAAEkB,KAAA,EAAOJ;UAAgB;UACtDT,MAAA,CAAOkB,IAAI,CAACD,YAAA;QACd;QAEAA,YAAA,CAAatB,QAAQ,CAACuB,IAAI,CAAC;UACzBX,IAAA,EAAMN,aAAA,CAAcC,MAAM,CAACK,IAAI;UAC/BF,IAAA,EAAMJ,aAAA,CAAcI,IAAI;UACxBQ;QACF;MACF,OAAO;QACL,MAAMM,YAAA,GAAenB,MAAA,CAAOgB,IAAI,CAAEZ,KAAA;UAChC,OAAOZ,cAAA,CAAeY,KAAA,CAAMS,KAAK,EAAEhB,IAAA,MAAUA,IAAA,CAAKiB,CAAC,CAAC,WAAWb,aAAA,CAAcI,IAAI,EAAE;QACrF;QACAc,YAAA,CAAaxB,QAAQ,CAACuB,IAAI,CAAC;UACzBX,IAAA,EAAMN,aAAA,CAAcC,MAAM,CAACK,IAAI;UAC/BF,IAAA,EAAMJ,aAAA,CAAcI,IAAI;UACxBQ;QACF;MACF;IACF;IAEA,OAAOb,MAAA;EACT,GACA,CACE;IACEL,QAAA,EAAU,EAAE;IACZkB,KAAA,EAAOhB,IAAA,CAAKiB,CAAC,CAAC;EAChB,GACA;IACEnB,QAAA,EAAU,EAAE;IACZkB,KAAA,EAAOhB,IAAA,CAAKiB,CAAC,CAAC;EAChB,EACD;EAGH,OAAOhB,MAAA,CAAOsB,MAAM,CAAEhB,KAAA,IAAUA,KAAA,CAAMT,QAAQ,CAAC0B,MAAM,GAAG;AAC1D","ignoreList":[]}