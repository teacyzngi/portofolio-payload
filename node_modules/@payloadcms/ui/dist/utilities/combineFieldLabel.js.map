{"version":3,"file":"combineFieldLabel.js","names":["Fragment","RenderCustomComponent","FieldLabel","combineFieldLabel","CustomLabel","field","prefix","_jsxs","_jsx","style","display","CustomComponent","Fallback","label"],"sources":["../../src/utilities/combineFieldLabel.tsx"],"sourcesContent":["import type { ClientField } from 'payload'\n\nimport { Fragment } from 'react'\n\nimport { RenderCustomComponent } from '../elements/RenderCustomComponent/index.js'\nimport { FieldLabel } from '../fields/FieldLabel/index.js'\n\nexport const combineFieldLabel = ({\n  CustomLabel,\n  field,\n  prefix,\n}: {\n  CustomLabel?: React.ReactNode\n  field?: ClientField\n  prefix?: React.ReactNode\n}): React.ReactNode => {\n  return (\n    <Fragment>\n      {prefix ? (\n        <Fragment>\n          <span style={{ display: 'inline-block' }}>{prefix}</span>\n          {' > '}\n        </Fragment>\n      ) : null}\n      <span style={{ display: 'inline-block' }}>\n        <RenderCustomComponent\n          CustomComponent={CustomLabel}\n          Fallback={<FieldLabel label={'label' in field && field.label} />}\n        />\n      </span>\n    </Fragment>\n  )\n}\n"],"mappings":";AAEA,SAASA,QAAQ,QAAQ;AAEzB,SAASC,qBAAqB,QAAQ;AACtC,SAASC,UAAU,QAAQ;AAE3B,OAAO,MAAMC,iBAAA,GAAoBA,CAAC;EAChCC,WAAW;EACXC,KAAK;EACLC;AAAM,CAKP;EACC,oBACEC,KAAA,CAACP,QAAA;eACEM,MAAA,gBACCC,KAAA,CAACP,QAAA;8BACCQ,IAAA,CAAC;QAAKC,KAAA,EAAO;UAAEC,OAAA,EAAS;QAAe;kBAAIJ;UAC1C;SAED,M,aACJE,IAAA,CAAC;MAAKC,KAAA,EAAO;QAAEC,OAAA,EAAS;MAAe;gBACrC,aAAAF,IAAA,CAACP,qBAAA;QACCU,eAAA,EAAiBP,WAAA;QACjBQ,QAAA,eAAUJ,IAAA,CAACN,UAAA;UAAWW,KAAA,EAAO,WAAWR,KAAA,IAASA,KAAA,CAAMQ;;;;;AAKjE","ignoreList":[]}