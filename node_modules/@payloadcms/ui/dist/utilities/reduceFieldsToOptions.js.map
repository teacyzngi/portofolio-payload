{"version":3,"file":"reduceFieldsToOptions.js","names":["getTranslation","fieldAffectsData","fieldIsHiddenOrDisabled","fieldIsID","tabHasName","fieldTypes","arrayOperators","createNestedClientFieldPath","combineFieldLabel","reduceFieldsToOptions","fieldPermissions","fields","i18n","labelPrefix","pathPrefix","pathPrefixFromArgs","reduce","reduced","field","virtual","name","type","tabs","forEach","tab","label","localizedTabLabel","labelWithPrefix","tabPathPrefix","push","translatedLabel","pathWithPrefix","read","operatorKeys","Set","fieldOperators","hasMany","operators","acc","operator","has","value","add","operatorKey","t","localizedLabel","formattedLabel","prefix","fieldPath","formattedField","plainTextLabel"],"sources":["../../src/utilities/reduceFieldsToOptions.tsx"],"sourcesContent":["'use client'\nimport type { ClientTranslationKeys, I18nClient } from '@payloadcms/translations'\nimport type { ClientField, SanitizedFieldPermissions, SanitizedFieldsPermissions } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { fieldAffectsData, fieldIsHiddenOrDisabled, fieldIsID, tabHasName } from 'payload/shared'\n\nimport type { ReducedField } from '../elements/WhereBuilder/types.js'\n\nimport fieldTypes, { arrayOperators } from '../elements/WhereBuilder/field-types.js'\nimport { createNestedClientFieldPath } from '../forms/Form/createNestedClientFieldPath.js'\nimport { combineFieldLabel } from './combineFieldLabel.js'\n\ntype ReduceFieldOptionsArgs = {\n  fieldPermissions?: SanitizedFieldPermissions | SanitizedFieldsPermissions\n  fields: ClientField[]\n  i18n: I18nClient\n  labelPrefix?: string\n  pathPrefix?: string\n}\n\n/**\n * Transforms a fields schema into a flattened array of fields with labels and values.\n * Used in the `WhereBuilder` component to render the fields in the dropdown.\n */\nexport const reduceFieldsToOptions = ({\n  fieldPermissions,\n  fields,\n  i18n,\n  labelPrefix,\n  pathPrefix: pathPrefixFromArgs,\n}: ReduceFieldOptionsArgs): ReducedField[] => {\n  return fields.reduce((reduced, field) => {\n    let pathPrefix = pathPrefixFromArgs\n    // Do not filter out `field.admin.disableListFilter` fields here, as these should still render as disabled if they appear in the URL query\n    // Filter out `virtual: true` fields since they are regular virtuals and not backed by a DB field\n    if (\n      (fieldIsHiddenOrDisabled(field) && !fieldIsID(field)) ||\n      ('virtual' in field && field.virtual === true)\n    ) {\n      return reduced\n    }\n\n    // Handle virtual:string fields (virtual relationships, e.g. \"post.title\")\n    if ('virtual' in field && typeof field.virtual === 'string') {\n      pathPrefix = pathPrefix ? pathPrefix + '.' + field.virtual : field.virtual\n      if (fieldAffectsData(field)) {\n        // ignore virtual field names\n        field.name = ''\n      }\n    }\n\n    if (field.type === 'tabs' && 'tabs' in field) {\n      const tabs = field.tabs\n\n      tabs.forEach((tab) => {\n        if (typeof tab.label !== 'boolean') {\n          const localizedTabLabel = getTranslation(tab.label, i18n)\n\n          const labelWithPrefix = labelPrefix\n            ? labelPrefix + ' > ' + localizedTabLabel\n            : localizedTabLabel\n\n          // Make sure we handle nested tabs\n          const tabPathPrefix =\n            tabHasName(tab) && tab.name\n              ? pathPrefix\n                ? pathPrefix + '.' + tab.name\n                : tab.name\n              : pathPrefix\n\n          if (typeof localizedTabLabel === 'string') {\n            reduced.push(\n              ...reduceFieldsToOptions({\n                fieldPermissions:\n                  typeof fieldPermissions === 'boolean'\n                    ? fieldPermissions\n                    : tabHasName(tab) && tab.name\n                      ? fieldPermissions[tab.name]?.fields || fieldPermissions[tab.name]\n                      : fieldPermissions,\n                fields: tab.fields,\n                i18n,\n                labelPrefix: labelWithPrefix,\n                pathPrefix: tabPathPrefix,\n              }),\n            )\n          }\n        }\n      })\n      return reduced\n    }\n\n    // Rows cant have labels, so we need to handle them differently\n    if (field.type === 'row' && 'fields' in field) {\n      reduced.push(\n        ...reduceFieldsToOptions({\n          fieldPermissions,\n          fields: field.fields,\n          i18n,\n          labelPrefix,\n          pathPrefix,\n        }),\n      )\n      return reduced\n    }\n\n    if (field.type === 'collapsible' && 'fields' in field) {\n      const localizedTabLabel = getTranslation(field.label || '', i18n)\n\n      const labelWithPrefix = labelPrefix\n        ? labelPrefix + ' > ' + localizedTabLabel\n        : localizedTabLabel\n\n      reduced.push(\n        ...reduceFieldsToOptions({\n          fieldPermissions,\n          fields: field.fields,\n          i18n,\n          labelPrefix: labelWithPrefix,\n          pathPrefix,\n        }),\n      )\n      return reduced\n    }\n\n    if (field.type === 'group' && 'fields' in field) {\n      const translatedLabel = getTranslation(field.label || '', i18n)\n\n      const labelWithPrefix = labelPrefix\n        ? translatedLabel\n          ? labelPrefix + ' > ' + translatedLabel\n          : labelPrefix\n        : translatedLabel\n\n      if (fieldAffectsData(field)) {\n        // Make sure we handle deeply nested groups\n        const pathWithPrefix = field.name\n          ? pathPrefix\n            ? pathPrefix + '.' + field.name\n            : field.name\n          : pathPrefix\n\n        reduced.push(\n          ...reduceFieldsToOptions({\n            fieldPermissions:\n              typeof fieldPermissions === 'boolean'\n                ? fieldPermissions\n                : fieldPermissions[field.name]?.fields || fieldPermissions[field.name],\n            fields: field.fields,\n            i18n,\n            labelPrefix: labelWithPrefix,\n            pathPrefix: pathWithPrefix,\n          }),\n        )\n      } else {\n        reduced.push(\n          ...reduceFieldsToOptions({\n            fieldPermissions,\n            fields: field.fields,\n            i18n,\n            labelPrefix: labelWithPrefix,\n            pathPrefix,\n          }),\n        )\n      }\n\n      return reduced\n    }\n\n    if (field.type === 'array' && 'fields' in field) {\n      const translatedLabel = getTranslation(field.label || '', i18n)\n\n      const labelWithPrefix = labelPrefix\n        ? translatedLabel\n          ? labelPrefix + ' > ' + translatedLabel\n          : labelPrefix\n        : translatedLabel\n\n      // Make sure we handle deeply nested groups\n      const pathWithPrefix = field.name\n        ? pathPrefix\n          ? pathPrefix + '.' + field.name\n          : field.name\n        : pathPrefix\n\n      reduced.push(\n        ...reduceFieldsToOptions({\n          fieldPermissions:\n            typeof fieldPermissions === 'boolean'\n              ? fieldPermissions\n              : fieldPermissions[field.name]?.fields || fieldPermissions[field.name],\n          fields: field.fields,\n          i18n,\n          labelPrefix: labelWithPrefix,\n          pathPrefix: pathWithPrefix,\n        }),\n      )\n\n      return reduced\n    }\n\n    if (typeof fieldTypes[field.type] === 'object') {\n      if (\n        fieldIsID(field) ||\n        fieldPermissions === true ||\n        fieldPermissions?.[field.name] === true ||\n        fieldPermissions?.[field.name]?.read === true\n      ) {\n        const operatorKeys = new Set()\n\n        const fieldOperators =\n          'hasMany' in field && field.hasMany ? arrayOperators : fieldTypes[field.type].operators\n\n        const operators = fieldOperators.reduce((acc, operator) => {\n          if (!operatorKeys.has(operator.value)) {\n            operatorKeys.add(operator.value)\n            const operatorKey = `operators:${operator.label}` as ClientTranslationKeys\n            acc.push({\n              ...operator,\n              label: i18n.t(operatorKey),\n            })\n          }\n\n          return acc\n        }, [])\n\n        const localizedLabel = getTranslation(field.label || '', i18n)\n\n        const formattedLabel = labelPrefix\n          ? combineFieldLabel({\n              field,\n              prefix: labelPrefix,\n            })\n          : localizedLabel\n\n        const fieldPath = pathPrefix ? createNestedClientFieldPath(pathPrefix, field) : field.name\n\n        const formattedField: ReducedField = {\n          label: formattedLabel,\n          plainTextLabel: `${labelPrefix ? labelPrefix + ' > ' : ''}${localizedLabel}`,\n          value: fieldPath,\n          ...fieldTypes[field.type],\n          field,\n          operators,\n        }\n\n        reduced.push(formattedField)\n        return reduced\n      }\n    }\n    return reduced\n  }, [])\n}\n"],"mappings":"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","ignoreList":[]}