{"version":3,"file":"handleLivePreview.js","names":["getLivePreviewConfig","collectionConfig","config","globalConfig","isLivePreviewEnabled","admin","livePreview","Boolean","globals","includes","slug","collections","handleLivePreview","collectionSlug","data","globalSlug","operation","req","payload","undefined","find","g","enabled","livePreviewConfig","livePreviewURL","url","result","locale","code","label","err","logger","error","msg"],"sources":["../../src/utilities/handleLivePreview.ts"],"sourcesContent":["import type {\n  CollectionConfig,\n  GlobalConfig,\n  LivePreviewConfig,\n  LivePreviewURLType,\n  Operation,\n  PayloadRequest,\n  SanitizedConfig,\n} from 'payload'\n\nexport const getLivePreviewConfig = ({\n  collectionConfig,\n  config,\n  globalConfig,\n  isLivePreviewEnabled,\n}: {\n  collectionConfig?: CollectionConfig\n  config: SanitizedConfig\n  globalConfig?: GlobalConfig\n  isLivePreviewEnabled: boolean\n}) => ({\n  ...(isLivePreviewEnabled ? config.admin.livePreview : {}),\n  ...(collectionConfig?.admin?.livePreview || {}),\n  ...(globalConfig?.admin?.livePreview || {}),\n})\n\n/**\n * Multi-level check to determine whether live preview is enabled on a collection or global.\n * For example, live preview can be enabled at both the root config level, or on the entity's config.\n * If a collectionConfig/globalConfig is provided, checks if it is enabled at the root level,\n * or on the entity's own config.\n */\nexport const isLivePreviewEnabled = ({\n  collectionConfig,\n  config,\n  globalConfig,\n}: {\n  collectionConfig?: CollectionConfig\n  config: SanitizedConfig\n  globalConfig?: GlobalConfig\n}): boolean => {\n  if (globalConfig) {\n    return Boolean(\n      config.admin?.livePreview?.globals?.includes(globalConfig.slug) ||\n        globalConfig.admin?.livePreview,\n    )\n  }\n\n  if (collectionConfig) {\n    return Boolean(\n      config.admin?.livePreview?.collections?.includes(collectionConfig.slug) ||\n        collectionConfig.admin?.livePreview,\n    )\n  }\n}\n\n/**\n * 1. Looks up the relevant live preview config, which could have been enabled:\n *   a. At the root level, e.g. `collections: ['posts']`\n *   b. On the collection or global config, e.g. `admin: { livePreview: { ... } }`\n * 2. Determines if live preview is enabled, and if not, early returns.\n * 3. Merges the config with the root config, if necessary.\n * 4. Executes the `url` function, if necessary.\n *\n * Notice: internal function only. Subject to change at any time. Use at your own risk.\n */\nexport const handleLivePreview = async ({\n  collectionSlug,\n  config,\n  data,\n  globalSlug,\n  operation,\n  req,\n}: {\n  collectionSlug?: string\n  config: SanitizedConfig\n  data: Record<string, unknown>\n  globalSlug?: string\n  operation?: Operation\n  req: PayloadRequest\n}): Promise<{\n  isLivePreviewEnabled?: boolean\n  livePreviewConfig?: LivePreviewConfig\n  livePreviewURL?: LivePreviewURLType\n}> => {\n  const collectionConfig = collectionSlug\n    ? req.payload.collections[collectionSlug]?.config\n    : undefined\n\n  const globalConfig = globalSlug ? config.globals.find((g) => g.slug === globalSlug) : undefined\n\n  const enabled = isLivePreviewEnabled({\n    collectionConfig,\n    config,\n    globalConfig,\n  })\n\n  if (!enabled) {\n    return {}\n  }\n\n  const livePreviewConfig = getLivePreviewConfig({\n    collectionConfig,\n    config,\n    globalConfig,\n    isLivePreviewEnabled: enabled,\n  })\n\n  let livePreviewURL: string | undefined\n\n  if (typeof livePreviewConfig?.url === 'string') {\n    livePreviewURL = livePreviewConfig.url\n  }\n\n  if (typeof livePreviewConfig?.url === 'function' && operation !== 'create') {\n    try {\n      const result = await livePreviewConfig.url({\n        collectionConfig,\n        data,\n        globalConfig,\n        locale: { code: req.locale, label: '' },\n        payload: req.payload,\n        req,\n      })\n\n      if (typeof result === 'string') {\n        livePreviewURL = result\n      }\n    } catch (err) {\n      req.payload.logger.error({\n        err,\n        msg: `There was an error executing the live preview URL function for ${collectionSlug || globalSlug}`,\n      })\n    }\n  }\n\n  return { isLivePreviewEnabled: enabled, livePreviewConfig, livePreviewURL }\n}\n"],"mappings":"AAUA,OAAO,MAAMA,oBAAA,GAAuBA,CAAC;EACnCC,gBAAgB;EAChBC,MAAM;EACNC,YAAY;EACZC;AAAoB,CAMrB,MAAM;EACL,IAAIA,oBAAA,GAAuBF,MAAA,CAAOG,KAAK,CAACC,WAAW,GAAG,CAAC,CAAC;EACxD,IAAIL,gBAAA,EAAkBI,KAAA,EAAOC,WAAA,IAAe,CAAC,CAAC;EAC9C,IAAIH,YAAA,EAAcE,KAAA,EAAOC,WAAA,IAAe,CAAC,CAAC;AAC5C;AAEA;;;;;;AAMA,OAAO,MAAMF,oBAAA,GAAuBA,CAAC;EACnCH,gBAAgB;EAChBC,MAAM;EACNC;AAAY,CAKb;EACC,IAAIA,YAAA,EAAc;IAChB,OAAOI,OAAA,CACLL,MAAA,CAAOG,KAAK,EAAEC,WAAA,EAAaE,OAAA,EAASC,QAAA,CAASN,YAAA,CAAaO,IAAI,KAC5DP,YAAA,CAAaE,KAAK,EAAEC,WAAA;EAE1B;EAEA,IAAIL,gBAAA,EAAkB;IACpB,OAAOM,OAAA,CACLL,MAAA,CAAOG,KAAK,EAAEC,WAAA,EAAaK,WAAA,EAAaF,QAAA,CAASR,gBAAA,CAAiBS,IAAI,KACpET,gBAAA,CAAiBI,KAAK,EAAEC,WAAA;EAE9B;AACF;AAEA;;;;;;;;;;AAUA,OAAO,MAAMM,iBAAA,GAAoB,MAAAA,CAAO;EACtCC,cAAc;EACdX,MAAM;EACNY,IAAI;EACJC,UAAU;EACVC,SAAS;EACTC;AAAG,CAQJ;EAKC,MAAMhB,gBAAA,GAAmBY,cAAA,GACrBI,GAAA,CAAIC,OAAO,CAACP,WAAW,CAACE,cAAA,CAAe,EAAEX,MAAA,GACzCiB,SAAA;EAEJ,MAAMhB,YAAA,GAAeY,UAAA,GAAab,MAAA,CAAOM,OAAO,CAACY,IAAI,CAAEC,CAAA,IAAMA,CAAA,CAAEX,IAAI,KAAKK,UAAA,IAAcI,SAAA;EAEtF,MAAMG,OAAA,GAAUlB,oBAAA,CAAqB;IACnCH,gBAAA;IACAC,MAAA;IACAC;EACF;EAEA,IAAI,CAACmB,OAAA,EAAS;IACZ,OAAO,CAAC;EACV;EAEA,MAAMC,iBAAA,GAAoBvB,oBAAA,CAAqB;IAC7CC,gBAAA;IACAC,MAAA;IACAC,YAAA;IACAC,oBAAA,EAAsBkB;EACxB;EAEA,IAAIE,cAAA;EAEJ,IAAI,OAAOD,iBAAA,EAAmBE,GAAA,KAAQ,UAAU;IAC9CD,cAAA,GAAiBD,iBAAA,CAAkBE,GAAG;EACxC;EAEA,IAAI,OAAOF,iBAAA,EAAmBE,GAAA,KAAQ,cAAcT,SAAA,KAAc,UAAU;IAC1E,IAAI;MACF,MAAMU,MAAA,GAAS,MAAMH,iBAAA,CAAkBE,GAAG,CAAC;QACzCxB,gBAAA;QACAa,IAAA;QACAX,YAAA;QACAwB,MAAA,EAAQ;UAAEC,IAAA,EAAMX,GAAA,CAAIU,MAAM;UAAEE,KAAA,EAAO;QAAG;QACtCX,OAAA,EAASD,GAAA,CAAIC,OAAO;QACpBD;MACF;MAEA,IAAI,OAAOS,MAAA,KAAW,UAAU;QAC9BF,cAAA,GAAiBE,MAAA;MACnB;IACF,EAAE,OAAOI,GAAA,EAAK;MACZb,GAAA,CAAIC,OAAO,CAACa,MAAM,CAACC,KAAK,CAAC;QACvBF,GAAA;QACAG,GAAA,EAAK,kEAAkEpB,cAAA,IAAkBE,UAAA;MAC3F;IACF;EACF;EAEA,OAAO;IAAEX,oBAAA,EAAsBkB,OAAA;IAASC,iBAAA;IAAmBC;EAAe;AAC5E","ignoreList":[]}