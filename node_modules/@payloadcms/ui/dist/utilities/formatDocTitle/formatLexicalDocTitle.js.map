{"version":3,"file":"formatLexicalDocTitle.js","names":["isSerializedLexicalEditor","value","formatLexicalDocTitle","editorState","textContent","node","text","type","children"],"sources":["../../../src/utilities/formatDocTitle/formatLexicalDocTitle.ts"],"sourcesContent":["type SerializedLexicalEditor = {\n  root: {\n    children: Array<{ children?: Array<{ type: string }>; type: string }>\n  }\n}\n\nexport function isSerializedLexicalEditor(value: unknown): value is SerializedLexicalEditor {\n  return typeof value === 'object' && 'root' in value\n}\n\nexport function formatLexicalDocTitle(\n  editorState: Array<{ children?: Array<{ type: string }>; type: string }>,\n  textContent: string,\n): string {\n  for (const node of editorState) {\n    if ('text' in node && node.text) {\n      textContent += node.text as string\n    } else {\n      if (!('children' in node)) {\n        textContent += `[${node.type}]`\n      }\n    }\n    if ('children' in node && node.children) {\n      textContent += formatLexicalDocTitle(node.children as Array<{ type: string }>, textContent)\n    }\n  }\n  return textContent\n}\n"],"mappings":"AAMA,OAAO,SAASA,0BAA0BC,KAAc;EACtD,OAAO,OAAOA,KAAA,KAAU,YAAY,UAAUA,KAAA;AAChD;AAEA,OAAO,SAASC,sBACdC,WAAwE,EACxEC,WAAmB;EAEnB,KAAK,MAAMC,IAAA,IAAQF,WAAA,EAAa;IAC9B,IAAI,UAAUE,IAAA,IAAQA,IAAA,CAAKC,IAAI,EAAE;MAC/BF,WAAA,IAAeC,IAAA,CAAKC,IAAI;IAC1B,OAAO;MACL,IAAI,EAAE,cAAcD,IAAG,GAAI;QACzBD,WAAA,IAAe,IAAIC,IAAA,CAAKE,IAAI,GAAG;MACjC;IACF;IACA,IAAI,cAAcF,IAAA,IAAQA,IAAA,CAAKG,QAAQ,EAAE;MACvCJ,WAAA,IAAeF,qBAAA,CAAsBG,IAAA,CAAKG,QAAQ,EAA6BJ,WAAA;IACjF;EACF;EACA,OAAOA,WAAA;AACT","ignoreList":[]}