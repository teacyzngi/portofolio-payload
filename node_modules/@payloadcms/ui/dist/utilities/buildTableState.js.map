{"version":3,"file":"buildTableState.js","names":["APIError","canAccessAdmin","formatErrors","getAccessResults","isNumber","getClientConfig","getColumns","renderFilters","renderTable","upsertPreferences","buildTableStateHandler","args","req","res","buildTableState","err","payload","logger","error","msg","message","collectionSlug","columns","columnsFromArgs","data","dataFromArgs","enableRowSelections","orderableFieldName","parent","query","renderRowTypes","i18n","config","user","tableAppearance","clientConfig","importMap","permissions","collectionConfig","clientCollectionConfig","Array","isArray","collections","find","collection","slug","collectionPreferences","key","joinPath","value","limit","Number","undefined","sort","docs","select","currentSelectRef","segments","split","i","length","joinQuery","where","isNaN","page","parentDoc","findByID","id","depth","joins","overrideAccess","draft","locale","columnState","Table","fieldPermissions","fields","useAsTitle","admin","renderedFilters","preferences","state"],"sources":["../../src/utilities/buildTableState.ts"],"sourcesContent":["import type {\n  BuildTableStateArgs,\n  ClientCollectionConfig,\n  ClientConfig,\n  CollectionPreferences,\n  Column,\n  ErrorResult,\n  PaginatedDocs,\n  SanitizedCollectionConfig,\n  ServerFunction,\n  Where,\n} from 'payload'\n\nimport { APIError, canAccessAdmin, formatErrors, getAccessResults } from 'payload'\nimport { isNumber } from 'payload/shared'\n\nimport { getClientConfig } from './getClientConfig.js'\nimport { getColumns } from './getColumns.js'\nimport { renderFilters, renderTable } from './renderTable.js'\nimport { upsertPreferences } from './upsertPreferences.js'\n\ntype BuildTableStateSuccessResult = {\n  clientConfig?: ClientConfig\n  data: PaginatedDocs\n  errors?: never\n  preferences: CollectionPreferences\n  renderedFilters: Map<string, React.ReactNode>\n  state: Column[]\n  Table: React.ReactNode\n}\n\ntype BuildTableStateErrorResult = {\n  data?: any\n  renderedFilters?: never\n  state?: never\n  Table?: never\n} & (\n  | {\n      message: string\n    }\n  | ErrorResult\n)\n\nexport type BuildTableStateResult = BuildTableStateErrorResult | BuildTableStateSuccessResult\n\nexport const buildTableStateHandler: ServerFunction<\n  BuildTableStateArgs,\n  Promise<BuildTableStateResult>\n> = async (args) => {\n  const { req } = args\n\n  try {\n    const res = await buildTableState(args)\n    return res\n  } catch (err) {\n    req.payload.logger.error({ err, msg: `There was an error building form state` })\n\n    if (err.message === 'Could not find field schema for given path') {\n      return {\n        message: err.message,\n      }\n    }\n\n    if (err.message === 'Unauthorized') {\n      return null\n    }\n\n    return formatErrors(err)\n  }\n}\n\nconst buildTableState = async (\n  args: BuildTableStateArgs,\n): Promise<BuildTableStateSuccessResult> => {\n  const {\n    collectionSlug,\n    columns: columnsFromArgs,\n    data: dataFromArgs,\n    enableRowSelections,\n    orderableFieldName,\n    parent,\n    query,\n    renderRowTypes,\n    req,\n    req: {\n      i18n,\n      payload,\n      payload: { config },\n      user,\n    },\n    tableAppearance,\n  } = args\n\n  await canAccessAdmin({ req })\n\n  const clientConfig = getClientConfig({\n    config,\n    i18n,\n    importMap: payload.importMap,\n    user,\n  })\n\n  const permissions = await getAccessResults({ req })\n\n  let collectionConfig: SanitizedCollectionConfig\n  let clientCollectionConfig: ClientCollectionConfig\n\n  if (!Array.isArray(collectionSlug)) {\n    if (req.payload.collections[collectionSlug]) {\n      collectionConfig = req.payload.collections[collectionSlug].config\n      clientCollectionConfig = clientConfig.collections.find(\n        (collection) => collection.slug === collectionSlug,\n      )\n    }\n  }\n\n  const collectionPreferences = await upsertPreferences<CollectionPreferences>({\n    key: Array.isArray(collectionSlug)\n      ? `${parent.collectionSlug}-${parent.joinPath}`\n      : `collection-${collectionSlug}`,\n    req,\n    value: {\n      columns: columnsFromArgs,\n      limit: isNumber(query?.limit) ? Number(query.limit) : undefined,\n      sort: query?.sort as string,\n    },\n  })\n\n  let data: PaginatedDocs = dataFromArgs\n\n  // lookup docs, if desired, i.e. within `join` field which initialize with `depth: 0`\n\n  if (!data?.docs || query) {\n    if (Array.isArray(collectionSlug)) {\n      if (!parent) {\n        throw new APIError('Unexpected array of collectionSlug, parent must be provided')\n      }\n\n      const select = {}\n      let currentSelectRef = select\n\n      const segments = parent.joinPath.split('.')\n\n      for (let i = 0; i < segments.length; i++) {\n        currentSelectRef[segments[i]] = i === segments.length - 1 ? true : {}\n        currentSelectRef = currentSelectRef[segments[i]]\n      }\n\n      const joinQuery: { limit?: number; page?: number; sort?: string; where?: Where } = {\n        sort: query?.sort as string,\n        where: query?.where,\n      }\n\n      if (query) {\n        if (!Number.isNaN(Number(query.limit))) {\n          joinQuery.limit = Number(query.limit)\n        }\n\n        if (!Number.isNaN(Number(query.page))) {\n          joinQuery.limit = Number(query.limit)\n        }\n      }\n\n      let parentDoc = await payload.findByID({\n        id: parent.id,\n        collection: parent.collectionSlug,\n        depth: 1,\n        joins: {\n          [parent.joinPath]: joinQuery,\n        },\n        overrideAccess: false,\n        select,\n        user: req.user,\n      })\n\n      for (let i = 0; i < segments.length; i++) {\n        if (i === segments.length - 1) {\n          data = parentDoc[segments[i]]\n        } else {\n          parentDoc = parentDoc[segments[i]]\n        }\n      }\n    } else {\n      data = await payload.find({\n        collection: collectionSlug,\n        depth: 0,\n        draft: true,\n        limit: query?.limit,\n        locale: req.locale,\n        overrideAccess: false,\n        page: query?.page,\n        sort: query?.sort,\n        user: req.user,\n        where: query?.where,\n      })\n    }\n  }\n\n  const { columnState, Table } = renderTable({\n    clientCollectionConfig,\n    clientConfig,\n    collectionConfig,\n    collections: Array.isArray(collectionSlug) ? collectionSlug : undefined,\n    columns: getColumns({\n      clientConfig,\n      collectionConfig: clientCollectionConfig,\n      collectionSlug,\n      columns: columnsFromArgs,\n      i18n: req.i18n,\n      permissions,\n    }),\n    data,\n    enableRowSelections,\n    fieldPermissions: Array.isArray(collectionSlug)\n      ? true\n      : permissions.collections[collectionSlug].fields,\n    i18n: req.i18n,\n    orderableFieldName,\n    payload,\n    query,\n    renderRowTypes,\n    tableAppearance,\n    useAsTitle: Array.isArray(collectionSlug)\n      ? payload.collections[collectionSlug[0]]?.config?.admin?.useAsTitle\n      : collectionConfig?.admin?.useAsTitle,\n  })\n\n  let renderedFilters\n\n  if (collectionConfig) {\n    renderedFilters = renderFilters(collectionConfig.fields, req.payload.importMap)\n  }\n\n  return {\n    data,\n    preferences: collectionPreferences,\n    renderedFilters,\n    state: columnState,\n    Table,\n  }\n}\n"],"mappings":"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","ignoreList":[]}