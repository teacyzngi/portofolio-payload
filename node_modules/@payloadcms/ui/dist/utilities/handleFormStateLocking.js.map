{"version":3,"file":"handleFormStateLocking.js","names":["lockDurationDefault","handleFormStateLocking","id","collectionSlug","globalSlug","req","updateLastEdited","result","lockedDocumentQuery","and","equals","lockDocumentsProp","payload","collections","config","lockDocuments","globals","find","g","slug","lockDuration","duration","lockDurationInMilliseconds","now","Date","getTime","push","updatedAt","greater_than","toISOString","lockedDocument","collection","depth","limit","overrideAccess","pagination","user","where","docs","length","isLocked","lastEditedAt","value","lockOwnerID","db","updateOne","data","returning","deleteExpiredLocksQuery","less_than","deleteMany","create","document","relationTo","undefined"],"sources":["../../src/utilities/handleFormStateLocking.ts"],"sourcesContent":["import type { PayloadRequest, TypedUser } from 'payload'\n\ntype Args = {\n  collectionSlug?: string\n  globalSlug?: string\n  id?: number | string\n  req: PayloadRequest\n  updateLastEdited?: boolean\n}\n\ntype Result = {\n  isLocked: boolean\n  lastEditedAt: string\n  user: TypedUser\n}\n\nconst lockDurationDefault = 300 // Default 5 minutes in seconds\n\nexport const handleFormStateLocking = async ({\n  id,\n  collectionSlug,\n  globalSlug,\n  req,\n  updateLastEdited,\n}: Args): Promise<Result> => {\n  let result: Result\n\n  if (id || globalSlug) {\n    let lockedDocumentQuery\n\n    if (collectionSlug) {\n      lockedDocumentQuery = {\n        and: [\n          { 'document.relationTo': { equals: collectionSlug } },\n          { 'document.value': { equals: id } },\n        ],\n      }\n    } else if (globalSlug) {\n      lockedDocumentQuery = {\n        and: [{ globalSlug: { equals: globalSlug } }],\n      }\n    }\n\n    const lockDocumentsProp = collectionSlug\n      ? req.payload.collections?.[collectionSlug]?.config.lockDocuments\n      : req.payload.config.globals.find((g) => g.slug === globalSlug)?.lockDocuments\n\n    const lockDuration =\n      typeof lockDocumentsProp === 'object' ? lockDocumentsProp.duration : lockDurationDefault\n    const lockDurationInMilliseconds = lockDuration * 1000\n    const now = new Date().getTime()\n\n    if (lockedDocumentQuery) {\n      // Query where the lock is newer than the current time minus the lock duration\n      lockedDocumentQuery.and.push({\n        updatedAt: {\n          greater_than: new Date(now - lockDurationInMilliseconds).toISOString(),\n        },\n      })\n\n      const lockedDocument = await req.payload.find({\n        collection: 'payload-locked-documents',\n        depth: 1,\n        limit: 1,\n        overrideAccess: false,\n        pagination: false,\n        user: req.user,\n        where: lockedDocumentQuery,\n      })\n\n      if (lockedDocument.docs && lockedDocument.docs.length > 0) {\n        result = {\n          isLocked: true,\n          lastEditedAt: lockedDocument.docs[0]?.updatedAt,\n          user: lockedDocument.docs[0]?.user?.value,\n        }\n\n        const lockOwnerID =\n          typeof lockedDocument.docs[0]?.user?.value === 'object'\n            ? lockedDocument.docs[0]?.user?.value?.id\n            : lockedDocument.docs[0]?.user?.value\n        // Should only update doc if the incoming / current user is also the owner of the locked doc\n        if (updateLastEdited && req.user && lockOwnerID === req.user.id) {\n          await req.payload.db.updateOne({\n            id: lockedDocument.docs[0].id,\n            collection: 'payload-locked-documents',\n            data: {},\n            returning: false,\n          })\n        }\n      } else {\n        // If NO ACTIVE lock document exists, first delete any expired locks and then create a fresh lock\n        // Where updatedAt is older than the duration that is specified in the config\n        let deleteExpiredLocksQuery\n\n        if (collectionSlug) {\n          deleteExpiredLocksQuery = {\n            and: [\n              { 'document.relationTo': { equals: collectionSlug } },\n              {\n                updatedAt: {\n                  less_than: new Date(now - lockDurationInMilliseconds).toISOString(),\n                },\n              },\n            ],\n          }\n        } else if (globalSlug) {\n          deleteExpiredLocksQuery = {\n            and: [\n              { globalSlug: { equals: globalSlug } },\n              {\n                updatedAt: {\n                  less_than: new Date(now - lockDurationInMilliseconds).toISOString(),\n                },\n              },\n            ],\n          }\n        }\n\n        await req.payload.db.deleteMany({\n          collection: 'payload-locked-documents',\n          where: deleteExpiredLocksQuery,\n        })\n\n        await req.payload.db.create({\n          collection: 'payload-locked-documents',\n          data: {\n            document: collectionSlug\n              ? {\n                  relationTo: collectionSlug,\n                  value: id,\n                }\n              : undefined,\n            globalSlug: globalSlug ? globalSlug : undefined,\n            user: {\n              relationTo: req.user.collection,\n              value: req.user.id,\n            },\n          },\n          returning: false,\n        })\n\n        result = {\n          isLocked: true,\n          lastEditedAt: new Date().toISOString(),\n          user: req.user,\n        }\n      }\n    }\n  }\n\n  return result\n}\n"],"mappings":"AAgBA,MAAMA,mBAAA,GAAsB,IAAI;AAAA;AAEhC,OAAO,MAAMC,sBAAA,GAAyB,MAAAA,CAAO;EAC3CC,EAAE;EACFC,cAAc;EACdC,UAAU;EACVC,GAAG;EACHC;AAAgB,CACX;EACL,IAAIC,MAAA;EAEJ,IAAIL,EAAA,IAAME,UAAA,EAAY;IACpB,IAAII,mBAAA;IAEJ,IAAIL,cAAA,EAAgB;MAClBK,mBAAA,GAAsB;QACpBC,GAAA,EAAK,CACH;UAAE,uBAAuB;YAAEC,MAAA,EAAQP;UAAe;QAAE,GACpD;UAAE,kBAAkB;YAAEO,MAAA,EAAQR;UAAG;QAAE;MAEvC;IACF,OAAO,IAAIE,UAAA,EAAY;MACrBI,mBAAA,GAAsB;QACpBC,GAAA,EAAK,CAAC;UAAEL,UAAA,EAAY;YAAEM,MAAA,EAAQN;UAAW;QAAE;MAC7C;IACF;IAEA,MAAMO,iBAAA,GAAoBR,cAAA,GACtBE,GAAA,CAAIO,OAAO,CAACC,WAAW,GAAGV,cAAA,CAAe,EAAEW,MAAA,CAAOC,aAAA,GAClDV,GAAA,CAAIO,OAAO,CAACE,MAAM,CAACE,OAAO,CAACC,IAAI,CAAEC,CAAA,IAAMA,CAAA,CAAEC,IAAI,KAAKf,UAAA,GAAaW,aAAA;IAEnE,MAAMK,YAAA,GACJ,OAAOT,iBAAA,KAAsB,WAAWA,iBAAA,CAAkBU,QAAQ,GAAGrB,mBAAA;IACvE,MAAMsB,0BAAA,GAA6BF,YAAA,GAAe;IAClD,MAAMG,GAAA,GAAM,IAAIC,IAAA,GAAOC,OAAO;IAE9B,IAAIjB,mBAAA,EAAqB;MACvB;MACAA,mBAAA,CAAoBC,GAAG,CAACiB,IAAI,CAAC;QAC3BC,SAAA,EAAW;UACTC,YAAA,EAAc,IAAIJ,IAAA,CAAKD,GAAA,GAAMD,0BAAA,EAA4BO,WAAW;QACtE;MACF;MAEA,MAAMC,cAAA,GAAiB,MAAMzB,GAAA,CAAIO,OAAO,CAACK,IAAI,CAAC;QAC5Cc,UAAA,EAAY;QACZC,KAAA,EAAO;QACPC,KAAA,EAAO;QACPC,cAAA,EAAgB;QAChBC,UAAA,EAAY;QACZC,IAAA,EAAM/B,GAAA,CAAI+B,IAAI;QACdC,KAAA,EAAO7B;MACT;MAEA,IAAIsB,cAAA,CAAeQ,IAAI,IAAIR,cAAA,CAAeQ,IAAI,CAACC,MAAM,GAAG,GAAG;QACzDhC,MAAA,GAAS;UACPiC,QAAA,EAAU;UACVC,YAAA,EAAcX,cAAA,CAAeQ,IAAI,CAAC,EAAE,EAAEX,SAAA;UACtCS,IAAA,EAAMN,cAAA,CAAeQ,IAAI,CAAC,EAAE,EAAEF,IAAA,EAAMM;QACtC;QAEA,MAAMC,WAAA,GACJ,OAAOb,cAAA,CAAeQ,IAAI,CAAC,EAAE,EAAEF,IAAA,EAAMM,KAAA,KAAU,WAC3CZ,cAAA,CAAeQ,IAAI,CAAC,EAAE,EAAEF,IAAA,EAAMM,KAAA,EAAOxC,EAAA,GACrC4B,cAAA,CAAeQ,IAAI,CAAC,EAAE,EAAEF,IAAA,EAAMM,KAAA;QACpC;QACA,IAAIpC,gBAAA,IAAoBD,GAAA,CAAI+B,IAAI,IAAIO,WAAA,KAAgBtC,GAAA,CAAI+B,IAAI,CAAClC,EAAE,EAAE;UAC/D,MAAMG,GAAA,CAAIO,OAAO,CAACgC,EAAE,CAACC,SAAS,CAAC;YAC7B3C,EAAA,EAAI4B,cAAA,CAAeQ,IAAI,CAAC,EAAE,CAACpC,EAAE;YAC7B6B,UAAA,EAAY;YACZe,IAAA,EAAM,CAAC;YACPC,SAAA,EAAW;UACb;QACF;MACF,OAAO;QACL;QACA;QACA,IAAIC,uBAAA;QAEJ,IAAI7C,cAAA,EAAgB;UAClB6C,uBAAA,GAA0B;YACxBvC,GAAA,EAAK,CACH;cAAE,uBAAuB;gBAAEC,MAAA,EAAQP;cAAe;YAAE,GACpD;cACEwB,SAAA,EAAW;gBACTsB,SAAA,EAAW,IAAIzB,IAAA,CAAKD,GAAA,GAAMD,0BAAA,EAA4BO,WAAW;cACnE;YACF;UAEJ;QACF,OAAO,IAAIzB,UAAA,EAAY;UACrB4C,uBAAA,GAA0B;YACxBvC,GAAA,EAAK,CACH;cAAEL,UAAA,EAAY;gBAAEM,MAAA,EAAQN;cAAW;YAAE,GACrC;cACEuB,SAAA,EAAW;gBACTsB,SAAA,EAAW,IAAIzB,IAAA,CAAKD,GAAA,GAAMD,0BAAA,EAA4BO,WAAW;cACnE;YACF;UAEJ;QACF;QAEA,MAAMxB,GAAA,CAAIO,OAAO,CAACgC,EAAE,CAACM,UAAU,CAAC;UAC9BnB,UAAA,EAAY;UACZM,KAAA,EAAOW;QACT;QAEA,MAAM3C,GAAA,CAAIO,OAAO,CAACgC,EAAE,CAACO,MAAM,CAAC;UAC1BpB,UAAA,EAAY;UACZe,IAAA,EAAM;YACJM,QAAA,EAAUjD,cAAA,GACN;cACEkD,UAAA,EAAYlD,cAAA;cACZuC,KAAA,EAAOxC;YACT,IACAoD,SAAA;YACJlD,UAAA,EAAYA,UAAA,GAAaA,UAAA,GAAakD,SAAA;YACtClB,IAAA,EAAM;cACJiB,UAAA,EAAYhD,GAAA,CAAI+B,IAAI,CAACL,UAAU;cAC/BW,KAAA,EAAOrC,GAAA,CAAI+B,IAAI,CAAClC;YAClB;UACF;UACA6C,SAAA,EAAW;QACb;QAEAxC,MAAA,GAAS;UACPiC,QAAA,EAAU;UACVC,YAAA,EAAc,IAAIjB,IAAA,GAAOK,WAAW;UACpCO,IAAA,EAAM/B,GAAA,CAAI+B;QACZ;MACF;IACF;EACF;EAEA,OAAO7B,MAAA;AACT","ignoreList":[]}