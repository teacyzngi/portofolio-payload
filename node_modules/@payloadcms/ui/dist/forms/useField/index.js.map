{"version":3,"file":"index.js","names":["c","_c","React","useCallback","useMemo","useRef","useThrottledEffect","useAuth","useConfig","useDocumentInfo","useOperation","useTranslation","useDocumentForm","useForm","useFormFields","useFormInitializing","useFormProcessing","useFormSubmitted","useFieldPath","useFieldInForm","options","$","t0","disableFormData","t1","hasRows","path","pathFromOptions","potentiallyStalePath","validate","undefined","pathFromContext","submitted","processing","initializing","user","id","collectionSlug","operation","dispatchField","_temp","t2","t3","fields","field","t","config","getData","getDataByPath","getSiblingData","setModified","documentForm","filterOptions","value","initialValue","valid","showError","prevValid","prevErrorMessage","errorMessage","split","pathSegments","t4","e","t5","disableModifyingForm","isEvent","preventDefault","stopPropagation","val","target","type","setValue","blocksFilterOptions","t6","customComponents","t7","t8","t9","errorPaths","t10","rows","t11","selectFilterOptions","t12","t13","disabled","formInitializing","formProcessing","formSubmitted","result","t14","validateField","valueToValidate","Array","isArray","current","valid_0","data","isValid","blockData","event","preferences","req","payload","siblingData","update","t15","t16","FieldContext","createContext","useField","fieldContext","use","hasFieldContext","currentPath","Error","dispatch"],"sources":["../../../src/forms/useField/index.tsx"],"sourcesContent":["'use client'\nimport type { PayloadRequest } from 'payload'\n\nimport React, { useCallback, useMemo, useRef } from 'react'\n\nimport type { UPDATE } from '../Form/types.js'\nimport type { FieldType, Options } from './types.js'\n\nexport type { FieldType, Options }\n\nimport { useThrottledEffect } from '../../hooks/useThrottledEffect.js'\nimport { useAuth } from '../../providers/Auth/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useDocumentInfo } from '../../providers/DocumentInfo/index.js'\nimport { useOperation } from '../../providers/Operation/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport {\n  useDocumentForm,\n  useForm,\n  useFormFields,\n  useFormInitializing,\n  useFormProcessing,\n  useFormSubmitted,\n} from '../Form/context.js'\nimport { useFieldPath } from '../RenderFields/context.js'\n\nconst useFieldInForm = <TValue,>(options?: Options): FieldType<TValue> => {\n  const {\n    disableFormData = false,\n    hasRows,\n    path: pathFromOptions,\n    potentiallyStalePath,\n    validate,\n  } = options || {}\n\n  const pathFromContext = useFieldPath()\n\n  // This is a workaround for stale props given to server rendered components.\n  // See the notes in the `potentiallyStalePath` type definition for more details.\n  const path = pathFromOptions || pathFromContext || potentiallyStalePath\n\n  const submitted = useFormSubmitted()\n  const processing = useFormProcessing()\n  const initializing = useFormInitializing()\n  const { user } = useAuth()\n  const { id, collectionSlug } = useDocumentInfo()\n  const operation = useOperation()\n\n  const dispatchField = useFormFields(([_, dispatch]) => dispatch)\n  const field = useFormFields(([fields]) => (fields && fields?.[path]) || null)\n\n  const { t } = useTranslation()\n  const { config } = useConfig()\n\n  const { getData, getDataByPath, getSiblingData, setModified } = useForm()\n  const documentForm = useDocumentForm()\n\n  const filterOptions = field?.filterOptions\n  const value = field?.value as TValue\n  const initialValue = field?.initialValue as TValue\n  const valid = typeof field?.valid === 'boolean' ? field.valid : true\n  const showError = valid === false && submitted\n\n  const prevValid = useRef(valid)\n  const prevErrorMessage = useRef(field?.errorMessage)\n\n  const pathSegments = path ? path.split('.') : []\n\n  // Method to return from `useField`, used to\n  // update field values from field component(s)\n  const setValue = useCallback(\n    (e, disableModifyingForm = false) => {\n      // TODO:\n      // There are no built-in fields that pass events into `e`.\n      // Remove this check in the next major version.\n      const isEvent =\n        e &&\n        typeof e === 'object' &&\n        typeof e.preventDefault === 'function' &&\n        typeof e.stopPropagation === 'function'\n\n      const val = isEvent ? e.target.value : e\n\n      dispatchField({\n        type: 'UPDATE',\n        disableFormData: disableFormData || (hasRows && val > 0),\n        path,\n        value: val,\n      })\n\n      if (!disableModifyingForm) {\n        setModified(true)\n      }\n    },\n    [setModified, path, dispatchField, disableFormData, hasRows],\n  )\n\n  // Store result from hook as ref\n  // to prevent unnecessary rerenders\n  const result: FieldType<TValue> = useMemo(\n    () => ({\n      blocksFilterOptions: field?.blocksFilterOptions,\n      customComponents: field?.customComponents,\n      disabled: processing || initializing,\n      errorMessage: field?.errorMessage,\n      errorPaths: field?.errorPaths || [],\n      filterOptions,\n      formInitializing: initializing,\n      formProcessing: processing,\n      formSubmitted: submitted,\n      initialValue,\n      path,\n      rows: field?.rows,\n      selectFilterOptions: field?.selectFilterOptions,\n      setValue,\n      showError,\n      valid: field?.valid,\n      value,\n    }),\n    [\n      field,\n      processing,\n      setValue,\n      showError,\n      submitted,\n      value,\n      initialValue,\n      path,\n      filterOptions,\n      initializing,\n    ],\n  )\n\n  // Throttle the validate function\n  useThrottledEffect(\n    () => {\n      const validateField = async () => {\n        let valueToValidate = value\n\n        if (field?.rows && Array.isArray(field.rows)) {\n          valueToValidate = getDataByPath(path)\n        }\n\n        let errorMessage: string | undefined = prevErrorMessage.current\n        let valid: boolean | string = prevValid.current\n\n        const data = getData()\n        const isValid =\n          typeof validate === 'function'\n            ? await validate(valueToValidate, {\n                id,\n                blockData: undefined, // Will be expensive to get - not worth to pass to client-side validation, as this can be obtained by the user using `useFormFields()`\n                collectionSlug,\n                data: documentForm?.getData ? documentForm.getData() : data,\n                event: 'onChange',\n                operation,\n                path: pathSegments,\n                preferences: {} as any,\n                req: {\n                  payload: {\n                    config,\n                  },\n                  t,\n                  user,\n                } as unknown as PayloadRequest,\n                siblingData: getSiblingData(path),\n              })\n            : typeof prevErrorMessage.current === 'string'\n              ? prevErrorMessage.current\n              : prevValid.current\n\n        if (typeof isValid === 'string') {\n          valid = false\n          errorMessage = isValid\n        } else if (typeof isValid === 'boolean') {\n          valid = isValid\n          errorMessage = undefined\n        }\n\n        // Only dispatch if the validation result has changed\n        // This will prevent unnecessary rerenders\n        if (valid !== prevValid.current || errorMessage !== prevErrorMessage.current) {\n          prevValid.current = valid\n          prevErrorMessage.current = errorMessage\n\n          const update: UPDATE = {\n            type: 'UPDATE',\n            errorMessage,\n            path,\n            rows: field?.rows,\n            valid,\n            validate,\n            value,\n          }\n\n          if (disableFormData || (hasRows ? typeof value === 'number' && value > 0 : false)) {\n            update.disableFormData = true\n          }\n\n          if (typeof dispatchField === 'function') {\n            dispatchField(update)\n          }\n        }\n      }\n\n      void validateField()\n    },\n    150,\n    [\n      value,\n      disableFormData,\n      dispatchField,\n      getData,\n      getSiblingData,\n      getDataByPath,\n      id,\n      operation,\n      path,\n      user,\n      validate,\n      field?.rows,\n      collectionSlug,\n    ],\n  )\n\n  return result\n}\n\n/**\n * Context to allow providing useField value for fields directly, if managed outside the Form\n *\n * @experimental\n */\nexport const FieldContext = React.createContext<FieldType<unknown> | undefined>(undefined)\n\n/**\n * Get and set the value of a form field.\n *\n * @see https://payloadcms.com/docs/admin/react-hooks#usefield\n */\nexport const useField = <TValue,>(options?: Options): FieldType<TValue> => {\n  const pathFromContext = useFieldPath()\n\n  const fieldContext = React.use(FieldContext) as FieldType<TValue> | undefined\n\n  // Lock the mode on first render so hook order is stable forever. This ensures\n  // that hooks are called in the same order each time a component renders => should\n  // not break the rule of hooks.\n  const hasFieldContext = React.useRef<false | null | true>(null)\n  if (hasFieldContext.current === null) {\n    // Use field context, if a field context exists **and** the path matches. If the path\n    // does not match, this could be the field context of a parent field => there likely is\n    // a nested <Form /> we should use instead => 'form'\n    const currentPath = options?.path || pathFromContext || options.potentiallyStalePath\n\n    hasFieldContext.current =\n      fieldContext && currentPath && fieldContext.path === currentPath ? true : false\n  }\n\n  if (hasFieldContext.current === true) {\n    if (!fieldContext) {\n      // Provider was removed after mount. That violates hook guarantees.\n      throw new Error('FieldContext was removed after mount. This breaks hook ordering.')\n    }\n    return fieldContext\n  }\n\n  // We intentionally guard this hook call with a mode that is fixed on first render.\n  // The order is consistent across renders. Silence the linter’s false positive.\n\n  // eslint-disable-next-line react-compiler/react-compiler\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useFieldInForm<TValue>(options)\n}\n"],"mappings":"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","ignoreList":[]}