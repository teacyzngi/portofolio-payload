{"version":3,"file":"buildPathSegments.js","names":["fieldAffectsData","buildPathSegments","fields","reduce","acc","field","undefined","push","name","type","tabs","forEach","tab"],"sources":["../../../src/forms/WatchChildErrors/buildPathSegments.ts"],"sourcesContent":["'use client'\nimport type { ClientField } from 'payload'\n\nimport { fieldAffectsData } from 'payload/shared'\n\nexport const buildPathSegments = (fields: ClientField[]): (`${string}.` | string)[] => {\n  return fields.reduce((acc: (`${string}.` | string)[], field) => {\n    const fields: ClientField[] = 'fields' in field ? field.fields : undefined\n\n    if (fields) {\n      if (fieldAffectsData(field)) {\n        // group, block, array\n        acc.push(`${field.name}.`)\n      } else {\n        // rows, collapsibles, unnamed-tab\n        acc.push(...buildPathSegments(fields))\n      }\n    } else if (field.type === 'tabs') {\n      // tabs\n      if ('tabs' in field) {\n        field.tabs?.forEach((tab) => {\n          if ('name' in tab) {\n            acc.push(`${tab.name}.`)\n          } else {\n            acc.push(...buildPathSegments(tab.fields))\n          }\n        })\n      }\n    } else if (fieldAffectsData(field)) {\n      // text, number, date, etc.\n      acc.push(field.name)\n    }\n\n    return acc\n  }, [])\n}\n"],"mappings":"AAAA;;AAGA,SAASA,gBAAgB,QAAQ;AAEjC,OAAO,MAAMC,iBAAA,GAAqBC,MAAA;EAChC,OAAOA,MAAA,CAAOC,MAAM,CAAC,CAACC,GAAA,EAAgCC,KAAA;IACpD,MAAMH,MAAA,GAAwB,YAAYG,KAAA,GAAQA,KAAA,CAAMH,MAAM,GAAGI,SAAA;IAEjE,IAAIJ,MAAA,EAAQ;MACV,IAAIF,gBAAA,CAAiBK,KAAA,GAAQ;QAC3B;QACAD,GAAA,CAAIG,IAAI,CAAC,GAAGF,KAAA,CAAMG,IAAI,GAAG;MAC3B,OAAO;QACL;QACAJ,GAAA,CAAIG,IAAI,IAAIN,iBAAA,CAAkBC,MAAA;MAChC;IACF,OAAO,IAAIG,KAAA,CAAMI,IAAI,KAAK,QAAQ;MAChC;MACA,IAAI,UAAUJ,KAAA,EAAO;QACnBA,KAAA,CAAMK,IAAI,EAAEC,OAAA,CAASC,GAAA;UACnB,IAAI,UAAUA,GAAA,EAAK;YACjBR,GAAA,CAAIG,IAAI,CAAC,GAAGK,GAAA,CAAIJ,IAAI,GAAG;UACzB,OAAO;YACLJ,GAAA,CAAIG,IAAI,IAAIN,iBAAA,CAAkBW,GAAA,CAAIV,MAAM;UAC1C;QACF;MACF;IACF,OAAO,IAAIF,gBAAA,CAAiBK,KAAA,GAAQ;MAClC;MACAD,GAAA,CAAIG,IAAI,CAACF,KAAA,CAAMG,IAAI;IACrB;IAEA,OAAOJ,GAAA;EACT,GAAG,EAAE;AACP","ignoreList":[]}