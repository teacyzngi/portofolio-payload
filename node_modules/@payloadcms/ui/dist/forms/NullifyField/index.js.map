{"version":3,"file":"index.js","names":["c","_c","React","Banner","CheckboxField","useConfig","useLocale","useTranslation","useForm","baseClass","NullifyLocaleField","t0","$","fieldValue","localized","path","readOnly","t1","undefined","code","currentLocale","config","t2","localization","checked","setChecked","useState","t","dispatchFields","setModified","defaultLocale","fallback","t3","useFallback","type","value","onChange","hideCheckbox","Array","isArray","length","t4","_jsx","className","children","field","name","label","id","replace","schemaPath"],"sources":["../../../src/forms/NullifyField/index.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\n\nimport { Banner } from '../../elements/Banner/index.js'\nimport { CheckboxField } from '../../fields/Checkbox/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useLocale } from '../../providers/Locale/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { useForm } from '../Form/context.js'\nimport './index.scss'\n\nconst baseClass = 'nullify-locale-field'\n\ntype NullifyLocaleFieldProps = {\n  readonly fieldValue?: [] | null | number\n  readonly localized: boolean\n  readonly path: string\n  readonly readOnly?: boolean\n}\n\nexport const NullifyLocaleField: React.FC<NullifyLocaleFieldProps> = ({\n  fieldValue,\n  localized,\n  path,\n  readOnly = false,\n}) => {\n  const { code: currentLocale } = useLocale()\n  const {\n    config: { localization },\n  } = useConfig()\n  const [checked, setChecked] = React.useState<boolean>(typeof fieldValue !== 'number')\n  const { t } = useTranslation()\n  const { dispatchFields, setModified } = useForm()\n\n  if (!localized || !localization) {\n    // hide when field is not localized or localization is not enabled\n    return null\n  }\n\n  if (localization.defaultLocale === currentLocale || !localization.fallback) {\n    // if editing default locale or when fallback is disabled\n    return null\n  }\n\n  const onChange = () => {\n    const useFallback = !checked\n\n    dispatchFields({\n      type: 'UPDATE',\n      path,\n      value: useFallback ? null : fieldValue || 0,\n    })\n    setModified(true)\n    setChecked(useFallback)\n  }\n\n  if (fieldValue) {\n    let hideCheckbox = false\n    if (typeof fieldValue === 'number' && fieldValue > 0) {\n      hideCheckbox = true\n    }\n    if (Array.isArray(fieldValue) && fieldValue.length > 0) {\n      hideCheckbox = true\n    }\n\n    if (hideCheckbox) {\n      if (checked) {\n        setChecked(false)\n      } // uncheck when field has value\n      return null\n    }\n  }\n\n  return (\n    <Banner className={baseClass}>\n      {!fieldValue && readOnly ? (\n        t('general:fallbackToDefaultLocale')\n      ) : (\n        <CheckboxField\n          checked={checked}\n          field={{\n            name: '',\n            label: t('general:fallbackToDefaultLocale'),\n          }}\n          id={`field-${path.replace(/\\./g, '__')}`}\n          onChange={onChange}\n          path={path}\n          schemaPath=\"\"\n        />\n      )}\n    </Banner>\n  )\n}\n"],"mappings":"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","ignoreList":[]}