{"version":3,"file":"RenderField.js","names":["c","_c","React","ArrayField","BlocksField","CheckboxField","CodeField","CollapsibleField","DateTimeField","EmailField","GroupField","HiddenField","JoinField","JSONField","NumberField","PointField","RadioGroupField","RelationshipField","RichTextField","RowField","SelectField","TabsField","TextField","TextareaField","UIField","UploadField","useFormFields","RenderField","t0","$","clientFieldConfig","forceRender","indexPath","parentPath","parentSchemaPath","path","permissions","readOnly","schemaPath","t1","t2","fields","customComponents","Field","CustomField","Symbol","for","baseFieldProps","admin","hidden","_jsx","undefined","bb0","iterableFieldProps","type","field"],"sources":["../../../src/forms/RenderFields/RenderField.tsx"],"sourcesContent":["'use client'\n\nimport type {\n  ClientComponentProps,\n  ClientField,\n  FieldPaths,\n  SanitizedFieldPermissions,\n} from 'payload'\n\nimport React from 'react'\n\nimport { ArrayField } from '../../fields/Array/index.js'\nimport { BlocksField } from '../../fields/Blocks/index.js'\nimport { CheckboxField } from '../../fields/Checkbox/index.js'\nimport { CodeField } from '../../fields/Code/index.js'\nimport { CollapsibleField } from '../../fields/Collapsible/index.js'\nimport { DateTimeField } from '../../fields/DateTime/index.js'\nimport { EmailField } from '../../fields/Email/index.js'\nimport { GroupField } from '../../fields/Group/index.js'\nimport { HiddenField } from '../../fields/Hidden/index.js'\nimport { JoinField } from '../../fields/Join/index.js'\nimport { JSONField } from '../../fields/JSON/index.js'\nimport { NumberField } from '../../fields/Number/index.js'\nimport { PointField } from '../../fields/Point/index.js'\nimport { RadioGroupField } from '../../fields/RadioGroup/index.js'\nimport { RelationshipField } from '../../fields/Relationship/index.js'\nimport { RichTextField } from '../../fields/RichText/index.js'\nimport { RowField } from '../../fields/Row/index.js'\nimport { SelectField } from '../../fields/Select/index.js'\nimport { TabsField } from '../../fields/Tabs/index.js'\nimport { TextField } from '../../fields/Text/index.js'\nimport { TextareaField } from '../../fields/Textarea/index.js'\nimport { UIField } from '../../fields/UI/index.js'\nimport { UploadField } from '../../fields/Upload/index.js'\nimport { useFormFields } from '../../forms/Form/index.js'\n\ntype RenderFieldProps = {\n  clientFieldConfig: ClientField\n  permissions: SanitizedFieldPermissions\n} & FieldPaths &\n  Pick<ClientComponentProps, 'forceRender' | 'readOnly' | 'schemaPath'>\n\nexport function RenderField({\n  clientFieldConfig,\n  forceRender,\n  indexPath,\n  parentPath,\n  parentSchemaPath,\n  path,\n  permissions,\n  readOnly,\n  schemaPath,\n}: RenderFieldProps) {\n  const CustomField = useFormFields(([fields]) => fields && fields?.[path]?.customComponents?.Field)\n\n  const baseFieldProps: Pick<\n    ClientComponentProps,\n    'forceRender' | 'permissions' | 'readOnly' | 'schemaPath'\n  > = {\n    forceRender,\n    permissions,\n    readOnly,\n    schemaPath,\n  }\n\n  if (clientFieldConfig.admin?.hidden) {\n    return <HiddenField {...baseFieldProps} path={path} />\n  }\n\n  if (CustomField !== undefined) {\n    return CustomField || null\n  }\n\n  const iterableFieldProps = {\n    ...baseFieldProps,\n    indexPath,\n    parentPath,\n    parentSchemaPath,\n  }\n\n  switch (clientFieldConfig.type) {\n    case 'array':\n      return <ArrayField {...iterableFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'blocks':\n      return <BlocksField {...iterableFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'checkbox':\n      return <CheckboxField {...baseFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'code':\n      return <CodeField {...baseFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'collapsible':\n      return <CollapsibleField {...iterableFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'date':\n      return <DateTimeField {...baseFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'email':\n      return <EmailField {...baseFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'group':\n      return <GroupField {...iterableFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'join':\n      return <JoinField {...baseFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'json':\n      return <JSONField {...baseFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'number':\n      return <NumberField {...baseFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'point':\n      return <PointField {...baseFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'radio':\n      return <RadioGroupField {...baseFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'relationship':\n      return <RelationshipField {...baseFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'richText':\n      return <RichTextField {...baseFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'row':\n      return <RowField {...iterableFieldProps} field={clientFieldConfig} />\n\n    case 'select':\n      return <SelectField {...baseFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'tabs':\n      return <TabsField {...iterableFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'text':\n      return <TextField {...baseFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'textarea':\n      return <TextareaField {...baseFieldProps} field={clientFieldConfig} path={path} />\n\n    case 'ui':\n      return <UIField />\n\n    case 'upload':\n      return <UploadField {...baseFieldProps} field={clientFieldConfig} path={path} />\n  }\n}\n"],"mappings":"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","ignoreList":[]}