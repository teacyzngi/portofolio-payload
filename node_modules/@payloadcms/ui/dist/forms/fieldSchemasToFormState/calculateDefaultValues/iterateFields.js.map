{"version":3,"file":"iterateFields.js","names":["defaultValuePromise","iterateFields","id","data","fields","locale","req","select","selectMode","siblingData","user","promises","forEach","field","push","Promise","all"],"sources":["../../../../src/forms/fieldSchemasToFormState/calculateDefaultValues/iterateFields.ts"],"sourcesContent":["import type {\n  Data,\n  Field,\n  PayloadRequest,\n  SelectMode,\n  SelectType,\n  TabAsField,\n  TypedUser,\n} from 'payload'\n\nimport { defaultValuePromise } from './promise.js'\n\ntype Args<T> = {\n  data: T\n  fields: (Field | TabAsField)[]\n  id?: number | string\n  locale: string | undefined\n  req: PayloadRequest\n  select?: SelectType\n  selectMode?: SelectMode\n  siblingData: Data\n  user: TypedUser\n}\n\nexport const iterateFields = async <T>({\n  id,\n  data,\n  fields,\n  locale,\n  req,\n  select,\n  selectMode,\n  siblingData,\n  user,\n}: Args<T>): Promise<void> => {\n  const promises = []\n\n  fields.forEach((field) => {\n    promises.push(\n      defaultValuePromise({\n        id,\n        data,\n        field,\n        locale,\n        req,\n        select,\n        selectMode,\n        siblingData,\n        user,\n      }),\n    )\n  })\n\n  await Promise.all(promises)\n}\n"],"mappings":"AAUA,SAASA,mBAAmB,QAAQ;AAcpC,OAAO,MAAMC,aAAA,GAAgB,MAAAA,CAAU;EACrCC,EAAE;EACFC,IAAI;EACJC,MAAM;EACNC,MAAM;EACNC,GAAG;EACHC,MAAM;EACNC,UAAU;EACVC,WAAW;EACXC;AAAI,CACI;EACR,MAAMC,QAAA,GAAW,EAAE;EAEnBP,MAAA,CAAOQ,OAAO,CAAEC,KAAA;IACdF,QAAA,CAASG,IAAI,CACXd,mBAAA,CAAoB;MAClBE,EAAA;MACAC,IAAA;MACAU,KAAA;MACAR,MAAA;MACAC,GAAA;MACAC,MAAA;MACAC,UAAA;MACAC,WAAA;MACAC;IACF;EAEJ;EAEA,MAAMK,OAAA,CAAQC,GAAG,CAACL,QAAA;AACpB","ignoreList":[]}