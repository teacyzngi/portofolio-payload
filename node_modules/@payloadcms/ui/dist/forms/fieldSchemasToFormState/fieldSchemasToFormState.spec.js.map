{"version":3,"file":"fieldSchemasToFormState.spec.js","names":["fieldSchemasToFormState","describe","defaultValue","it","fieldSchema","name","type","label","state","fields","expect","text","value","toBe","data","user","email","locale","args"],"sources":["../../../src/forms/fieldSchemasToFormState/fieldSchemasToFormState.spec.js"],"sourcesContent":["import fieldSchemasToFormState from './index.js'\n\ndescribe('Form - fieldSchemasToFormState', () => {\n  const defaultValue = 'Default'\n  it('populates default value - normal fields', async () => {\n    const fieldSchema = [\n      {\n        name: 'text',\n        type: 'text',\n        defaultValue,\n        label: 'Text',\n      },\n    ]\n    const state = await fieldSchemasToFormState({ fields: fieldSchema })\n    expect(state.text.value).toBe(defaultValue)\n  })\n  it('field value overrides defaultValue - normal fields', async () => {\n    const value = 'value'\n    const data = { text: value }\n    const fieldSchema = [\n      {\n        name: 'text',\n        type: 'text',\n        defaultValue,\n        label: 'Text',\n      },\n    ]\n    const state = await fieldSchemasToFormState({ data, fields: fieldSchema })\n    expect(state.text.value).toBe(value)\n  })\n  it('populates default value from a function - normal fields', async () => {\n    const user = { email: 'user@example.com' }\n    const locale = 'en'\n    const fieldSchema = [\n      {\n        name: 'text',\n        type: 'text',\n        defaultValue: (args) => {\n          if (!args.locale) {\n            return 'missing locale'\n          }\n          if (!args.user) {\n            return 'missing user'\n          }\n          return 'Default'\n        },\n        label: 'Text',\n      },\n    ]\n    const state = await fieldSchemasToFormState({ fields: fieldSchema, locale, user })\n    expect(state.text.value).toBe(defaultValue)\n  })\n})\n"],"mappings":"AAAA,OAAOA,uBAAA,MAA6B;AAEpCC,QAAA,CAAS,kCAAkC;EACzC,MAAMC,YAAA,GAAe;EACrBC,EAAA,CAAG,2CAA2C;IAC5C,MAAMC,WAAA,GAAc,CAClB;MACEC,IAAA,EAAM;MACNC,IAAA,EAAM;MACNJ,YAAA;MACAK,KAAA,EAAO;IACT,EACD;IACD,MAAMC,KAAA,GAAQ,MAAMR,uBAAA,CAAwB;MAAES,MAAA,EAAQL;IAAY;IAClEM,MAAA,CAAOF,KAAA,CAAMG,IAAI,CAACC,KAAK,EAAEC,IAAI,CAACX,YAAA;EAChC;EACAC,EAAA,CAAG,sDAAsD;IACvD,MAAMS,KAAA,GAAQ;IACd,MAAME,IAAA,GAAO;MAAEH,IAAA,EAAMC;IAAM;IAC3B,MAAMR,WAAA,GAAc,CAClB;MACEC,IAAA,EAAM;MACNC,IAAA,EAAM;MACNJ,YAAA;MACAK,KAAA,EAAO;IACT,EACD;IACD,MAAMC,KAAA,GAAQ,MAAMR,uBAAA,CAAwB;MAAEc,IAAA;MAAML,MAAA,EAAQL;IAAY;IACxEM,MAAA,CAAOF,KAAA,CAAMG,IAAI,CAACC,KAAK,EAAEC,IAAI,CAACD,KAAA;EAChC;EACAT,EAAA,CAAG,2DAA2D;IAC5D,MAAMY,IAAA,GAAO;MAAEC,KAAA,EAAO;IAAmB;IACzC,MAAMC,MAAA,GAAS;IACf,MAAMb,WAAA,GAAc,CAClB;MACEC,IAAA,EAAM;MACNC,IAAA,EAAM;MACNJ,YAAA,EAAegB,IAAA;QACb,IAAI,CAACA,IAAA,CAAKD,MAAM,EAAE;UAChB,OAAO;QACT;QACA,IAAI,CAACC,IAAA,CAAKH,IAAI,EAAE;UACd,OAAO;QACT;QACA,OAAO;MACT;MACAR,KAAA,EAAO;IACT,EACD;IACD,MAAMC,KAAA,GAAQ,MAAMR,uBAAA,CAAwB;MAAES,MAAA,EAAQL,WAAA;MAAaa,MAAA;MAAQF;IAAK;IAChFL,MAAA,CAAOF,KAAA,CAAMG,IAAI,CAACC,KAAK,EAAEC,IAAI,CAACX,YAAA;EAChC;AACF","ignoreList":[]}