{"version":3,"sources":["../../src/utilities/initClientUploads.ts"],"sourcesContent":["import type { Config, PayloadHandler } from 'payload'\n\nexport const initClientUploads = <ExtraProps extends Record<string, unknown>, T>({\n  clientHandler,\n  collections,\n  config,\n  enabled,\n  extraClientHandlerProps,\n  serverHandler,\n  serverHandlerPath,\n}: {\n  /** Path to clientHandler component */\n  clientHandler: string\n  collections: Record<string, T>\n  config: Config\n  enabled: boolean\n  /** extra props to pass to the client handler */\n  extraClientHandlerProps?: (collection: T) => ExtraProps\n  serverHandler: PayloadHandler\n  serverHandlerPath: string\n}) => {\n  if (enabled) {\n    if (!config.endpoints) {\n      config.endpoints = []\n    }\n\n    /**\n     * Tracks how many times the same handler was already applied.\n     * This allows to apply the same plugin multiple times, for example\n     * to use different buckets for different collections.\n     */\n    let handlerCount = 0\n\n    for (const endpoint of config.endpoints) {\n      // We want to match on 'path', 'path-1', 'path-2', etc.\n      if (endpoint.path?.startsWith(serverHandlerPath)) {\n        handlerCount++\n      }\n    }\n\n    if (handlerCount) {\n      serverHandlerPath = `${serverHandlerPath}-${handlerCount}`\n    }\n\n    config.endpoints.push({\n      handler: serverHandler,\n      method: 'post',\n      path: serverHandlerPath,\n    })\n  }\n\n  if (!config.admin) {\n    config.admin = {}\n  }\n\n  if (!config.admin.dependencies) {\n    config.admin.dependencies = {}\n  }\n  // Ensure client handler is always part of the import map, to avoid\n  // import map discrepancies between dev and prod\n  config.admin.dependencies[clientHandler] = {\n    type: 'function',\n    path: clientHandler,\n  }\n\n  if (!config.admin.components) {\n    config.admin.components = {}\n  }\n\n  if (!config.admin.components.providers) {\n    config.admin.components.providers = []\n  }\n\n  for (const collectionSlug in collections) {\n    const collection = collections[collectionSlug]\n\n    let prefix: string | undefined\n\n    if (\n      collection &&\n      typeof collection === 'object' &&\n      'prefix' in collection &&\n      typeof collection.prefix === 'string'\n    ) {\n      prefix = collection.prefix\n    }\n\n    config.admin.components.providers.push({\n      clientProps: {\n        collectionSlug,\n        enabled,\n        extra: extraClientHandlerProps ? extraClientHandlerProps(collection!) : undefined,\n        prefix,\n        serverHandlerPath,\n      },\n      path: clientHandler,\n    })\n  }\n}\n"],"names":["initClientUploads","clientHandler","collections","config","enabled","extraClientHandlerProps","serverHandler","serverHandlerPath","endpoints","handlerCount","endpoint","path","startsWith","push","handler","method","admin","dependencies","type","components","providers","collectionSlug","collection","prefix","clientProps","extra","undefined"],"mappings":"AAEA,OAAO,MAAMA,oBAAoB,CAAgD,EAC/EC,aAAa,EACbC,WAAW,EACXC,MAAM,EACNC,OAAO,EACPC,uBAAuB,EACvBC,aAAa,EACbC,iBAAiB,EAWlB;IACC,IAAIH,SAAS;QACX,IAAI,CAACD,OAAOK,SAAS,EAAE;YACrBL,OAAOK,SAAS,GAAG,EAAE;QACvB;QAEA;;;;KAIC,GACD,IAAIC,eAAe;QAEnB,KAAK,MAAMC,YAAYP,OAAOK,SAAS,CAAE;YACvC,uDAAuD;YACvD,IAAIE,SAASC,IAAI,EAAEC,WAAWL,oBAAoB;gBAChDE;YACF;QACF;QAEA,IAAIA,cAAc;YAChBF,oBAAoB,GAAGA,kBAAkB,CAAC,EAAEE,cAAc;QAC5D;QAEAN,OAAOK,SAAS,CAACK,IAAI,CAAC;YACpBC,SAASR;YACTS,QAAQ;YACRJ,MAAMJ;QACR;IACF;IAEA,IAAI,CAACJ,OAAOa,KAAK,EAAE;QACjBb,OAAOa,KAAK,GAAG,CAAC;IAClB;IAEA,IAAI,CAACb,OAAOa,KAAK,CAACC,YAAY,EAAE;QAC9Bd,OAAOa,KAAK,CAACC,YAAY,GAAG,CAAC;IAC/B;IACA,mEAAmE;IACnE,gDAAgD;IAChDd,OAAOa,KAAK,CAACC,YAAY,CAAChB,cAAc,GAAG;QACzCiB,MAAM;QACNP,MAAMV;IACR;IAEA,IAAI,CAACE,OAAOa,KAAK,CAACG,UAAU,EAAE;QAC5BhB,OAAOa,KAAK,CAACG,UAAU,GAAG,CAAC;IAC7B;IAEA,IAAI,CAAChB,OAAOa,KAAK,CAACG,UAAU,CAACC,SAAS,EAAE;QACtCjB,OAAOa,KAAK,CAACG,UAAU,CAACC,SAAS,GAAG,EAAE;IACxC;IAEA,IAAK,MAAMC,kBAAkBnB,YAAa;QACxC,MAAMoB,aAAapB,WAAW,CAACmB,eAAe;QAE9C,IAAIE;QAEJ,IACED,cACA,OAAOA,eAAe,YACtB,YAAYA,cACZ,OAAOA,WAAWC,MAAM,KAAK,UAC7B;YACAA,SAASD,WAAWC,MAAM;QAC5B;QAEApB,OAAOa,KAAK,CAACG,UAAU,CAACC,SAAS,CAACP,IAAI,CAAC;YACrCW,aAAa;gBACXH;gBACAjB;gBACAqB,OAAOpB,0BAA0BA,wBAAwBiB,cAAeI;gBACxEH;gBACAhB;YACF;YACAI,MAAMV;QACR;IACF;AACF,EAAC"}