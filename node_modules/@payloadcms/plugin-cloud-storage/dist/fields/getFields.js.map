{"version":3,"sources":["../../src/fields/getFields.ts"],"sourcesContent":["import type { CollectionConfig, Field, GroupField, TextField } from 'payload'\n\nimport path from 'path'\n\nimport type { GeneratedAdapter, GenerateFileURL } from '../types.js'\n\nimport { getAfterReadHook } from '../hooks/afterRead.js'\n\ninterface Args {\n  adapter: GeneratedAdapter\n  collection: CollectionConfig\n  disablePayloadAccessControl?: true\n  generateFileURL?: GenerateFileURL\n  prefix?: string\n}\n\nexport const getFields = ({\n  adapter,\n  collection,\n  disablePayloadAccessControl,\n  generateFileURL,\n  prefix,\n}: Args): Field[] => {\n  const baseURLField: TextField = {\n    name: 'url',\n    type: 'text',\n    admin: {\n      hidden: true,\n      readOnly: true,\n    },\n    label: 'URL',\n  }\n\n  const basePrefixField: TextField = {\n    name: 'prefix',\n    type: 'text',\n    admin: {\n      hidden: true,\n      readOnly: true,\n    },\n  }\n\n  const fields = [...collection.fields, ...(adapter.fields || [])]\n\n  // Inject a hook into all URL fields to generate URLs\n\n  let existingURLFieldIndex = -1\n\n  const existingURLField = fields.find((existingField, i) => {\n    if ('name' in existingField && existingField.name === 'url') {\n      existingURLFieldIndex = i\n      return true\n    }\n    return false\n  }) as TextField\n\n  if (existingURLFieldIndex > -1) {\n    fields.splice(existingURLFieldIndex, 1)\n  }\n\n  fields.push({\n    ...baseURLField,\n    ...(existingURLField || {}),\n    hooks: {\n      afterRead: [\n        getAfterReadHook({ adapter, collection, disablePayloadAccessControl, generateFileURL }),\n        ...(existingURLField?.hooks?.afterRead || []),\n      ],\n    },\n  } as TextField)\n\n  if (typeof collection.upload === 'object' && collection.upload.imageSizes) {\n    let existingSizesFieldIndex = -1\n\n    const existingSizesField = fields.find((existingField, i) => {\n      if ('name' in existingField && existingField.name === 'sizes') {\n        existingSizesFieldIndex = i\n        return true\n      }\n\n      return false\n    }) as GroupField\n\n    if (existingSizesFieldIndex > -1) {\n      fields.splice(existingSizesFieldIndex, 1)\n    }\n\n    const sizesField: Field = {\n      ...(existingSizesField || {}),\n      name: 'sizes',\n      type: 'group',\n      admin: {\n        hidden: true,\n      },\n      fields: collection.upload.imageSizes.map((size) => {\n        const existingSizeField = existingSizesField?.fields.find(\n          (existingField) => 'name' in existingField && existingField.name === size.name,\n        ) as GroupField\n\n        const existingSizeURLField = existingSizeField?.fields.find(\n          (existingField) => 'name' in existingField && existingField.name === 'url',\n        ) as GroupField\n\n        return {\n          ...existingSizeField,\n          name: size.name,\n          type: 'group',\n          fields: [\n            ...(adapter.fields || []),\n            {\n              ...(existingSizeURLField || {}),\n              ...baseURLField,\n              hooks: {\n                afterRead: [\n                  getAfterReadHook({\n                    adapter,\n                    collection,\n                    disablePayloadAccessControl,\n                    generateFileURL,\n                    size,\n                  }),\n                  ...((typeof existingSizeURLField === 'object' &&\n                    'hooks' in existingSizeURLField &&\n                    existingSizeURLField?.hooks?.afterRead) ||\n                    []),\n                ],\n              },\n            },\n          ],\n        } as Field\n      }),\n    }\n\n    fields.push(sizesField)\n  }\n\n  // If prefix is enabled, save it to db\n  if (typeof prefix !== 'undefined') {\n    let existingPrefixFieldIndex = -1\n\n    const existingPrefixField = fields.find((existingField, i) => {\n      if ('name' in existingField && existingField.name === 'prefix') {\n        existingPrefixFieldIndex = i\n        return true\n      }\n      return false\n    }) as TextField\n\n    if (existingPrefixFieldIndex > -1) {\n      fields.splice(existingPrefixFieldIndex, 1)\n    }\n\n    fields.push({\n      ...basePrefixField,\n      ...(existingPrefixField || {}),\n      defaultValue: path.posix.join(prefix),\n    } as TextField)\n  }\n\n  return fields\n}\n"],"names":["path","getAfterReadHook","getFields","adapter","collection","disablePayloadAccessControl","generateFileURL","prefix","baseURLField","name","type","admin","hidden","readOnly","label","basePrefixField","fields","existingURLFieldIndex","existingURLField","find","existingField","i","splice","push","hooks","afterRead","upload","imageSizes","existingSizesFieldIndex","existingSizesField","sizesField","map","size","existingSizeField","existingSizeURLField","existingPrefixFieldIndex","existingPrefixField","defaultValue","posix","join"],"mappings":"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"}