{"version":3,"sources":["../../src/client/createClientUploadHandler.tsx"],"sourcesContent":["'use client'\n\nimport type { UploadCollectionSlug } from 'payload'\n\nimport { useConfig, useEffectEvent, useUploadHandlers } from '@payloadcms/ui'\nimport { Fragment, type ReactNode, useEffect } from 'react'\n\ntype ClientUploadHandlerProps<T extends Record<string, unknown>> = {\n  children: ReactNode\n  collectionSlug: UploadCollectionSlug\n  enabled?: boolean\n  extra: T\n  prefix?: string\n  serverHandlerPath: string\n}\n\nexport const createClientUploadHandler = <T extends Record<string, unknown>>({\n  handler,\n}: {\n  handler: (args: {\n    apiRoute: string\n    collectionSlug: UploadCollectionSlug\n    extra: T\n    file: File\n    prefix?: string\n    serverHandlerPath: string\n    serverURL: string\n    updateFilename: (value: string) => void\n  }) => Promise<unknown>\n}) => {\n  return function ClientUploadHandler({\n    children,\n    collectionSlug,\n    enabled,\n    extra,\n    prefix,\n    serverHandlerPath,\n  }: ClientUploadHandlerProps<T>) {\n    const { setUploadHandler } = useUploadHandlers()\n    const {\n      config: {\n        routes: { api: apiRoute },\n        serverURL,\n      },\n    } = useConfig()\n\n    const initializeHandler = useEffectEvent(() => {\n      if (enabled) {\n        setUploadHandler({\n          collectionSlug,\n          handler: ({ file, updateFilename }) => {\n            return handler({\n              apiRoute,\n              collectionSlug,\n              extra,\n              file,\n              prefix,\n              serverHandlerPath,\n              serverURL,\n              updateFilename,\n            })\n          },\n        })\n      }\n    })\n\n    useEffect(() => {\n      initializeHandler()\n    }, [])\n\n    return <Fragment>{children}</Fragment>\n  }\n}\n"],"names":["useConfig","useEffectEvent","useUploadHandlers","Fragment","useEffect","createClientUploadHandler","handler","ClientUploadHandler","children","collectionSlug","enabled","extra","prefix","serverHandlerPath","setUploadHandler","config","routes","api","apiRoute","serverURL","initializeHandler","file","updateFilename"],"mappings":"AAAA;;AAIA,SAASA,SAAS,EAAEC,cAAc,EAAEC,iBAAiB,QAAQ,iBAAgB;AAC7E,SAASC,QAAQ,EAAkBC,SAAS,QAAQ,QAAO;AAW3D,OAAO,MAAMC,4BAA4B,CAAoC,EAC3EC,OAAO,EAYR;IACC,OAAO,SAASC,oBAAoB,EAClCC,QAAQ,EACRC,cAAc,EACdC,OAAO,EACPC,KAAK,EACLC,MAAM,EACNC,iBAAiB,EACW;QAC5B,MAAM,EAAEC,gBAAgB,EAAE,GAAGZ;QAC7B,MAAM,EACJa,QAAQ,EACNC,QAAQ,EAAEC,KAAKC,QAAQ,EAAE,EACzBC,SAAS,EACV,EACF,GAAGnB;QAEJ,MAAMoB,oBAAoBnB,eAAe;YACvC,IAAIS,SAAS;gBACXI,iBAAiB;oBACfL;oBACAH,SAAS,CAAC,EAAEe,IAAI,EAAEC,cAAc,EAAE;wBAChC,OAAOhB,QAAQ;4BACbY;4BACAT;4BACAE;4BACAU;4BACAT;4BACAC;4BACAM;4BACAG;wBACF;oBACF;gBACF;YACF;QACF;QAEAlB,UAAU;YACRgB;QACF,GAAG,EAAE;QAEL,qBAAO,KAACjB;sBAAUK;;IACpB;AACF,EAAC"}